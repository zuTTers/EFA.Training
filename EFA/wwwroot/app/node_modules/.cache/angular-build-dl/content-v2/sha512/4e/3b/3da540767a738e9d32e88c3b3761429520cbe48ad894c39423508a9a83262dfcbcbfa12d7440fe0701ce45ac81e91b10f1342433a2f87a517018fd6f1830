{"version":3,"sources":["./src/app/views/General/Customer/customer-dialog.component.ts","./src/app/views/General/Customer/customer-dialog.component.html","./src/app/views/General/Customer/customer.component.ts","./src/app/views/General/Customer/customer.component.html","./src/app/views/General/Customer/customer.service.ts","./src/app/views/General/Genu/genu-dialog.component.ts","./src/app/views/General/Genu/genu-dialog.component.html","./src/app/views/General/Genu/genu.component.ts","./src/app/views/General/Genu/genu.component.html","./src/app/views/General/Genu/genu.service.ts","./src/app/views/General/Patient/patient-dialog.component.ts","./src/app/views/General/Patient/patient-dialog.component.html","./src/app/views/General/Patient/patient.component.ts","./src/app/views/General/Patient/patient.component.html","./src/app/views/General/Patient/patient.service.ts","./src/app/views/General/VaccinationTransaction/vaccinationtransaction-dialog.component.ts","./src/app/views/General/VaccinationTransaction/vaccinationtransaction-dialog.component.html","./src/app/views/General/VaccinationTransaction/vaccinationtransaction.component.ts","./src/app/views/General/VaccinationTransaction/vaccinationtransaction.component.html","./src/app/views/General/VaccinationTransaction/vaccinationtransaction.service.ts","./src/app/views/General/VaccinationType/vaccinationtype-dialog.component.ts","./src/app/views/General/VaccinationType/vaccinationtype-dialog.component.html","./src/app/views/General/VaccinationType/vaccinationtype.component.ts","./src/app/views/General/VaccinationType/vaccinationtype.component.html","./src/app/views/General/VaccinationType/vaccinationtype.service.ts","./src/app/views/General/general.module.ts","./src/app/views/General/general.routing.ts"],"names":[],"mappings":"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","file":"src_app_views_General_general_module_ts-es2015.js","sourcesContent":["import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { CustomerData } from \"./customer.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { CustomerService } from './customer.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"customer-dialog\",\r\n    templateUrl: \"./customer-dialog.component.html\"\r\n})\r\nexport class CustomerDialogComponent {\r\n\r\n    row: CustomerData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<CustomerDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private customerService: CustomerService,\r\n        private translate: TranslateService,\r\n        private navigationService: NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.customerService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                    this.translate.instant(response.message),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(response.errorMessage),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'CUSTOMER.CUSTOMER' | translate}}  - {{row.customerId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'CUSTOMER.CUSTOMER' | translate}} - {{row.customerId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew!=true\">\r\n        <mat-label>{{ 'CUSTOMER.CUSTOMERID' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.customerId\" disabled=\"isNew!=true\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.FULLNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.fullName\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.IDENTITYNUMBER' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.identityNumber\" maxlength=\"11\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.PHONENUMBER' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.phoneNumber\" maxlength=\"10\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.ADDRESS' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.address\">\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { CustomerService } from './customer.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { CustomerDialogComponent } from './customer-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'customer-table',\r\n    templateUrl: './customer.component.html',\r\n    styleUrls: ['./customer.component.scss']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: CustomerFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private customerService: CustomerService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new CustomerFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new CustomerFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('CUSTOMER.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.customerService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new CustomerData();\r\n\r\n        emptyData.customerId = 0;\n        emptyData.identityNumber = '';\n        emptyData.fullName = '';\n        emptyData.phoneNumber = '';\n        emptyData.address = '';\n        emptyData.createdUser = 0;\n        emptyData.createdDate = new Date();\n        emptyData.updatedUser = 0;\n        emptyData.updatedDate = new Date();\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: CustomerData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: CustomerData, isNew: boolean) {\r\n\r\n        this.dialog.open(CustomerDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: CustomerData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.customerService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                response.errorMessage, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\n                prop: 'customerId',\n                translate: 'CUSTOMERID',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'identityNumber',\n                translate: 'IDENTITYNUMBER',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'fullName',\n                translate: 'FULLNAME',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'phoneNumber',\n                translate: 'PHONENUMBER',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'address',\n                translate: 'ADDRESS',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class CustomerData {\r\n\r\n    customerId: number;\n    identityNumber: string;\n    fullName: string;\n    phoneNumber: string;\n    address: string;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class CustomerFilter {\r\n\r\n    customerId: number;\n    identityNumber: string;\n    fullName: string;\n    phoneNumber: string;\n    address: string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"customerId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.CUSTOMERID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"CustomerId\"> {{row.customerId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"identityNumber\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.IDENTITYNUMBER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IdentityNumber\"> {{row.identityNumber}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"fullName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.FULLNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FullName\"> {{row.fullName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"phoneNumber\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.PHONENUMBER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"PhoneNumber\"> {{row.phoneNumber}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"address\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.ADDRESS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Address\"> {{row.address}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'CUSTOMER.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.CUSTOMERID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.customerId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.IDENTITYNUMBER'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.identityNumber\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.FULLNAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.fullName\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.PHONENUMBER'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.phoneNumber\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.ADDRESS'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.address\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'CUSTOMER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'CUSTOMER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CustomerData, CustomerFilter } from \"./customer.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n    endPointBase = environment.apiURL + \"/Customer/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: CustomerData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveCustomer\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: CustomerData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteCustomer?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: CustomerFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetCustomerList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { GenuData } from \"./genu.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { GenuService } from './genu.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"genu-dialog\",\r\n    templateUrl: \"./genu-dialog.component.html\"\r\n})\r\nexport class GenuDialogComponent {\r\n\r\n    row: GenuData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<GenuDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private genuService: GenuService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.genuService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'GENU.GENU' | translate}}  - {{row.raceId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'GENU.GENU' | translate}} - {{row.raceId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{ 'GENU.NAME' | translate }}</mat-label>\n   <input type=\"text\" matInput [(ngModel)]=\"row.name\"> \n</mat-form-field>\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{ 'GENU.DESCRIPTION' | translate }}</mat-label>\n   <input type=\"text\" matInput [(ngModel)]=\"row.description\"> \n</mat-form-field>\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n   <mat-slide-toggle [(ngModel)]=\"row.status\"> </mat-slide-toggle>\n   <span style=\"margin-left:10px;\">{{ 'GENU.STATUS' | translate }}</span>\n   <textarea matInput style=\"display:none;\"></textarea>\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { GenuService } from './genu.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { GenuDialogComponent } from './genu-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'genu-table',\r\n    templateUrl: './genu.component.html',\r\n    styleUrls: ['./genu.component.scss']\r\n})\r\nexport class GenuComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: GenuFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private genuService:  GenuService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  GenuFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  GenuFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('GENU.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.genuService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new GenuData();\r\n\r\n        emptyData.raceId = 0;\r\nemptyData.name = '';\r\nemptyData.description = '';\r\nemptyData.status = false;\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: GenuData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: GenuData, isNew: boolean) {\r\n\r\n        this.dialog.open(GenuDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: GenuData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.genuService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    response.errorMessage, {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'raceId',\r\n   translate: 'RACEID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'name',\r\n   translate: 'NAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'description',\r\n   translate: 'DESCRIPTION',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'status',\r\n   translate: 'STATUS',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GenuData {\r\n\r\n    raceId : number;\r\nname : string;\r\ndescription : string;\r\nstatus : boolean;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class GenuFilter {\r\n\r\n    raceId : number;\r\nname : string;\r\ndescription : string;\r\nstatus : boolean;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"raceId\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.RACEID' | translate}} </mat-header-cell> \n    <mat-cell *matCellDef=\"let row\" data-label=\"RaceId\"> {{row.raceId}}</mat-cell> \n</ng-container>\n\n<ng-container matColumnDef=\"name\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.NAME' | translate}} </mat-header-cell> \n    <mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.name}}</mat-cell> \n</ng-container>\n\n<ng-container matColumnDef=\"description\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.DESCRIPTION' | translate}} </mat-header-cell> \n    <mat-cell *matCellDef=\"let row\" data-label=\"Description\"> {{row.description}}</mat-cell> \n</ng-container>\n\n<ng-container matColumnDef=\"status\">\n   <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.STATUS' | translate}}  </mat-header-cell>\n   <mat-cell *matCellDef=\"let row\" data-label=\"Status\">\n       <mat-slide-toggle [(ngModel)]=\"row.status\" disabled> </mat-slide-toggle>\n   </mat-cell>\n</ng-container>\n\n<ng-container matColumnDef=\"updatedDate\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.UPDATEDDATE' | translate}} </mat-header-cell> \n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \n</ng-container>\n\n<ng-container matColumnDef=\"updatedUser\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.UPDATEDUSER' | translate}} </mat-header-cell> \n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \n</ng-container>\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'GENU.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{'GENU.RACEID'| translate}}</mat-label>\n    <input matInput type=\"number\" [(ngModel)]=\"filter.raceId\">\n</mat-form-field>\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{'GENU.NAME'| translate}}</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"filter.name\">\n</mat-form-field>\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{'GENU.DESCRIPTION'| translate}}</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"filter.description\">\n</mat-form-field>\n<mat-slide-toggle [(ngModel)]=\"filter.status\">{{'GENU.STATUS'| translate}}</mat-slide-toggle>\n<div>\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n       <mat-label>{{'GENU.CREATEDDATE'| translate}}</mat-label> \n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\n       <mat-datepicker #createdDatepicker></mat-datepicker>\n   </mat-form-field>\n   &nbsp;\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n       <mat-label>{{'GENU.CREATEDDATE'| translate}}</mat-label>\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\n       <mat-datepicker #createdDate2picker></mat-datepicker>\n   </mat-form-field>\n</div>\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{'GENU.CREATEDUSER'| translate}}</mat-label>\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { GenuData, GenuFilter } from \"./genu.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GenuService {\r\n\r\n    endPointBase = environment.apiURL + \"/Genu/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: GenuData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveGenu\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: GenuData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteGenu?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: GenuFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetGenuList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { PatientData } from \"./patient.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PatientService } from './patient.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"patient-dialog\",\r\n    templateUrl: \"./patient-dialog.component.html\"\r\n})\r\nexport class PatientDialogComponent {\r\n\r\n    row: PatientData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<PatientDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private patientService: PatientService,\r\n        private translate: TranslateService,\r\n        private navigationService: NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.patientService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                    this.translate.instant(response.message),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(response.errorMessage),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    onChange($event, row, field) {\r\n        row[field] = $event;\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'PATIENT.PATIENT' | translate}}  - {{row.patientId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'PATIENT.PATIENT' | translate}} - {{row.patientId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <div [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew==true\">\r\n        <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'PATIENT.CUSTOMERNAME' | translate }}\" [initValue]=\"row.customerId\" [endpoint]=\"'/Customer/GetListForCombo'\" (onChange)=\"onChange($event,row,'customerId')\"></fast-autocomplete>\r\n    </div>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew!=true\">\r\n        <mat-label>{{ 'PATIENT.CUSTOMERNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.customerName\" disabled>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PATIENT.FULLNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.fullName\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-slide-toggle [(ngModel)]=\"row.gender\"> </mat-slide-toggle>\r\n        <span style=\"margin-left:10px;\">{{ 'PATIENT.GENDER' | translate }}</span>\r\n        <textarea matInput style=\"display:none;\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PATIENT.AGE' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.age\">\r\n    </mat-form-field>\r\n    <div [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew==true\">\r\n        <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'PATIENT.GENUNAME' | translate }}\" [initValue]=\"row.genuId\" [endpoint]=\"'/Genu/GetListForCombo'\" (onChange)=\"onChange($event,row,'customerId')\"></fast-autocomplete>\r\n    </div>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew!=true\">\r\n        <mat-label>{{ 'PATIENT.GENUNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.genuName\" disabled>\r\n    </mat-form-field>\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { PatientService } from './patient.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { PatientDialogComponent } from './patient-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'patient-table',\r\n    templateUrl: './patient.component.html',\r\n    styleUrls: ['./patient.component.scss']\r\n})\r\nexport class PatientComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: PatientFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private patientService: PatientService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new PatientFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new PatientFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('PATIENT.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n        this.patientService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new PatientData();\r\n\r\n        emptyData.patientId = 0;\r\n        emptyData.customerId = 0;\r\n        emptyData.fullName = '';\r\n        emptyData.gender = false;\r\n        emptyData.age = 0;\r\n        emptyData.genuId = 0;\r\n        emptyData.createdUser = 0;\r\n        emptyData.createdDate = new Date();\r\n        emptyData.updatedUser = 0;\r\n        emptyData.updatedDate = new Date();\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: PatientData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: PatientData, isNew: boolean) {\r\n\r\n        this.dialog.open(PatientDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: PatientData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.patientService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                response.errorMessage, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'patientId',\r\n                translate: 'PATIENTID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'customerId',\r\n                translate: 'CUSTOMERID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'fullName',\r\n                translate: 'FULLNAME',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'gender',\r\n                translate: 'GENDER',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'age',\r\n                translate: 'AGE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'genuId',\r\n                translate: 'GENUID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\nexport class PatientData {\r\n\r\n    patientId: number;\r\n    customerId: number;\r\n    customerName: string;\r\n    fullName: string;\r\n    gender: boolean;\r\n    age: number;\r\n    genuId: number;\r\n    genuName: string;\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class PatientFilter {\r\n\r\n    patientId: number;\r\n    customerId: number;\r\n    customerName: string;\r\n    fullName: string;\r\n    gender: boolean;\r\n    age: number;\r\n    genuId: number;\r\n    genuName: string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"patientId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.PATIENTID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"PatientId\"> {{row.patientId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"customerId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.CUSTOMERNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"CustomerId\"> {{row.customerName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"fullName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.FULLNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FullName\"> {{row.fullName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"gender\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.GENDER' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Gender\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.gender\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"age\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.AGE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Age\"> {{row.age}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"genuId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.GENUNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"genuId\"> {{row.genuName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'PATIENT.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.PATIENTID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.patientId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.CUSTOMERID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.customerId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.FULLNAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.fullName\">\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.gender\">{{'PATIENT.GENDER'| translate}}</mat-slide-toggle>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.AGE'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.age\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.GENUID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.genuId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'PATIENT.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'PATIENT.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PatientData, PatientFilter } from \"./patient.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PatientService {\r\n\r\n    endPointBase = environment.apiURL + \"/Patient/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: PatientData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SavePatient\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: PatientData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeletePatient?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: PatientFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetPatientList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { VaccinationTransactionData, VaccinationTransactionDataNew } from \"./vaccinationtransaction.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { VaccinationTransactionService } from './vaccinationtransaction.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"vaccinationtransaction-dialog\",\r\n    templateUrl: \"./vaccinationtransaction-dialog.component.html\"\r\n})\r\n\r\nexport class VaccinationTransactionDialogComponent {\r\n    row: VaccinationTransactionData;\r\n    newRow: VaccinationTransactionDataNew;\r\n    isNew: boolean;\r\n    step: number = 0;\r\n\r\n    constructor(public dialogRef: MatDialogRef<VaccinationTransactionDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private vaccinationTransactionService: VaccinationTransactionService,\r\n        private translate: TranslateService,\r\n        private navigationService: NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.newRow = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    setStep(index: number) {\r\n        this.step = index;\r\n    }\r\n\r\n    nextStep() {\r\n        this.step++;\r\n    }\r\n\r\n    prevStep() {\r\n        this.step--;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n        this.vaccinationTransactionService.save(this.newRow, this.isNew).subscribe((response: any) => {\r\n            this.navigationService.sessionControl(response);\r\n            if (response.isSuccess) {\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                    this.translate.instant(response.message),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(response.errorMessage),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n            }\r\n        }, (error) => {\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n        });\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n  <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}}\r\n    {{'VACCINATIONTRANSACTION.VACCINATIONTRANSACTION' | translate}}</h2>\r\n  <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}}\r\n    {{'VACCINATIONTRANSACTION.VACCINATIONTRANSACTION' | translate}} - {{row.vaccinationId}}</h2>\r\n  <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</div>\r\n<!-- NEW VACCINATION TRANSACTION -->\r\n<mat-dialog-content *ngIf=\"isNew==true\">\r\n  <mat-accordion class=\"example-headers-align\">\r\n    <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-icon>person</mat-icon>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"step !== 0\">chevron_right</mat-icon>\r\n          <mat-icon *ngIf=\"step === 0\">expand_more</mat-icon>\r\n          &nbsp; Hasta Sahibi Bilgileri\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'VACCINATIONTRANSACTION.CUSTOMERNAME' | translate }}\"\r\n          [initValue]=\"newRow.customerId\" [endpoint]=\"'/Customer/GetListForCombo'\"\r\n          (onChange)=\"onChange($event,newRow,'customerId')\"></fast-autocomplete>\r\n      </div>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.FULLNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"newRow.customer.fullName\">\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.IDENTITYNUMBER' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"newRow.customer.identityNumber\" maxlength=\"11\">\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.PHONENUMBER' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"newRow.customer.phoneNumber\" maxlength=\"10\">\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.ADDRESS' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"newRow.customer.address\">\r\n      </mat-form-field>\r\n      <mat-action-row>\r\n        <button mat-button color=\"primary\" (click)=\"nextStep()\">İleri</button>\r\n      </mat-action-row>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\" hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-icon>pets</mat-icon>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"step !== 1\">chevron_right</mat-icon>\r\n          <mat-icon *ngIf=\"step === 1\">expand_more</mat-icon>\r\n          &nbsp; Hasta Bilgileri\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew==true\">\r\n        <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'PATIENT.FULLNAME' | translate }}\"\r\n          [initValue]=\"row.patientId\" [endpoint]=\"'/Patient/tListForCombo'\"\r\n          (onChange)=\"onChange($event,row,'patientId')\"></fast-autocomplete>\r\n      </div>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PATIENT.FULLNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"newRow.patient.fullName\">\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-slide-toggle [(ngModel)]=\"newRow.patient.gender\"> </mat-slide-toggle>\r\n        <span style=\"margin-left:10px;\">{{ 'PATIENT.GENDER' | translate }}</span>\r\n        <textarea matInput style=\"display:none;\"></textarea>\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PATIENT.AGE' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"newRow.patient.age\">\r\n      </mat-form-field>\r\n      <mat-action-row>\r\n        <button mat-button color=\"warn\" (click)=\"prevStep()\">Geri</button>\r\n        <button mat-button color=\"primary\" (click)=\"nextStep()\">İleri</button>\r\n      </mat-action-row>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\" hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-icon>date_range</mat-icon>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"step !== 2\">chevron_right</mat-icon>\r\n          <mat-icon *ngIf=\"step === 2\">expand_more</mat-icon>\r\n          &nbsp; Aşı Bilgileri\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.VACCINATIONDATE' | translate }}</mat-label>\r\n        <input matInput [matDatepicker]=\"vaccinationDatePicker\" [(ngModel)]=\"newRow.vaccinationDate\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"vaccinationDatePicker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #vaccinationDatePicker></mat-datepicker>\r\n      </mat-form-field>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n      <div [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <fast-autocomplete [style.width.%]=\"100\"\r\n          placeholder=\"{{ 'VACCINATIONTRANSACTION.VACCINATIONTYPE' | translate }}\" [initValue]=\"newRow.vaccinationType\"\r\n          [endpoint]=\"'/VaccinationType/GetListForCombo'\" (onChange)=\"onChange($event,newRow,'vaccinationType')\">\r\n        </fast-autocomplete>\r\n      </div>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.VETNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"newRow.vetName\">\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.DESCRIPTION' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"newRow.description\">\r\n      </mat-form-field>\r\n      <mat-action-row>\r\n        <button mat-button color=\"warn\" (click)=\"prevStep()\">Geri</button>\r\n        <button mat-button color=\"primary\" (click)=\"nextStep()\">Son</button>\r\n      </mat-action-row>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</mat-dialog-content>\r\n\r\n<!-- VACCINATION TRANSACTION DETAIL -->\r\n<mat-dialog-content *ngIf=\"isNew!=true\">\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n    <div [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'VACCINATIONTRANSACTION.CUSTOMERNAME' | translate }}\"\r\n        [initValue]=\"row.customerId\" [endpoint]=\"'/Customer/GetListForCombo'\"\r\n        (onChange)=\"onChange($event,row,'customerId')\"></fast-autocomplete>\r\n    </div>\r\n    <div [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'VACCINATIONTRANSACTION.PATIENTNAME' | translate }}\"\r\n        [initValue]=\"row.patientId\" [endpoint]=\"'/Patient/GetListForCombo'\"\r\n        (onChange)=\"onChange($event,row,'patientId')\"></fast-autocomplete>\r\n    </div>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <mat-label>{{ 'VACCINATIONTRANSACTION.VETNAME' | translate }}</mat-label>\r\n      <input type=\"text\" matInput [(ngModel)]=\"row.vetName\" disabled>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <mat-label>{{ 'VACCINATIONTRANSACTION.STATUSID' | translate }}</mat-label>\r\n      <input type=\"text\" matInput [(ngModel)]=\"row.statusName\" disabled>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n    <div [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'VACCINATIONTRANSACTION.VACCINATIONTYPE' | translate }}\"\r\n        [initValue]=\"row.vaccinationType\" [endpoint]=\"'/VaccinationType/GetListForCombo'\"\r\n        (onChange)=\"onChange($event,row,'vaccinationType')\"></fast-autocomplete>\r\n    </div>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <mat-label>{{ 'VACCINATIONTRANSACTION.VACCINATIONDATE' | translate }}</mat-label>\r\n      <input matInput [matDatepicker]=\"vaccinationDatePicker\" [(ngModel)]=\"row.vaccinationDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"vaccinationDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #vaccinationDatePicker></mat-datepicker>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <mat-label>{{ 'VACCINATIONTRANSACTION.DESCRIPTION' | translate }}</mat-label>\r\n      <input type=\"text\" matInput [(ngModel)]=\"row.description\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n    <mat-form-field fxFlex appearance=\"legacy\">\r\n      <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n      <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n    </mat-form-field>\r\n    <mat-form-field fxFlex appearance=\"legacy\">\r\n      <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n      <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n    </mat-form-field>\r\n  </div>\r\n  <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n    <mat-form-field fxFlex appearance=\"legacy\">\r\n      <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n      <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n    </mat-form-field>\r\n    <mat-form-field fxFlex appearance=\"legacy\">\r\n      <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n      <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n    </mat-form-field>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions fxLayout=\"row\">\r\n  <div fxFlex=\"20%\">\r\n    <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' |\r\n      translate}}</button>\r\n  </div>\r\n  <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n    <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n  </div>\r\n</mat-dialog-actions>","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { VaccinationTransactionService } from './vaccinationtransaction.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { VaccinationTransactionDialogComponent } from './vaccinationtransaction-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\nimport { PatientData } from '../Patient/patient.component';\r\nimport { CustomerData } from '../Customer/customer.component';\r\n\r\n@Component({\r\n    selector: 'vaccinationtransaction-table',\r\n    templateUrl: './vaccinationtransaction.component.html',\r\n    styleUrls: ['./vaccinationtransaction.component.scss']\r\n})\r\n\r\nexport class VaccinationTransactionComponent implements OnInit {\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: VaccinationTransactionFilter;\r\n    pageEvent: PageEvent;\r\n\r\n    constructor(private vaccinationTransactionService: VaccinationTransactionService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n        this.filter = new VaccinationTransactionFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new VaccinationTransactionFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('VACCINATIONTRANSACTION.' + x.translate)\r\n                }));\r\n        }\r\n\r\n        this.vaccinationTransactionService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            }, (error) => {\r\n                this.showSpinner = false;\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(error), {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 2000\r\n                });\r\n            });\r\n    }\r\n\r\n    newItemDialog() {\r\n        let emptyData = new VaccinationTransactionDataNew();\r\n        let customerData = new CustomerData();\r\n        let patientData = new PatientData();\r\n\r\n        emptyData.vaccinationId = 0;\r\n        emptyData.vetId = 0;\r\n        emptyData.statusId = 0;\r\n        emptyData.vaccinationType = 0;\r\n        emptyData.vaccinationDate = new Date();\r\n        emptyData.description = '';\r\n\r\n        emptyData.customer = customerData;\r\n        emptyData.patient = patientData;\r\n\r\n        emptyData.createdUser = 0;\r\n        emptyData.createdDate = new Date();\r\n        emptyData.updatedUser = 0;\r\n        emptyData.updatedDate = new Date();\r\n\r\n        this.openDialogNewTransaction(emptyData);\r\n    }\r\n\r\n    editItemDialog(row: VaccinationTransactionData) {\r\n        this.openDialogEditTransaction(row);\r\n    }\r\n\r\n    openDialogEditTransaction(row: VaccinationTransactionData) {\r\n        this.dialog.open(VaccinationTransactionDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: false\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n            });\r\n    }\r\n\r\n    openDialogNewTransaction(row: VaccinationTransactionDataNew) {\r\n        this.dialog.open(VaccinationTransactionDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: true\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: VaccinationTransactionData) {\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.vaccinationTransactionService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                response.errorMessage, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'vaccinationId',\r\n                translate: 'VACCINATIONID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'customerId',\r\n                translate: 'CUSTOMERID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'patientId',\r\n                translate: 'PATIENTID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'vetId',\r\n                translate: 'VETID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'statusId',\r\n                translate: 'STATUSID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'vaccinationType',\r\n                translate: 'VACCINATIONTYPE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'vaccinationDate',\r\n                translate: 'VACCINATIONDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'description',\r\n                translate: 'DESCRIPTION',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class VaccinationTransactionData {\r\n    vaccinationId: number;\r\n    customerId: number;\r\n    customerName: string;\r\n    patientId: number;\r\n    patientName: string;\r\n    vetId: number;\r\n    vetName: string;\r\n    statusId: number;\r\n    statusName: string;\r\n    vaccinationType: number;\r\n    vaccinationDate: Date;\r\n    description: string;\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class VaccinationTransactionDataNew {\r\n    vaccinationId: number;\r\n    vetId: number;\r\n    statusId: number;\r\n    vaccinationType: number;\r\n    vaccinationDate: Date;\r\n    description: string;\r\n\r\n    patient: PatientData;\r\n    customer: CustomerData;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class VaccinationTransactionFilter {\r\n    vaccinationId: number;\r\n    customerId: number;\r\n    patientId: number;\r\n    vetId: number;\r\n    statusId: number;\r\n    vaccinationType: number;\r\n    vaccinationDate: Date;\r\n    vaccinationDate2: Date\r\n    description: string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\n\n            <div class=\"biruni-action-toolbar\">\n\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\n                    <mat-icon>add</mat-icon>\n                </button>\n\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\n                    <mat-icon>filter_list</mat-icon>\n                </button>\n\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\n                    <mat-icon>download</mat-icon>\n                </button>\n\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\n                    <mat-icon>upload</mat-icon>\n                </button>-->\n            </div>\n\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\n                    <ng-container matColumnDef=\"Actions\">\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\">\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\"\n                                class=\"iconbutton\">\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                            </button>\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\"\n                                class=\"iconbutton\">\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\n                            </button>\n                        </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"vaccinationId\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VACCINATIONID' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VaccinationId\"> {{row.vaccinationId}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"customerId\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.CUSTOMERNAME' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"CustomerId\"> {{row.customerName}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"patientId\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.PATIENTNAME' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"PatientId\"> {{row.patientName}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"vetId\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VETNAME' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VetId\"> {{row.vetName}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"statusId\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.STATUSID' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"StatusId\"> {{row.statusName}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"vaccinationType\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VACCINATIONTYPE' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VaccinationType\"> {{row.vaccinationTypeName}}\n                        </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"vaccinationDate\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VACCINATIONDATE' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VaccinationDate\"> {{row.vaccinationDate |\n                            date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"description\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.DESCRIPTION' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Description\"> {{row.description}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"updatedUser\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.UPDATEDUSER' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"updatedDate\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.UPDATEDDATE' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"updatedUserText\">\n                        <mat-header-cell *matHeaderCellDef> {{'VACCINATIONTRANSACTION.UPDATEDUSERTEXT' | translate}}\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\n                    </ng-container>\n\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n                    </mat-row>\n                </mat-table>\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\" [pageSize]=\"this.queryInfo.pager.pageSize\"\n                    (page)=\"pageEvent=$event; onPaginateChange($event)\" [pageSizeOptions]=\"[10, 25, 50]\">\n                </mat-paginator>\n            </div>\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\n        </div>\n    </mat-sidenav-content>\n\n    <mat-sidenav #sidenav mode=\"over\" class=\"biruni-filter-sidebar\" position=\"end\">\n\n        <div style=\"margin-bottom:10px;\">\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\"\n                style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER'\n                | translate}}</button>\n        </div>\n\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONID'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.vaccinationId\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.CUSTOMERID'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.customerId\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.PATIENTID'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.patientId\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.VETID'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.vetId\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.STATUSID'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.statusId\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONTYPE'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.vaccinationType\">\n        </mat-form-field>\n        <div>\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n                <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONDATE'| translate}}</mat-label>\n                <input matInput [matDatepicker]=\"vaccinationDatepicker\" [(ngModel)]=\"filter.vaccinationDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"vaccinationDatepicker\"></mat-datepicker-toggle>\n                <mat-datepicker #vaccinationDatepicker></mat-datepicker>\n            </mat-form-field>\n            &nbsp;\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n                <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONDATE'| translate}}</mat-label>\n                <input matInput [matDatepicker]=\"vaccinationDate2picker\" [(ngModel)]=\"filter.vaccinationDate2\">\n                <mat-datepicker-toggle matSuffix [for]=\"vaccinationDate2picker\"></mat-datepicker-toggle>\n                <mat-datepicker #vaccinationDate2picker></mat-datepicker>\n            </mat-form-field>\n        </div>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.DESCRIPTION'| translate}}</mat-label>\n            <input matInput type=\"text\" [(ngModel)]=\"filter.description\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.CREATEDUSER'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\n        </mat-form-field>\n        <div>\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n                <mat-label>{{'VACCINATIONTRANSACTION.CREATEDDATE'| translate}}</mat-label>\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\n                <mat-datepicker #createdDatepicker></mat-datepicker>\n            </mat-form-field>\n            &nbsp;\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n                <mat-label>{{'VACCINATIONTRANSACTION.CREATEDDATE'| translate}}</mat-label>\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\n                <mat-datepicker #createdDate2picker></mat-datepicker>\n            </mat-form-field>\n        </div>\n\n\n    </mat-sidenav>\n</mat-sidenav-container>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { VaccinationTransactionData, VaccinationTransactionDataNew, VaccinationTransactionFilter } from \"./vaccinationtransaction.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class VaccinationTransactionService {\r\n    endPointBase = environment.apiURL + \"/VaccinationTransaction/\";\r\n    \r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: any, isNew: boolean): Observable<object> {\r\n        if (!isNew)\r\n            return this.httpClient.post(this.endPointBase + \"SaveVaccinationTransaction\" + \"?session=\" + this.authService.getToken(), data);\r\n        else\r\n            return this.httpClient.post(this.endPointBase + \"StartSaveVaccinationTransaction\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: VaccinationTransactionData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteVaccinationTransaction?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: VaccinationTransactionFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetVaccinationTransactionList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { VaccinationTypeData } from \"./vaccinationtype.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { VaccinationTypeService } from './vaccinationtype.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"vaccinationtype-dialog\",\r\n    templateUrl: \"./vaccinationtype-dialog.component.html\"\r\n})\r\nexport class VaccinationTypeDialogComponent {\r\n\r\n    row: VaccinationTypeData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<VaccinationTypeDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private vaccinationTypeService: VaccinationTypeService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.vaccinationTypeService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'VACCINATIONTYPE.VACCINATIONTYPE' | translate}}  - {{row.typeId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'VACCINATIONTYPE.VACCINATIONTYPE' | translate}} - {{row.typeId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTYPE.NAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.name\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-slide-toggle [(ngModel)]=\"row.status\"> </mat-slide-toggle>\r\n        <span style=\"margin-left:10px;\">{{ 'VACCINATIONTYPE.STATUS' | translate }}</span>\r\n        <textarea matInput style=\"display:none;\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTYPE.PERIODICDAY' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.periodicDay\">\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { VaccinationTypeService } from './vaccinationtype.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { VaccinationTypeDialogComponent } from './vaccinationtype-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'vaccinationtype-table',\r\n    templateUrl: './vaccinationtype.component.html',\r\n    styleUrls: ['./vaccinationtype.component.scss']\r\n})\r\nexport class VaccinationTypeComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: VaccinationTypeFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private vaccinationTypeService: VaccinationTypeService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new VaccinationTypeFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new VaccinationTypeFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('VACCINATIONTYPE.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.vaccinationTypeService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new VaccinationTypeData();\r\n\r\n        emptyData.typeId = 0;\n        emptyData.name = '';\n        emptyData.status = false;\n        emptyData.periodicDay = 0;\n        emptyData.createdDate = new Date();\n        emptyData.createdUser = 0;\n        emptyData.updatedDate = new Date();\n        emptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: VaccinationTypeData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: VaccinationTypeData, isNew: boolean) {\r\n\r\n        this.dialog.open(VaccinationTypeDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: VaccinationTypeData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.vaccinationTypeService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                response.errorMessage, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\n                prop: 'typeId',\n                translate: 'TYPEID',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'name',\n                translate: 'NAME',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'status',\n                translate: 'STATUS',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'periodicDay',\n                translate: 'PERIODICDAY',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class VaccinationTypeData {\r\n\r\n    typeId: number;\n    name: string;\n    status: boolean;\n    periodicDay: number;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class VaccinationTypeFilter {\r\n\r\n    typeId: number;\n    name: string;\n    status: boolean;\n    periodicDay: number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"typeId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.TYPEID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"TypeId\"> {{row.typeId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"name\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.NAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.name}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"status\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.STATUS' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Status\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.status\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"periodicDay\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.PERIODICDAY' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"PeriodicDay\"> {{row.periodicDay}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'VACCINATIONTYPE.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTYPE.TYPEID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.typeId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTYPE.NAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.name\">\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.status\">{{'VACCINATIONTYPE.STATUS'| translate}}</mat-slide-toggle>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTYPE.PERIODICDAY'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.periodicDay\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'VACCINATIONTYPE.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'VACCINATIONTYPE.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTYPE.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { VaccinationTypeData, VaccinationTypeFilter } from \"./vaccinationtype.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class VaccinationTypeService {\r\n\r\n    endPointBase = environment.apiURL + \"/VaccinationType/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: VaccinationTypeData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveVaccinationType\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: VaccinationTypeData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteVaccinationType?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: VaccinationTypeFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetVaccinationTypeList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { VaccinationTransactionComponent } from './VaccinationTransaction/vaccinationtransaction.component'\r\nimport { VaccinationTransactionDialogComponent } from './VaccinationTransaction/vaccinationtransaction-dialog.component';\r\nimport { VaccinationTypeComponent } from './VaccinationType/vaccinationtype.component'\r\nimport { VaccinationTypeDialogComponent } from './VaccinationType/vaccinationtype-dialog.component';\r\nimport { PatientComponent } from './Patient/patient.component'\r\nimport { PatientDialogComponent } from './Patient/patient-dialog.component';\r\nimport { CustomerComponent } from './Customer/customer.component'\r\nimport { CustomerDialogComponent } from './Customer/customer-dialog.component';\r\nimport { GenuComponent } from './Genu/genu.component';\r\nimport { GenuDialogComponent } from './Genu/genu-dialog.component';\r\n\r\nimport { GeneralRoutes } from './general.routing';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { SessionService } from \"../../shared/session.service\";\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { SharedComponentsModule } from '../../shared/components/shared-components.module';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\n\r\n//@Component_Imports\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatSidenavModule,\r\n        MatGridListModule,\r\n        MatButtonModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSlideToggleModule,\r\n        MatSelectModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatDialogModule,\r\n        FlexLayoutModule,\r\n        HttpClientModule,\r\n        CommonModule,\r\n        MatInputModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        NgxDatatableModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        MatTabsModule,\r\n        MatListModule,\r\n        MatCardModule,\r\n        MatAutocompleteModule,\r\n        SharedComponentsModule,\r\n        MatExpansionModule,\r\n        RouterModule.forChild(GeneralRoutes)\r\n    ],\r\n\r\n    declarations: [\r\n        VaccinationTransactionComponent,\r\n        VaccinationTransactionDialogComponent,\r\n        VaccinationTypeComponent,\r\n        VaccinationTypeDialogComponent,\r\n        PatientComponent,\r\n        PatientDialogComponent,\r\n        CustomerComponent,\r\n        CustomerDialogComponent,\r\n        GenuComponent,\r\n        GenuDialogComponent\r\n        //FastAutoCompleteComponent\r\n        //@Component_Declarations\r\n    ],\r\n    providers: [\r\n        SessionService\r\n    ]\r\n})\r\nexport class GeneralModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { VaccinationTransactionComponent } from './VaccinationTransaction/vaccinationtransaction.component'\r\nimport { VaccinationTypeComponent } from './VaccinationType/vaccinationtype.component'\r\nimport { PatientComponent } from './Patient/patient.component'\r\nimport { CustomerComponent } from './Customer/customer.component'\r\nimport { GenuComponent } from './Genu/genu.component'\r\n//@Component_Imports\r\n\r\n\r\nexport const GeneralRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'vaccinationtransaction',\r\n                component: VaccinationTransactionComponent,\r\n                data: { title: 'VACCINATIONTRANSACTION.VACCINATIONTRANSACTIONMENU', breadcrumb: 'VACCINATIONTRANSACTION.VACCINATIONTRANSACTIONMENU' }\r\n            },\r\n            {\r\n                path: 'vaccinationtype',\r\n                component: VaccinationTypeComponent,\r\n                data: { title: 'VACCINATIONTYPE.VACCINATIONTYPEMENU', breadcrumb: 'VACCINATIONTYPE.VACCINATIONTYPEMENU' }\r\n            },\r\n            {\r\n                path: 'customer',\r\n                component: CustomerComponent,\r\n                data: { title: 'CUSTOMER.CUSTOMERMENU', breadcrumb: 'CUSTOMER.CUSTOMERMENU' }\r\n            },\r\n            {\r\n                path: 'patient',\r\n                component: PatientComponent,\r\n                data: { title: 'PATIENT.PATIENTMENU', breadcrumb: 'PATIENT.PATIENTMENU' }\r\n            },\r\n            {\r\n                path: 'genu',\r\n                component: GenuComponent,\r\n                data: { title: 'GENU.GENUMENU', breadcrumb: 'GENU.GENUMENU' }\r\n            }\r\n            //@Component_Routes\r\n        ]\r\n    }\r\n];\r\n"],"sourceRoot":"webpack:///"}