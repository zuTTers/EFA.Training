{"version":3,"sources":["webpack:///src/app/views/General/Customer/customer-dialog.component.html","webpack:///src/app/views/General/Customer/customer-dialog.component.ts","webpack:///src/app/views/General/Customer/customer.component.html","webpack:///src/app/views/General/Customer/customer.component.ts","webpack:///src/app/views/General/Customer/customer.service.ts","webpack:///src/app/views/General/Genu/genu-dialog.component.html","webpack:///src/app/views/General/Genu/genu-dialog.component.ts","webpack:///src/app/views/General/Genu/genu.component.html","webpack:///src/app/views/General/Genu/genu.component.ts","webpack:///src/app/views/General/Genu/genu.service.ts","webpack:///src/app/views/General/Patient/patient-dialog.component.html","webpack:///src/app/views/General/Patient/patient-dialog.component.ts","webpack:///src/app/views/General/Patient/patient.component.html","webpack:///src/app/views/General/Patient/patient.component.ts","webpack:///src/app/views/General/Patient/patient.service.ts","webpack:///src/app/views/General/VaccinationTransaction/vaccinationtransaction-dialog.component.html","webpack:///src/app/views/General/VaccinationTransaction/vaccinationtransaction-dialog.component.ts","webpack:///src/app/views/General/VaccinationTransaction/vaccinationtransaction.component.html","webpack:///src/app/views/General/VaccinationTransaction/vaccinationtransaction.component.ts","webpack:///src/app/views/General/VaccinationTransaction/vaccinationtransaction.service.ts","webpack:///src/app/views/General/VaccinationType/vaccinationtype-dialog.component.html","webpack:///src/app/views/General/VaccinationType/vaccinationtype-dialog.component.ts","webpack:///src/app/views/General/VaccinationType/vaccinationtype.component.html","webpack:///src/app/views/General/VaccinationType/vaccinationtype.component.ts","webpack:///src/app/views/General/VaccinationType/vaccinationtype.service.ts","webpack:///src/app/views/General/general.module.ts","webpack:///src/app/views/General/general.routing.ts"],"names":["CustomerDialogComponent","dialogRef","data","customerService","translate","navigationService","snackbar","row","isNew","close","operation","save","subscribe","response","sessionControl","isSuccess","open","instant","message","horizontalPosition","verticalPosition","duration","errorMessage","error","MAT_DIALOG_DATA","CustomerComponent","dialog","showSpinner","displayedColumns","filter","CustomerFilter","queryInfo","QueryInfo","pager","Pager","currentPage","pageSize","totalCount","getDataConf","x","showColumn","map","c","prop","getData","$event","orderby","active","direction","event","pageIndex","isExport","columnInfo","localText","window","environment","key","dataSource","MatTableDataSource","emptyData","CustomerData","customerId","identityNumber","fullName","phoneNumber","address","createdUser","createdDate","Date","updatedUser","updatedDate","openDialog","width","hasBackdrop","disableClose","afterClosed","deleteRow","ComfirmDialogComponent","comfirm","newItemDialog","downloadData","sortData","onPaginateChange","filterData","clearFilter","CustomerService","httpClient","authService","endPointBase","post","getToken","columnInfos","GenuDialogComponent","genuService","GenuComponent","GenuFilter","GenuData","raceId","name","description","status","GenuService","PatientDialogComponent","patientService","field","PatientComponent","PatientFilter","PatientData","patientId","gender","age","genuId","PatientService","VaccinationTransactionDialogComponent","vaccinationTransactionService","step","newRow","index","VaccinationTransactionComponent","VaccinationTransactionFilter","VaccinationTransactionDataNew","customerData","patientData","vaccinationId","vetId","statusId","vaccinationType","vaccinationDate","customer","patient","openDialogNewTransaction","openDialogEditTransaction","VaccinationTransactionData","VaccinationTransactionService","VaccinationTypeDialogComponent","vaccinationTypeService","VaccinationTypeComponent","VaccinationTypeFilter","VaccinationTypeData","typeId","periodicDay","VaccinationTypeService","GeneralModule","SessionService","MatSidenavModule","MatGridListModule","MatButtonModule","MatDatepickerModule","MatNativeDateModule","MatSlideToggleModule","MatSelectModule","MatIconModule","FormsModule","ReactiveFormsModule","MatDialogModule","FlexLayoutModule","HttpClientModule","CommonModule","MatInputModule","MatPaginatorModule","MatSortModule","MatTableModule","NgxDatatableModule","MatProgressSpinnerModule","TranslateModule","MatTabsModule","MatListModule","MatCardModule","MatAutocompleteModule","SharedComponentsModule","MatExpansionModule","RouterModule","GeneralRoutes","path","children","component","title","breadcrumb"],"mappings":"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","file":"src_app_views_General_general_module_ts-es5.js","sourcesContent":["<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'CUSTOMER.CUSTOMER' | translate}}  - {{row.customerId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'CUSTOMER.CUSTOMER' | translate}} - {{row.customerId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew!=true\">\r\n        <mat-label>{{ 'CUSTOMER.CUSTOMERID' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.customerId\" disabled=\"isNew!=true\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.FULLNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.fullName\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.IDENTITYNUMBER' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.identityNumber\" maxlength=\"11\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.PHONENUMBER' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.phoneNumber\" maxlength=\"10\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.ADDRESS' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.address\">\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { CustomerData } from \"./customer.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { CustomerService } from './customer.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"customer-dialog\",\r\n    templateUrl: \"./customer-dialog.component.html\"\r\n})\r\nexport class CustomerDialogComponent {\r\n\r\n    row: CustomerData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<CustomerDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private customerService: CustomerService,\r\n        private translate: TranslateService,\r\n        private navigationService: NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.customerService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                    this.translate.instant(response.message),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(response.errorMessage),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"customerId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.CUSTOMERID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"CustomerId\"> {{row.customerId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"identityNumber\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.IDENTITYNUMBER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IdentityNumber\"> {{row.identityNumber}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"fullName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.FULLNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FullName\"> {{row.fullName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"phoneNumber\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.PHONENUMBER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"PhoneNumber\"> {{row.phoneNumber}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"address\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.ADDRESS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Address\"> {{row.address}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'CUSTOMER.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'CUSTOMER.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.CUSTOMERID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.customerId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.IDENTITYNUMBER'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.identityNumber\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.FULLNAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.fullName\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.PHONENUMBER'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.phoneNumber\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.ADDRESS'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.address\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'CUSTOMER.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'CUSTOMER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'CUSTOMER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { CustomerService } from './customer.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { CustomerDialogComponent } from './customer-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'customer-table',\r\n    templateUrl: './customer.component.html',\r\n    styleUrls: ['./customer.component.scss']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: CustomerFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private customerService: CustomerService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new CustomerFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new CustomerFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('CUSTOMER.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.customerService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new CustomerData();\r\n\r\n        emptyData.customerId = 0;\n        emptyData.identityNumber = '';\n        emptyData.fullName = '';\n        emptyData.phoneNumber = '';\n        emptyData.address = '';\n        emptyData.createdUser = 0;\n        emptyData.createdDate = new Date();\n        emptyData.updatedUser = 0;\n        emptyData.updatedDate = new Date();\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: CustomerData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: CustomerData, isNew: boolean) {\r\n\r\n        this.dialog.open(CustomerDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: CustomerData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.customerService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                response.errorMessage, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\n                prop: 'customerId',\n                translate: 'CUSTOMERID',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'identityNumber',\n                translate: 'IDENTITYNUMBER',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'fullName',\n                translate: 'FULLNAME',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'phoneNumber',\n                translate: 'PHONENUMBER',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'address',\n                translate: 'ADDRESS',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class CustomerData {\r\n\r\n    customerId: number;\n    identityNumber: string;\n    fullName: string;\n    phoneNumber: string;\n    address: string;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class CustomerFilter {\r\n\r\n    customerId: number;\n    identityNumber: string;\n    fullName: string;\n    phoneNumber: string;\n    address: string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CustomerData, CustomerFilter } from \"./customer.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n    endPointBase = environment.apiURL + \"/Customer/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: CustomerData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveCustomer\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: CustomerData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteCustomer?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: CustomerFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetCustomerList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'GENU.GENU' | translate}}  - {{row.raceId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'GENU.GENU' | translate}} - {{row.raceId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{ 'GENU.NAME' | translate }}</mat-label>\n   <input type=\"text\" matInput [(ngModel)]=\"row.name\"> \n</mat-form-field>\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{ 'GENU.DESCRIPTION' | translate }}</mat-label>\n   <input type=\"text\" matInput [(ngModel)]=\"row.description\"> \n</mat-form-field>\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n   <mat-slide-toggle [(ngModel)]=\"row.status\"> </mat-slide-toggle>\n   <span style=\"margin-left:10px;\">{{ 'GENU.STATUS' | translate }}</span>\n   <textarea matInput style=\"display:none;\"></textarea>\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { GenuData } from \"./genu.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { GenuService } from './genu.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"genu-dialog\",\r\n    templateUrl: \"./genu-dialog.component.html\"\r\n})\r\nexport class GenuDialogComponent {\r\n\r\n    row: GenuData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<GenuDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private genuService: GenuService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.genuService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"raceId\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.RACEID' | translate}} </mat-header-cell> \n    <mat-cell *matCellDef=\"let row\" data-label=\"RaceId\"> {{row.raceId}}</mat-cell> \n</ng-container>\n\n<ng-container matColumnDef=\"name\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.NAME' | translate}} </mat-header-cell> \n    <mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.name}}</mat-cell> \n</ng-container>\n\n<ng-container matColumnDef=\"description\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.DESCRIPTION' | translate}} </mat-header-cell> \n    <mat-cell *matCellDef=\"let row\" data-label=\"Description\"> {{row.description}}</mat-cell> \n</ng-container>\n\n<ng-container matColumnDef=\"status\">\n   <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.STATUS' | translate}}  </mat-header-cell>\n   <mat-cell *matCellDef=\"let row\" data-label=\"Status\">\n       <mat-slide-toggle [(ngModel)]=\"row.status\" disabled> </mat-slide-toggle>\n   </mat-cell>\n</ng-container>\n\n<ng-container matColumnDef=\"updatedDate\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.UPDATEDDATE' | translate}} </mat-header-cell> \n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \n</ng-container>\n\n<ng-container matColumnDef=\"updatedUser\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'GENU.UPDATEDUSER' | translate}} </mat-header-cell> \n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \n</ng-container>\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'GENU.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{'GENU.RACEID'| translate}}</mat-label>\n    <input matInput type=\"number\" [(ngModel)]=\"filter.raceId\">\n</mat-form-field>\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{'GENU.NAME'| translate}}</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"filter.name\">\n</mat-form-field>\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{'GENU.DESCRIPTION'| translate}}</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"filter.description\">\n</mat-form-field>\n<mat-slide-toggle [(ngModel)]=\"filter.status\">{{'GENU.STATUS'| translate}}</mat-slide-toggle>\n<div>\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n       <mat-label>{{'GENU.CREATEDDATE'| translate}}</mat-label> \n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\n       <mat-datepicker #createdDatepicker></mat-datepicker>\n   </mat-form-field>\n   &nbsp;\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n       <mat-label>{{'GENU.CREATEDDATE'| translate}}</mat-label>\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\n       <mat-datepicker #createdDate2picker></mat-datepicker>\n   </mat-form-field>\n</div>\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n    <mat-label>{{'GENU.CREATEDUSER'| translate}}</mat-label>\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { GenuService } from './genu.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { GenuDialogComponent } from './genu-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'genu-table',\r\n    templateUrl: './genu.component.html',\r\n    styleUrls: ['./genu.component.scss']\r\n})\r\nexport class GenuComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: GenuFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private genuService:  GenuService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  GenuFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  GenuFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('GENU.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.genuService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new GenuData();\r\n\r\n        emptyData.raceId = 0;\r\nemptyData.name = '';\r\nemptyData.description = '';\r\nemptyData.status = false;\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: GenuData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: GenuData, isNew: boolean) {\r\n\r\n        this.dialog.open(GenuDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: GenuData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.genuService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    response.errorMessage, {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'raceId',\r\n   translate: 'RACEID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'name',\r\n   translate: 'NAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'description',\r\n   translate: 'DESCRIPTION',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'status',\r\n   translate: 'STATUS',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GenuData {\r\n\r\n    raceId : number;\r\nname : string;\r\ndescription : string;\r\nstatus : boolean;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class GenuFilter {\r\n\r\n    raceId : number;\r\nname : string;\r\ndescription : string;\r\nstatus : boolean;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { GenuData, GenuFilter } from \"./genu.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GenuService {\r\n\r\n    endPointBase = environment.apiURL + \"/Genu/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: GenuData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveGenu\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: GenuData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteGenu?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: GenuFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetGenuList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'PATIENT.PATIENT' | translate}}  - {{row.patientId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'PATIENT.PATIENT' | translate}} - {{row.patientId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <div [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew==true\">\r\n        <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'PATIENT.CUSTOMERNAME' | translate }}\" [initValue]=\"row.customerId\" [endpoint]=\"'/Customer/GetListForCombo'\" (onChange)=\"onChange($event,row,'customerId')\"></fast-autocomplete>\r\n    </div>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew!=true\">\r\n        <mat-label>{{ 'PATIENT.CUSTOMERNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.customerName\" disabled>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PATIENT.FULLNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.fullName\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-slide-toggle [(ngModel)]=\"row.gender\"> </mat-slide-toggle>\r\n        <span style=\"margin-left:10px;\">{{ 'PATIENT.GENDER' | translate }}</span>\r\n        <textarea matInput style=\"display:none;\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PATIENT.AGE' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.age\">\r\n    </mat-form-field>\r\n    <div [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew==true\">\r\n        <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'PATIENT.GENUNAME' | translate }}\" [initValue]=\"row.genuId\" [endpoint]=\"'/Genu/GetListForCombo'\" (onChange)=\"onChange($event,row,'customerId')\"></fast-autocomplete>\r\n    </div>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew!=true\">\r\n        <mat-label>{{ 'PATIENT.GENUNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.genuName\" disabled>\r\n    </mat-form-field>\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { PatientData } from \"./patient.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PatientService } from './patient.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"patient-dialog\",\r\n    templateUrl: \"./patient-dialog.component.html\"\r\n})\r\nexport class PatientDialogComponent {\r\n\r\n    row: PatientData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<PatientDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private patientService: PatientService,\r\n        private translate: TranslateService,\r\n        private navigationService: NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.patientService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                    this.translate.instant(response.message),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(response.errorMessage),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    onChange($event, row, field) {\r\n        row[field] = $event;\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"patientId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.PATIENTID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"PatientId\"> {{row.patientId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"customerId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.CUSTOMERNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"CustomerId\"> {{row.customerName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"fullName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.FULLNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FullName\"> {{row.fullName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"gender\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.GENDER' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Gender\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.gender\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"age\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.AGE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Age\"> {{row.age}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"genuId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.GENUNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"genuId\"> {{row.genuName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PATIENT.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'PATIENT.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.PATIENTID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.patientId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.CUSTOMERID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.customerId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.FULLNAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.fullName\">\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.gender\">{{'PATIENT.GENDER'| translate}}</mat-slide-toggle>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.AGE'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.age\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.GENUID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.genuId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PATIENT.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'PATIENT.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'PATIENT.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { PatientService } from './patient.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { PatientDialogComponent } from './patient-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'patient-table',\r\n    templateUrl: './patient.component.html',\r\n    styleUrls: ['./patient.component.scss']\r\n})\r\nexport class PatientComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: PatientFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private patientService: PatientService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new PatientFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new PatientFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('PATIENT.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n        this.patientService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new PatientData();\r\n\r\n        emptyData.patientId = 0;\r\n        emptyData.customerId = 0;\r\n        emptyData.fullName = '';\r\n        emptyData.gender = false;\r\n        emptyData.age = 0;\r\n        emptyData.genuId = 0;\r\n        emptyData.createdUser = 0;\r\n        emptyData.createdDate = new Date();\r\n        emptyData.updatedUser = 0;\r\n        emptyData.updatedDate = new Date();\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: PatientData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: PatientData, isNew: boolean) {\r\n\r\n        this.dialog.open(PatientDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: PatientData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.patientService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                response.errorMessage, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'patientId',\r\n                translate: 'PATIENTID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'customerId',\r\n                translate: 'CUSTOMERID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'fullName',\r\n                translate: 'FULLNAME',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'gender',\r\n                translate: 'GENDER',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'age',\r\n                translate: 'AGE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'genuId',\r\n                translate: 'GENUID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\nexport class PatientData {\r\n\r\n    patientId: number;\r\n    customerId: number;\r\n    customerName: string;\r\n    fullName: string;\r\n    gender: boolean;\r\n    age: number;\r\n    genuId: number;\r\n    genuName: string;\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class PatientFilter {\r\n\r\n    patientId: number;\r\n    customerId: number;\r\n    customerName: string;\r\n    fullName: string;\r\n    gender: boolean;\r\n    age: number;\r\n    genuId: number;\r\n    genuName: string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PatientData, PatientFilter } from \"./patient.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PatientService {\r\n\r\n    endPointBase = environment.apiURL + \"/Patient/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: PatientData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SavePatient\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: PatientData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeletePatient?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: PatientFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetPatientList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n  <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}}\r\n    {{'VACCINATIONTRANSACTION.VACCINATIONTRANSACTION' | translate}}</h2>\r\n  <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}}\r\n    {{'VACCINATIONTRANSACTION.VACCINATIONTRANSACTION' | translate}} - {{row.vaccinationId}}</h2>\r\n  <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</div>\r\n<!-- NEW VACCINATION TRANSACTION -->\r\n<mat-dialog-content *ngIf=\"isNew==true\">\r\n  <mat-accordion class=\"example-headers-align\">\r\n    <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-icon>person</mat-icon>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"step !== 0\">chevron_right</mat-icon>\r\n          <mat-icon *ngIf=\"step === 0\">expand_more</mat-icon>\r\n          &nbsp; Hasta Sahibi Bilgileri\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'VACCINATIONTRANSACTION.CUSTOMERNAME' | translate }}\"\r\n          [initValue]=\"newRow.customerId\" [endpoint]=\"'/Customer/GetListForCombo'\"\r\n          (onChange)=\"onChange($event,newRow,'customerId')\"></fast-autocomplete>\r\n      </div>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.FULLNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"newRow.customer.fullName\">\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.IDENTITYNUMBER' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"newRow.customer.identityNumber\" maxlength=\"11\">\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.PHONENUMBER' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"newRow.customer.phoneNumber\" maxlength=\"10\">\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'CUSTOMER.ADDRESS' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"newRow.customer.address\">\r\n      </mat-form-field>\r\n      <mat-action-row>\r\n        <button mat-button color=\"primary\" (click)=\"nextStep()\">İleri</button>\r\n      </mat-action-row>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\" hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-icon>pets</mat-icon>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"step !== 1\">chevron_right</mat-icon>\r\n          <mat-icon *ngIf=\"step === 1\">expand_more</mat-icon>\r\n          &nbsp; Hasta Bilgileri\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div [style.width.%]=\"100\" appearance=\"legacy\" *ngIf=\"isNew==true\">\r\n        <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'PATIENT.FULLNAME' | translate }}\"\r\n          [initValue]=\"row.patientId\" [endpoint]=\"'/Patient/tListForCombo'\"\r\n          (onChange)=\"onChange($event,row,'patientId')\"></fast-autocomplete>\r\n      </div>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PATIENT.FULLNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"newRow.patient.fullName\">\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-slide-toggle [(ngModel)]=\"newRow.patient.gender\"> </mat-slide-toggle>\r\n        <span style=\"margin-left:10px;\">{{ 'PATIENT.GENDER' | translate }}</span>\r\n        <textarea matInput style=\"display:none;\"></textarea>\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PATIENT.AGE' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"newRow.patient.age\">\r\n      </mat-form-field>\r\n      <mat-action-row>\r\n        <button mat-button color=\"warn\" (click)=\"prevStep()\">Geri</button>\r\n        <button mat-button color=\"primary\" (click)=\"nextStep()\">İleri</button>\r\n      </mat-action-row>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\" hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-icon>date_range</mat-icon>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"step !== 2\">chevron_right</mat-icon>\r\n          <mat-icon *ngIf=\"step === 2\">expand_more</mat-icon>\r\n          &nbsp; Aşı Bilgileri\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.VACCINATIONDATE' | translate }}</mat-label>\r\n        <input matInput [matDatepicker]=\"vaccinationDatePicker\" [(ngModel)]=\"newRow.vaccinationDate\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"vaccinationDatePicker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #vaccinationDatePicker></mat-datepicker>\r\n      </mat-form-field>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n      <div [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <fast-autocomplete [style.width.%]=\"100\"\r\n          placeholder=\"{{ 'VACCINATIONTRANSACTION.VACCINATIONTYPE' | translate }}\" [initValue]=\"newRow.vaccinationType\"\r\n          [endpoint]=\"'/VaccinationType/GetListForCombo'\" (onChange)=\"onChange($event,newRow,'vaccinationType')\">\r\n        </fast-autocomplete>\r\n      </div>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.VETNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"newRow.vetName\">\r\n      </mat-form-field>\r\n      <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.DESCRIPTION' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"newRow.description\">\r\n      </mat-form-field>\r\n      <mat-action-row>\r\n        <button mat-button color=\"warn\" (click)=\"prevStep()\">Geri</button>\r\n        <button mat-button color=\"primary\" (click)=\"nextStep()\">Son</button>\r\n      </mat-action-row>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</mat-dialog-content>\r\n\r\n<!-- VACCINATION TRANSACTION DETAIL -->\r\n<mat-dialog-content *ngIf=\"isNew!=true\">\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n    <div [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'VACCINATIONTRANSACTION.CUSTOMERNAME' | translate }}\"\r\n        [initValue]=\"row.customerId\" [endpoint]=\"'/Customer/GetListForCombo'\"\r\n        (onChange)=\"onChange($event,row,'customerId')\"></fast-autocomplete>\r\n    </div>\r\n    <div [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'VACCINATIONTRANSACTION.PATIENTNAME' | translate }}\"\r\n        [initValue]=\"row.patientId\" [endpoint]=\"'/Patient/GetListForCombo'\"\r\n        (onChange)=\"onChange($event,row,'patientId')\"></fast-autocomplete>\r\n    </div>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <mat-label>{{ 'VACCINATIONTRANSACTION.VETNAME' | translate }}</mat-label>\r\n      <input type=\"text\" matInput [(ngModel)]=\"row.vetName\" disabled>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <mat-label>{{ 'VACCINATIONTRANSACTION.STATUSID' | translate }}</mat-label>\r\n      <input type=\"text\" matInput [(ngModel)]=\"row.statusName\" disabled>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n    <div [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <fast-autocomplete [style.width.%]=\"100\" placeholder=\"{{ 'VACCINATIONTRANSACTION.VACCINATIONTYPE' | translate }}\"\r\n        [initValue]=\"row.vaccinationType\" [endpoint]=\"'/VaccinationType/GetListForCombo'\"\r\n        (onChange)=\"onChange($event,row,'vaccinationType')\"></fast-autocomplete>\r\n    </div>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <mat-label>{{ 'VACCINATIONTRANSACTION.VACCINATIONDATE' | translate }}</mat-label>\r\n      <input matInput [matDatepicker]=\"vaccinationDatePicker\" [(ngModel)]=\"row.vaccinationDate\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"vaccinationDatePicker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #vaccinationDatePicker></mat-datepicker>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n      <mat-label>{{ 'VACCINATIONTRANSACTION.DESCRIPTION' | translate }}</mat-label>\r\n      <input type=\"text\" matInput [(ngModel)]=\"row.description\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n    <mat-form-field fxFlex appearance=\"legacy\">\r\n      <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n      <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n    </mat-form-field>\r\n    <mat-form-field fxFlex appearance=\"legacy\">\r\n      <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n      <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n    </mat-form-field>\r\n  </div>\r\n  <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n    <mat-form-field fxFlex appearance=\"legacy\">\r\n      <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n      <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n    </mat-form-field>\r\n    <mat-form-field fxFlex appearance=\"legacy\">\r\n      <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n      <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n    </mat-form-field>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions fxLayout=\"row\">\r\n  <div fxFlex=\"20%\">\r\n    <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' |\r\n      translate}}</button>\r\n  </div>\r\n  <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n    <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n  </div>\r\n</mat-dialog-actions>","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { VaccinationTransactionData, VaccinationTransactionDataNew } from \"./vaccinationtransaction.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { VaccinationTransactionService } from './vaccinationtransaction.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"vaccinationtransaction-dialog\",\r\n    templateUrl: \"./vaccinationtransaction-dialog.component.html\"\r\n})\r\n\r\nexport class VaccinationTransactionDialogComponent {\r\n    row: VaccinationTransactionData;\r\n    newRow: VaccinationTransactionDataNew;\r\n    isNew: boolean;\r\n    step: number = 0;\r\n\r\n    constructor(public dialogRef: MatDialogRef<VaccinationTransactionDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private vaccinationTransactionService: VaccinationTransactionService,\r\n        private translate: TranslateService,\r\n        private navigationService: NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.newRow = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    setStep(index: number) {\r\n        this.step = index;\r\n    }\r\n\r\n    nextStep() {\r\n        this.step++;\r\n    }\r\n\r\n    prevStep() {\r\n        this.step--;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n        this.vaccinationTransactionService.save(this.newRow, this.isNew).subscribe((response: any) => {\r\n            this.navigationService.sessionControl(response);\r\n            if (response.isSuccess) {\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                    this.translate.instant(response.message),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(response.errorMessage),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n            }\r\n        }, (error) => {\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n        });\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\n\n            <div class=\"biruni-action-toolbar\">\n\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\n                    <mat-icon>add</mat-icon>\n                </button>\n\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\n                    <mat-icon>filter_list</mat-icon>\n                </button>\n\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\n                    <mat-icon>download</mat-icon>\n                </button>\n\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\n                    <mat-icon>upload</mat-icon>\n                </button>-->\n            </div>\n\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\n                    <ng-container matColumnDef=\"Actions\">\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\">\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\"\n                                class=\"iconbutton\">\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                            </button>\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\"\n                                class=\"iconbutton\">\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\n                            </button>\n                        </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"vaccinationId\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VACCINATIONID' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VaccinationId\"> {{row.vaccinationId}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"customerId\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.CUSTOMERNAME' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"CustomerId\"> {{row.customerName}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"patientId\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.PATIENTNAME' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"PatientId\"> {{row.patientName}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"vetId\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VETNAME' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VetId\"> {{row.vetName}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"statusId\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.STATUSID' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"StatusId\"> {{row.statusName}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"vaccinationType\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VACCINATIONTYPE' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VaccinationType\"> {{row.vaccinationTypeName}}\n                        </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"vaccinationDate\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VACCINATIONDATE' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VaccinationDate\"> {{row.vaccinationDate |\n                            date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"description\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.DESCRIPTION' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Description\"> {{row.description}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"updatedUser\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.UPDATEDUSER' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"updatedDate\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.UPDATEDDATE' |\n                            translate}} </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"updatedUserText\">\n                        <mat-header-cell *matHeaderCellDef> {{'VACCINATIONTRANSACTION.UPDATEDUSERTEXT' | translate}}\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\n                    </ng-container>\n\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n                    </mat-row>\n                </mat-table>\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\" [pageSize]=\"this.queryInfo.pager.pageSize\"\n                    (page)=\"pageEvent=$event; onPaginateChange($event)\" [pageSizeOptions]=\"[10, 25, 50]\">\n                </mat-paginator>\n            </div>\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\n        </div>\n    </mat-sidenav-content>\n\n    <mat-sidenav #sidenav mode=\"over\" class=\"biruni-filter-sidebar\" position=\"end\">\n\n        <div style=\"margin-bottom:10px;\">\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\"\n                style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER'\n                | translate}}</button>\n        </div>\n\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONID'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.vaccinationId\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.CUSTOMERID'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.customerId\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.PATIENTID'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.patientId\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.VETID'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.vetId\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.STATUSID'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.statusId\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONTYPE'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.vaccinationType\">\n        </mat-form-field>\n        <div>\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n                <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONDATE'| translate}}</mat-label>\n                <input matInput [matDatepicker]=\"vaccinationDatepicker\" [(ngModel)]=\"filter.vaccinationDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"vaccinationDatepicker\"></mat-datepicker-toggle>\n                <mat-datepicker #vaccinationDatepicker></mat-datepicker>\n            </mat-form-field>\n            &nbsp;\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n                <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONDATE'| translate}}</mat-label>\n                <input matInput [matDatepicker]=\"vaccinationDate2picker\" [(ngModel)]=\"filter.vaccinationDate2\">\n                <mat-datepicker-toggle matSuffix [for]=\"vaccinationDate2picker\"></mat-datepicker-toggle>\n                <mat-datepicker #vaccinationDate2picker></mat-datepicker>\n            </mat-form-field>\n        </div>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.DESCRIPTION'| translate}}</mat-label>\n            <input matInput type=\"text\" [(ngModel)]=\"filter.description\">\n        </mat-form-field>\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\n            <mat-label>{{'VACCINATIONTRANSACTION.CREATEDUSER'| translate}}</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\n        </mat-form-field>\n        <div>\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n                <mat-label>{{'VACCINATIONTRANSACTION.CREATEDDATE'| translate}}</mat-label>\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\n                <mat-datepicker #createdDatepicker></mat-datepicker>\n            </mat-form-field>\n            &nbsp;\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\n                <mat-label>{{'VACCINATIONTRANSACTION.CREATEDDATE'| translate}}</mat-label>\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\n                <mat-datepicker #createdDate2picker></mat-datepicker>\n            </mat-form-field>\n        </div>\n\n\n    </mat-sidenav>\n</mat-sidenav-container>","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { VaccinationTransactionService } from './vaccinationtransaction.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { VaccinationTransactionDialogComponent } from './vaccinationtransaction-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\nimport { PatientData } from '../Patient/patient.component';\r\nimport { CustomerData } from '../Customer/customer.component';\r\n\r\n@Component({\r\n    selector: 'vaccinationtransaction-table',\r\n    templateUrl: './vaccinationtransaction.component.html',\r\n    styleUrls: ['./vaccinationtransaction.component.scss']\r\n})\r\n\r\nexport class VaccinationTransactionComponent implements OnInit {\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: VaccinationTransactionFilter;\r\n    pageEvent: PageEvent;\r\n\r\n    constructor(private vaccinationTransactionService: VaccinationTransactionService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n        this.filter = new VaccinationTransactionFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new VaccinationTransactionFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('VACCINATIONTRANSACTION.' + x.translate)\r\n                }));\r\n        }\r\n\r\n        this.vaccinationTransactionService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            }, (error) => {\r\n                this.showSpinner = false;\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(error), {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 2000\r\n                });\r\n            });\r\n    }\r\n\r\n    newItemDialog() {\r\n        let emptyData = new VaccinationTransactionDataNew();\r\n        let customerData = new CustomerData();\r\n        let patientData = new PatientData();\r\n\r\n        emptyData.vaccinationId = 0;\r\n        emptyData.vetId = 0;\r\n        emptyData.statusId = 0;\r\n        emptyData.vaccinationType = 0;\r\n        emptyData.vaccinationDate = new Date();\r\n        emptyData.description = '';\r\n\r\n        emptyData.customer = customerData;\r\n        emptyData.patient = patientData;\r\n\r\n        emptyData.createdUser = 0;\r\n        emptyData.createdDate = new Date();\r\n        emptyData.updatedUser = 0;\r\n        emptyData.updatedDate = new Date();\r\n\r\n        this.openDialogNewTransaction(emptyData);\r\n    }\r\n\r\n    editItemDialog(row: VaccinationTransactionData) {\r\n        this.openDialogEditTransaction(row);\r\n    }\r\n\r\n    openDialogEditTransaction(row: VaccinationTransactionData) {\r\n        this.dialog.open(VaccinationTransactionDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: false\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n            });\r\n    }\r\n\r\n    openDialogNewTransaction(row: VaccinationTransactionDataNew) {\r\n        this.dialog.open(VaccinationTransactionDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: true\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: VaccinationTransactionData) {\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.vaccinationTransactionService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                response.errorMessage, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'vaccinationId',\r\n                translate: 'VACCINATIONID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'customerId',\r\n                translate: 'CUSTOMERID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'patientId',\r\n                translate: 'PATIENTID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'vetId',\r\n                translate: 'VETID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'statusId',\r\n                translate: 'STATUSID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'vaccinationType',\r\n                translate: 'VACCINATIONTYPE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'vaccinationDate',\r\n                translate: 'VACCINATIONDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'description',\r\n                translate: 'DESCRIPTION',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class VaccinationTransactionData {\r\n    vaccinationId: number;\r\n    customerId: number;\r\n    customerName: string;\r\n    patientId: number;\r\n    patientName: string;\r\n    vetId: number;\r\n    vetName: string;\r\n    statusId: number;\r\n    statusName: string;\r\n    vaccinationType: number;\r\n    vaccinationDate: Date;\r\n    description: string;\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class VaccinationTransactionDataNew {\r\n    vaccinationId: number;\r\n    vetId: number;\r\n    statusId: number;\r\n    vaccinationType: number;\r\n    vaccinationDate: Date;\r\n    description: string;\r\n\r\n    patient: PatientData;\r\n    customer: CustomerData;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class VaccinationTransactionFilter {\r\n    vaccinationId: number;\r\n    customerId: number;\r\n    patientId: number;\r\n    vetId: number;\r\n    statusId: number;\r\n    vaccinationType: number;\r\n    vaccinationDate: Date;\r\n    vaccinationDate2: Date\r\n    description: string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { VaccinationTransactionData, VaccinationTransactionDataNew, VaccinationTransactionFilter } from \"./vaccinationtransaction.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class VaccinationTransactionService {\r\n    endPointBase = environment.apiURL + \"/VaccinationTransaction/\";\r\n    \r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: any, isNew: boolean): Observable<object> {\r\n        if (!isNew)\r\n            return this.httpClient.post(this.endPointBase + \"SaveVaccinationTransaction\" + \"?session=\" + this.authService.getToken(), data);\r\n        else\r\n            return this.httpClient.post(this.endPointBase + \"StartSaveVaccinationTransaction\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: VaccinationTransactionData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteVaccinationTransaction?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: VaccinationTransactionFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetVaccinationTransactionList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'VACCINATIONTYPE.VACCINATIONTYPE' | translate}}  - {{row.typeId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'VACCINATIONTYPE.VACCINATIONTYPE' | translate}} - {{row.typeId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTYPE.NAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.name\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-slide-toggle [(ngModel)]=\"row.status\"> </mat-slide-toggle>\r\n        <span style=\"margin-left:10px;\">{{ 'VACCINATIONTYPE.STATUS' | translate }}</span>\r\n        <textarea matInput style=\"display:none;\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTYPE.PERIODICDAY' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.periodicDay\">\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { VaccinationTypeData } from \"./vaccinationtype.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { VaccinationTypeService } from './vaccinationtype.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"vaccinationtype-dialog\",\r\n    templateUrl: \"./vaccinationtype-dialog.component.html\"\r\n})\r\nexport class VaccinationTypeDialogComponent {\r\n\r\n    row: VaccinationTypeData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<VaccinationTypeDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private vaccinationTypeService: VaccinationTypeService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.vaccinationTypeService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"typeId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.TYPEID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"TypeId\"> {{row.typeId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"name\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.NAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.name}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"status\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.STATUS' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Status\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.status\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"periodicDay\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.PERIODICDAY' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"PeriodicDay\"> {{row.periodicDay}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTYPE.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'VACCINATIONTYPE.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTYPE.TYPEID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.typeId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTYPE.NAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.name\">\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.status\">{{'VACCINATIONTYPE.STATUS'| translate}}</mat-slide-toggle>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTYPE.PERIODICDAY'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.periodicDay\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'VACCINATIONTYPE.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'VACCINATIONTYPE.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTYPE.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { VaccinationTypeService } from './vaccinationtype.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { VaccinationTypeDialogComponent } from './vaccinationtype-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'vaccinationtype-table',\r\n    templateUrl: './vaccinationtype.component.html',\r\n    styleUrls: ['./vaccinationtype.component.scss']\r\n})\r\nexport class VaccinationTypeComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: VaccinationTypeFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private vaccinationTypeService: VaccinationTypeService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new VaccinationTypeFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new VaccinationTypeFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('VACCINATIONTYPE.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.vaccinationTypeService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new VaccinationTypeData();\r\n\r\n        emptyData.typeId = 0;\n        emptyData.name = '';\n        emptyData.status = false;\n        emptyData.periodicDay = 0;\n        emptyData.createdDate = new Date();\n        emptyData.createdUser = 0;\n        emptyData.updatedDate = new Date();\n        emptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: VaccinationTypeData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: VaccinationTypeData, isNew: boolean) {\r\n\r\n        this.dialog.open(VaccinationTypeDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: VaccinationTypeData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.vaccinationTypeService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                response.errorMessage, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\n                prop: 'typeId',\n                translate: 'TYPEID',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'name',\n                translate: 'NAME',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'status',\n                translate: 'STATUS',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'periodicDay',\n                translate: 'PERIODICDAY',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class VaccinationTypeData {\r\n\r\n    typeId: number;\n    name: string;\n    status: boolean;\n    periodicDay: number;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class VaccinationTypeFilter {\r\n\r\n    typeId: number;\n    name: string;\n    status: boolean;\n    periodicDay: number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { VaccinationTypeData, VaccinationTypeFilter } from \"./vaccinationtype.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class VaccinationTypeService {\r\n\r\n    endPointBase = environment.apiURL + \"/VaccinationType/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: VaccinationTypeData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveVaccinationType\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: VaccinationTypeData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteVaccinationType?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: VaccinationTypeFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetVaccinationTypeList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { VaccinationTransactionComponent } from './VaccinationTransaction/vaccinationtransaction.component'\r\nimport { VaccinationTransactionDialogComponent } from './VaccinationTransaction/vaccinationtransaction-dialog.component';\r\nimport { VaccinationTypeComponent } from './VaccinationType/vaccinationtype.component'\r\nimport { VaccinationTypeDialogComponent } from './VaccinationType/vaccinationtype-dialog.component';\r\nimport { PatientComponent } from './Patient/patient.component'\r\nimport { PatientDialogComponent } from './Patient/patient-dialog.component';\r\nimport { CustomerComponent } from './Customer/customer.component'\r\nimport { CustomerDialogComponent } from './Customer/customer-dialog.component';\r\nimport { GenuComponent } from './Genu/genu.component';\r\nimport { GenuDialogComponent } from './Genu/genu-dialog.component';\r\n\r\nimport { GeneralRoutes } from './general.routing';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { SessionService } from \"../../shared/session.service\";\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { SharedComponentsModule } from '../../shared/components/shared-components.module';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\n\r\n//@Component_Imports\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatSidenavModule,\r\n        MatGridListModule,\r\n        MatButtonModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSlideToggleModule,\r\n        MatSelectModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatDialogModule,\r\n        FlexLayoutModule,\r\n        HttpClientModule,\r\n        CommonModule,\r\n        MatInputModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        NgxDatatableModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        MatTabsModule,\r\n        MatListModule,\r\n        MatCardModule,\r\n        MatAutocompleteModule,\r\n        SharedComponentsModule,\r\n        MatExpansionModule,\r\n        RouterModule.forChild(GeneralRoutes)\r\n    ],\r\n\r\n    declarations: [\r\n        VaccinationTransactionComponent,\r\n        VaccinationTransactionDialogComponent,\r\n        VaccinationTypeComponent,\r\n        VaccinationTypeDialogComponent,\r\n        PatientComponent,\r\n        PatientDialogComponent,\r\n        CustomerComponent,\r\n        CustomerDialogComponent,\r\n        GenuComponent,\r\n        GenuDialogComponent\r\n        //FastAutoCompleteComponent\r\n        //@Component_Declarations\r\n    ],\r\n    providers: [\r\n        SessionService\r\n    ]\r\n})\r\nexport class GeneralModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { VaccinationTransactionComponent } from './VaccinationTransaction/vaccinationtransaction.component'\r\nimport { VaccinationTypeComponent } from './VaccinationType/vaccinationtype.component'\r\nimport { PatientComponent } from './Patient/patient.component'\r\nimport { CustomerComponent } from './Customer/customer.component'\r\nimport { GenuComponent } from './Genu/genu.component'\r\n//@Component_Imports\r\n\r\n\r\nexport const GeneralRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'vaccinationtransaction',\r\n                component: VaccinationTransactionComponent,\r\n                data: { title: 'VACCINATIONTRANSACTION.VACCINATIONTRANSACTIONMENU', breadcrumb: 'VACCINATIONTRANSACTION.VACCINATIONTRANSACTIONMENU' }\r\n            },\r\n            {\r\n                path: 'vaccinationtype',\r\n                component: VaccinationTypeComponent,\r\n                data: { title: 'VACCINATIONTYPE.VACCINATIONTYPEMENU', breadcrumb: 'VACCINATIONTYPE.VACCINATIONTYPEMENU' }\r\n            },\r\n            {\r\n                path: 'customer',\r\n                component: CustomerComponent,\r\n                data: { title: 'CUSTOMER.CUSTOMERMENU', breadcrumb: 'CUSTOMER.CUSTOMERMENU' }\r\n            },\r\n            {\r\n                path: 'patient',\r\n                component: PatientComponent,\r\n                data: { title: 'PATIENT.PATIENTMENU', breadcrumb: 'PATIENT.PATIENTMENU' }\r\n            },\r\n            {\r\n                path: 'genu',\r\n                component: GenuComponent,\r\n                data: { title: 'GENU.GENUMENU', breadcrumb: 'GENU.GENUMENU' }\r\n            }\r\n            //@Component_Routes\r\n        ]\r\n    }\r\n];\r\n"]}