{"version":3,"sources":["webpack:///src/app/views/General/VaccinationTransaction/vaccinationtransaction-dialog.component.html","webpack:///src/app/views/General/VaccinationTransaction/vaccinationtransaction-dialog.component.ts","webpack:///src/app/views/General/VaccinationTransaction/vaccinationtransaction.component.html","webpack:///src/app/views/General/VaccinationTransaction/vaccinationtransaction.component.ts","webpack:///src/app/views/General/VaccinationTransaction/vaccinationtransaction.service.ts","webpack:///src/app/views/General/general.module.ts","webpack:///src/app/views/General/general.routing.ts"],"names":["VaccinationTransactionDialogComponent","dialogRef","data","vaccinationTransactionService","translate","navigationService","snackbar","row","isNew","close","operation","save","subscribe","response","sessionControl","isSuccess","open","instant","message","horizontalPosition","verticalPosition","duration","errorMessage","error","MAT_DIALOG_DATA","VaccinationTransactionComponent","dialog","showSpinner","displayedColumns","filter","VaccinationTransactionFilter","queryInfo","QueryInfo","pager","Pager","currentPage","pageSize","totalCount","getDataConf","x","showColumn","map","c","prop","getData","$event","orderby","active","direction","event","pageIndex","isExport","columnInfo","localText","window","environment","key","dataSource","MatTableDataSource","emptyData","VaccinationTransactionData","vaccinationId","vaccinationDate","Date","vaccinationType","statusId","description","vetId","createdDate","createdBy","modifyDate","modifyBy","openDialog","width","hasBackdrop","disableClose","afterClosed","deleteRow","ComfirmDialogComponent","comfirm","newItemDialog","downloadData","sortData","onPaginateChange","filterData","clearFilter","VaccinationTransactionService","httpClient","authService","endPointBase","post","getToken","columnInfos","GeneralModule","SessionService","MatSidenavModule","MatGridListModule","MatButtonModule","MatDatepickerModule","MatNativeDateModule","MatSlideToggleModule","MatSelectModule","MatIconModule","FormsModule","ReactiveFormsModule","MatDialogModule","FlexLayoutModule","HttpClientModule","CommonModule","MatInputModule","MatPaginatorModule","MatSortModule","MatTableModule","NgxDatatableModule","MatProgressSpinnerModule","TranslateModule","MatTabsModule","MatListModule","MatCardModule","MatAutocompleteModule","SharedComponentsModule","RouterModule","GeneralRoutes","path","children","component","title","breadcrumb"],"mappings":"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","file":"src_app_views_General_general_module_ts-es5.js","sourcesContent":["<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'VACCINATIONTRANSACTION.VACCINATIONTRANSACTION' | translate}}  - {{row.vaccinationId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'VACCINATIONTRANSACTION.VACCINATIONTRANSACTION' | translate}} - {{row.vaccinationId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.VACCINATIONDATE' | translate }}</mat-label>\r\n        <input matInput [matDatepicker]=\"vaccinationDatePicker\" [(ngModel)]=\"row.vaccinationDate\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"vaccinationDatePicker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #vaccinationDatePicker></mat-datepicker>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.VACCINATIONTYPE' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.vaccinationType\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.STATUSID' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.statusId\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.DESCRIPTION' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.description\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.VETID' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.vetId\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.CREATEDBY' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.createdBy\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.MODIFYDATE' | translate }}</mat-label>\r\n        <input matInput [matDatepicker]=\"modifyDatePicker\" [(ngModel)]=\"row.modifyDate\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"modifyDatePicker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #modifyDatePicker></mat-datepicker>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'VACCINATIONTRANSACTION.MODIFYBY' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.modifyBy\">\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { VaccinationTransactionData } from \"./vaccinationtransaction.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { VaccinationTransactionService } from './vaccinationtransaction.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"vaccinationtransaction-dialog\",\r\n    templateUrl: \"./vaccinationtransaction-dialog.component.html\"\r\n})\r\nexport class VaccinationTransactionDialogComponent {\r\n\r\n    row: VaccinationTransactionData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<VaccinationTransactionDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private vaccinationTransactionService: VaccinationTransactionService,\r\n        private translate: TranslateService,\r\n        private navigationService: NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.vaccinationTransactionService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                    this.translate.instant(response.message),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(response.errorMessage),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"vaccinationId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VACCINATIONID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VaccinationId\"> {{row.vaccinationId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"vaccinationDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VACCINATIONDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VaccinationDate\"> {{row.vaccinationDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"vaccinationType\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VACCINATIONTYPE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VaccinationType\"> {{row.vaccinationType}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"statusId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.STATUSID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"StatusId\"> {{row.statusId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"description\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.DESCRIPTION' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Description\"> {{row.description}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"vetId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.VETID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"VetId\"> {{row.vetId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"createdBy\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.CREATEDBY' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"CreatedBy\"> {{row.createdBy}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"modifyDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.MODIFYDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ModifyDate\"> {{row.modifyDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"modifyBy\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'VACCINATIONTRANSACTION.MODIFYBY' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ModifyBy\"> {{row.modifyBy}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'VACCINATIONTRANSACTION.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.vaccinationId\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"vaccinationDatepicker\" [(ngModel)]=\"filter.vaccinationDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"vaccinationDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #vaccinationDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"vaccinationDate2picker\" [(ngModel)]=\"filter.vaccinationDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"vaccinationDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #vaccinationDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTRANSACTION.VACCINATIONTYPE'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.vaccinationType\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTRANSACTION.STATUSID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.statusId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTRANSACTION.DESCRIPTION'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.description\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTRANSACTION.VETID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.vetId\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'VACCINATIONTRANSACTION.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'VACCINATIONTRANSACTION.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTRANSACTION.CREATEDBY'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdBy\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'VACCINATIONTRANSACTION.MODIFYDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"modifyDatepicker\" [(ngModel)]=\"filter.modifyDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"modifyDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #modifyDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'VACCINATIONTRANSACTION.MODIFYDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"modifyDate2picker\" [(ngModel)]=\"filter.modifyDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"modifyDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #modifyDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'VACCINATIONTRANSACTION.MODIFYBY'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.modifyBy\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { VaccinationTransactionService } from './vaccinationtransaction.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { VaccinationTransactionDialogComponent } from './vaccinationtransaction-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'vaccinationtransaction-table',\r\n    templateUrl: './vaccinationtransaction.component.html',\r\n    styleUrls: ['./vaccinationtransaction.component.scss']\r\n})\r\nexport class VaccinationTransactionComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: VaccinationTransactionFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private vaccinationTransactionService: VaccinationTransactionService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new VaccinationTransactionFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new VaccinationTransactionFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('VACCINATIONTRANSACTION.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.vaccinationTransactionService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new VaccinationTransactionData();\r\n\r\n        emptyData.vaccinationId = 0;\n        emptyData.vaccinationDate = new Date();\n        emptyData.vaccinationType = 0;\n        emptyData.statusId = 0;\n        emptyData.description = '';\n        emptyData.vetId = 0;\n        emptyData.createdDate = new Date();\n        emptyData.createdBy = 0;\n        emptyData.modifyDate = new Date();\n        emptyData.modifyBy = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: VaccinationTransactionData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: VaccinationTransactionData, isNew: boolean) {\r\n\r\n        this.dialog.open(VaccinationTransactionDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: VaccinationTransactionData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.vaccinationTransactionService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                response.errorMessage, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\n                prop: 'vaccinationId',\n                translate: 'VACCINATIONID',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'vaccinationDate',\n                translate: 'VACCINATIONDATE',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'vaccinationType',\n                translate: 'VACCINATIONTYPE',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'statusId',\n                translate: 'STATUSID',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'description',\n                translate: 'DESCRIPTION',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'vetId',\n                translate: 'VETID',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'createdBy',\n                translate: 'CREATEDBY',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'modifyDate',\n                translate: 'MODIFYDATE',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            },\n            {\n                prop: 'modifyBy',\n                translate: 'MODIFYBY',\n                showColumn: true,\n                isExport: true,\n                localText: ''\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class VaccinationTransactionData {\r\n\r\n    vaccinationId: number;\n    vaccinationDate: Date;\n    vaccinationType: number;\n    statusId: number;\n    description: string;\n    vetId: number;\n    createdBy: number;\n    modifyDate: Date;\n    modifyBy: number;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class VaccinationTransactionFilter {\r\n\r\n    vaccinationId: number;\n    vaccinationDate: Date;\n    vaccinationDate2: Date\n    vaccinationType: number;\n    statusId: number;\n    description: string;\n    vetId: number;\n    createdBy: number;\n    modifyDate: Date;\n    modifyDate2: Date\n    modifyBy: number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { VaccinationTransactionData, VaccinationTransactionFilter } from \"./vaccinationtransaction.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class VaccinationTransactionService {\r\n\r\n    endPointBase = environment.apiURL + \"/VaccinationTransaction/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: VaccinationTransactionData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveVaccinationTransaction\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: VaccinationTransactionData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteVaccinationTransaction?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: VaccinationTransactionFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetVaccinationTransactionList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { VaccinationTransactionComponent } from './VaccinationTransaction/vaccinationtransaction.component'\r\nimport { VaccinationTransactionDialogComponent } from './VaccinationTransaction/vaccinationtransaction-dialog.component';\r\n\r\nimport { GeneralRoutes } from './general.routing';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { SessionService } from \"../../shared/session.service\";\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { SharedComponentsModule } from '../../shared/components/shared-components.module';\r\n\r\n\r\n//@Component_Imports\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatSidenavModule,\r\n        MatGridListModule,\r\n        MatButtonModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSlideToggleModule,\r\n        MatSelectModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatDialogModule,\r\n        FlexLayoutModule,\r\n        HttpClientModule,\r\n        CommonModule,\r\n        MatInputModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        NgxDatatableModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        MatTabsModule,\r\n        MatListModule,\r\n        MatCardModule,\r\n        MatAutocompleteModule,\r\n        SharedComponentsModule,\r\n        RouterModule.forChild(GeneralRoutes)\r\n    ],\r\n\r\n    declarations: [\r\n        VaccinationTransactionComponent,\r\n        VaccinationTransactionDialogComponent\r\n        //FastAutoCompleteComponent\r\n        //@Component_Declarations\r\n    ],\r\n    providers: [\r\n        SessionService\r\n    ]\r\n})\r\nexport class GeneralModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { VaccinationTransactionComponent } from './VaccinationTransaction/vaccinationtransaction.component';\r\n\r\n//@Component_Imports\r\n\r\n\r\nexport const GeneralRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'vaccinationtransaction',\r\n                component: VaccinationTransactionComponent,\r\n                data: { title: 'VACCINATIONTRANSACTION.VACCINATIONTRANSACTIONMENU', breadcrumb: 'VACCINATIONTRANSACTION.VACCINATIONTRANSACTIONMENU' }\r\n            }\r\n            //@Component_Routes\r\n        ]\r\n    }\r\n];\r\n"]}