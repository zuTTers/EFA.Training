{"version":3,"sources":["./src/app/views/System/Auth/auth-dialog.component.ts","./src/app/views/System/Auth/auth-dialog.component.html","./src/app/views/System/Auth/auth.component.ts","./src/app/views/System/Auth/auth.component.html","./src/app/views/System/Auth/auth.service.ts","./src/app/views/System/Counter/counter-dialog.component.ts","./src/app/views/System/Counter/counter-dialog.component.html","./src/app/views/System/Counter/counter.component.ts","./src/app/views/System/Counter/counter.component.html","./src/app/views/System/Counter/counter.service.ts","./src/app/views/System/EmailAttachment/emailattachment-dialog.component.ts","./src/app/views/System/EmailAttachment/emailattachment-dialog.component.html","./src/app/views/System/EmailAttachment/emailattachment.component.ts","./src/app/views/System/EmailAttachment/emailattachment.component.html","./src/app/views/System/EmailAttachment/emailattachment.service.ts","./src/app/views/System/EmailConfig/emailconfig-dialog.component.ts","./src/app/views/System/EmailConfig/emailconfig-dialog.component.html","./src/app/views/System/EmailConfig/emailconfig.component.ts","./src/app/views/System/EmailConfig/emailconfig.component.html","./src/app/views/System/EmailConfig/emailconfig.service.ts","./src/app/views/System/Email/email-dialog.component.ts","./src/app/views/System/Email/email-dialog.component.html","./src/app/views/System/Email/email.component.ts","./src/app/views/System/Email/email.component.html","./src/app/views/System/Email/email.service.ts","./src/app/views/System/Log/log-dialog.component.ts","./src/app/views/System/Log/log-dialog.component.html","./src/app/views/System/Log/log.component.ts","./src/app/views/System/Log/log.component.html","./src/app/views/System/Log/log.service.ts","./src/app/views/System/Menu/menu-dialog.component.ts","./src/app/views/System/Menu/menu-dialog.component.html","./src/app/views/System/Menu/menu.component.ts","./src/app/views/System/Menu/menu.component.html","./src/app/views/System/Menu/menu.service.ts","./src/app/views/System/Parameter/parameter-dialog.component.ts","./src/app/views/System/Parameter/parameter-dialog.component.html","./src/app/views/System/Parameter/parameter.component.ts","./src/app/views/System/Parameter/parameter.component.html","./src/app/views/System/Parameter/parameter.service.ts","./src/app/views/System/RoleAuth/roleauth-dialog.component.ts","./src/app/views/System/RoleAuth/roleauth-dialog.component.html","./src/app/views/System/RoleAuth/roleauth.component.ts","./src/app/views/System/RoleAuth/roleauth.component.html","./src/app/views/System/RoleAuth/roleauth.service.ts","./src/app/views/System/Role/role-dialog.component.ts","./src/app/views/System/Role/role-dialog.component.html","./src/app/views/System/Role/role.component.ts","./src/app/views/System/Role/role.component.html","./src/app/views/System/Role/role.service.ts","./src/app/views/System/UserRole/userrole-dialog.component.ts","./src/app/views/System/UserRole/userrole-dialog.component.html","./src/app/views/System/UserRole/userrole.component.ts","./src/app/views/System/UserRole/userrole.component.html","./src/app/views/System/UserRole/userrole.service.ts","./src/app/views/System/User/user-dialog.component.ts","./src/app/views/System/User/user-dialog.component.html","./src/app/views/System/User/user.component.ts","./src/app/views/System/User/user.component.html","./src/app/views/System/User/user.service.ts","./src/app/views/System/system.module.ts","./src/app/views/System/system.routing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAGsE;;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAAiF;;;IAAA,4DAAK;;;IAAtF,0DAAiF;IAAjF,2QAAiF;;;IAC1H,yEAA0C;IAAA,uDAAmF;;;IAAA,4DAAK;;;IAAxF,0DAAmF;IAAnF,8QAAmF;;;;IAmB7H,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,+VAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,+VAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAOrD,6EAA+E;IAAnB,yTAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;ADpChH,MAAM,mBAAmB;IAI5B,YAAmB,SAA4C,EAC3B,IAAS,EACjC,WAAwB,EACxB,SAA4B,EAC5B,iBAAqC,EACrC,QAAqB;QALd,cAAS,GAAT,SAAS,CAAmC;QAC3B,SAAI,GAAJ,IAAI,CAAK;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAmB;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,aAAQ,GAAR,QAAQ,CAAa;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAExD,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3D;oBACG,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EACjE;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IAGP,CAAC;;sFA1EQ,mBAAmB,uMAKhB,qEAAe;iHALlB,mBAAmB;QCdhC,yEAAkH;QAC9G,6GAA+H;QAC/H,6GAAkI;QAClI,4EAAgH;QAAxE,2IAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,oFAA0D;QAC1D,4EAAW;QAAA,uDAAiC;;QAAA,4DAAY;QACzD,4EAAuD;QAA3B,8LAA0B;QAAtD,4DAAuD;QAC1D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACzD,4EAAuD;QAA3B,8LAA0B;QAAtD,4DAAuD;QAC1D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACzD,4EAAyD;QAA3B,8LAA0B;QAAxD,4DAAyD;QAC5D,4DAAiB;QAEb,mHAWM;QAEN,mHAYM;QACV,4DAAqB;QACrB,yFAAmC;QAC/B,0EAAkB;QACd,uHAAwH;QAC5H,4DAAM;QACN,2EAA4C;QACxC,8EAA4C;QAAlB,4IAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,8EAA2D;QAAjB,4IAAS,UAAM,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QACtG,4DAAM;QACV,4DAAqB;;QAvDK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAMxB,0DAAqB;QAArB,4EAAqB;QAC1B,0DAAiC;QAAjC,mJAAiC;QACjB,0DAA0B;QAA1B,qFAA0B;QAEzC,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,mJAAiC;QACjB,0DAA0B;QAA1B,qFAA0B;QAEzC,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,mJAAiC;QACf,0DAA0B;QAA1B,qFAA0B;QAGjD,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBV,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QACjB,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDpC;AAGC;AACA;AAEP;AACuC;;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,iYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,yXAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAI/B,sFAAmD;IAAC,uDAA8B;;IAAA,4DAAkB;;IAAhD,0DAA8B;IAA9B,0JAA8B;;;IAClF,+EAAoD;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAInE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAsD;IAAC,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAIvE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAsD;IAAC,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAIvE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAsD;IAAC,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAIvE,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,+JAAmC;;;IACvF,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,+JAAmC;;;IACvF,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAKzD,kFAAoC;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC5E,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;AD5D3G,MAAM,aAAa;IAUtB,YAAoB,WAAwB,EACjC,MAAiB,EACjB,SAA2B,EAC1B,QAAqB,EACrB,iBAAoC;QAJ5B,gBAAW,GAAX,WAAW,CAAa;QACjC,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAXhD,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAUoB,CAAC;IAErD,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;IACnC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC;aAC3D,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aACtE,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACzB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACpB,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBAC9F;qBACI;oBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3D;aACJ;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACxC,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;YAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACf,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE/B,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;QACvB,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAa;QACxB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAa,EAAE,KAAc;QAEpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uEAAmB,EAAE;YAClC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAc;QAEjB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBAC3D,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBAChD,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACN;gBACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;oBAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC/B,kBAAkB,EAAE,OAAO;wBAC3B,gBAAgB,EAAE,QAAQ;wBAC1B,QAAQ,EAAE,IAAI;qBACjB,CAAC,CAAC;gBAEP,CAAC,CAAC,CAAC;aACV;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;0EA7SQ,aAAa;2GAAb,aAAa;;QCtB1B,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,qIAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,oRAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,sIAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,+JAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,mIAAwF;QACxF,qHAOW;QACf,qEAAe;QAEf,6EAAoC;QACpD,oIAAoG;QACpG,sHAA8E;QAClF,qEAAe;QAEf,6EAAsC;QAClC,oIAAsG;QACtG,sHAAkF;QACtF,qEAAe;QAEf,6EAAsC;QAClC,oIAAsG;QACtG,sHAAkF;QACtF,qEAAe;QAEf,6EAAsC;QAClC,oIAAsG;QACtG,sHAAkF;QACtF,qEAAe;QAEf,6EAAyC;QACrC,oIAAyG;QACzG,sHAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,oIAAyG;QACzG,sHAAwF;QAC5F,qEAAe;QAGK,6EAA6C;QACzC,mIAA8F;QAC9F,sHAA6F;QACjG,qEAAe;QAEf,kIAAqE;QACrE,oHACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,yKAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,4HAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,sIAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,sIAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QAC9D,6EAAW;QAAA,wDAA4B;;QAAA,4DAAY;QACnD,6EAA0D;QAA5B,yLAA2B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA0D;QAA9B,2LAA6B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA0D;QAA9B,2LAA6B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA4D;QAA9B,2LAA6B;QAA3D,4DAA4D;QAChE,4DAAiB;QACjB,uEAAK;QACF,sFAAyD;QACrD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAAqF;QAAjC,8LAAgC;QAApF,4DAAqF;QACrF,wFAAmF;QACnF,uFAAoD;QACxD,4DAAiB;QACjB,oEACA;QAAA,sFAAyD;QACrD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAAuF;QAAlC,+LAAiC;QAAtF,4DAAuF;QACvF,wFAAoF;QACpF,uFAAqD;QACzD,4DAAiB;QACpB,4DAAM;QACN,sFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAA+D;QAAjC,8LAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGb,4DAAc;QAClB,4DAAwB;;;;QApIyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QAiDf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QAC9B,0DAA4B;QAA5B,iJAA4B;QACT,0DAA2B;QAA3B,sFAA2B;QAE7C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACb,0DAA6B;QAA7B,wFAA6B;QAE7C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACb,0DAA6B;QAA7B,wFAA6B;QAE7C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACX,0DAA6B;QAA7B,wFAA6B;QAG5C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAiC;QAAjC,sJAAiC;QAC5B,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAiC;QAAjC,sJAAiC;QAC5B,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAIlD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,sJAAiC;QACd,0DAAgC;QAAhC,2FAAgC;;ADyM3D,MAAM,QAAQ;IAcjB;IAEA,CAAC;CACJ;AAEM,MAAM,UAAU;IAanB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AErWsD;;;;AAKhD,MAAM,WAAW;IAIpB,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,QAAQ,CAAC;IAEsC,CAAC;IAEpF,IAAI,CAAC,IAAc;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAClH,CAAC;IAED,MAAM,CAAC,IAAc;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAC/G,CAAC;IAED,OAAO,CAAC,MAAkB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAEjF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAC3H,CAAC;;sEAxBQ,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;;;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAA0F;;;IAAA,4DAAK;;;IAA/F,0DAA0F;IAA1F,oRAA0F;;;IACnI,yEAA0C;IAAA,uDAA4F;;;IAAA,4DAAK;;;IAAjG,0DAA4F;IAA5F,uRAA4F;;;;IA4BtI,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,kWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,kWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAOrD,6EAA+E;IAAnB,4TAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;AD7ChH,MAAM,sBAAsB;IAI/B,YAAmB,SAA+C,EAC9B,IAAS,EACjC,cAA8B,EAC9B,SAA4B,EAC5B,iBAAqC,EACrC,QAAqB;QALd,cAAS,GAAT,SAAS,CAAsC;QAC9B,SAAI,GAAJ,IAAI,CAAK;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAS,GAAT,SAAS,CAAmB;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,aAAQ,GAAR,QAAQ,CAAa;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAE3D,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3D;oBACG,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EACjE;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IAGP,CAAC;;4FA1EQ,sBAAsB,uMAKnB,qEAAe;oHALlB,sBAAsB;QCdnC,yEAAkH;QAC9G,gHAAwI;QACxI,gHAA2I;QAC3I,4EAAgH;QAAxE,8IAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,oFAA0D;QAC1D,4EAAW;QAAA,uDAAuC;;QAAA,4DAAY;QAC/D,4EAA0D;QAA9B,oMAA6B;QAAzD,4DAA0D;QAC7D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAwC;;QAAA,4DAAY;QAChE,4EAA6D;QAA/B,qMAA8B;QAA5D,4DAA6D;QAChE,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAkC;;QAAA,4DAAY;QAC1D,4EAAqD;QAAzB,+LAAwB;QAApD,4DAAqD;QACxD,4DAAiB;QACjB,qFAA0D;QACvD,uFAA4C;QAA1B,2MAAyB;QAAE,4DAAmB;QAChE,2EAAgC;QAAA,wDAAmC;;QAAA,4DAAO;QAC1E,0EAAoD;QACvD,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAwC;;QAAA,4DAAY;QAChE,4EAA6D;QAA/B,qMAA8B;QAA5D,4DAA6D;QAChE,4DAAiB;QAEb,sHAWM;QAEN,sHAYM;QACV,4DAAqB;QACrB,0FAAmC;QAC/B,2EAAkB;QACd,2HAAwH;QAC5H,4DAAM;QACN,2EAA4C;QACxC,8EAA4C;QAAlB,+IAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,8EAA2D;QAAjB,+IAAS,UAAM,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QACtG,4DAAM;QACV,4DAAqB;;QAhEK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAMxB,0DAAqB;QAArB,4EAAqB;QAC1B,0DAAuC;QAAvC,yJAAuC;QACvB,0DAA6B;QAA7B,wFAA6B;QAE5C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAwC;QAAxC,0JAAwC;QACtB,0DAA8B;QAA9B,yFAA8B;QAE/C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAkC;QAAlC,oJAAkC;QAClB,0DAAwB;QAAxB,mFAAwB;QAEvC,0DAAqB;QAArB,4EAAqB;QAChB,0DAAyB;QAAzB,oFAAyB;QACX,0DAAmC;QAAnC,qJAAmC;QAGtD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAwC;QAAxC,0JAAwC;QACtB,0DAA8B;QAA9B,yFAA8B;QAGrD,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBV,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QACjB,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DpC;AAGO;AACN;AAEP;AACuC;;;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,oYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,4XAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAI/B,sFAAmD;IAAC,uDAAoC;;IAAA,4DAAkB;;IAAtD,0DAAoC;IAApC,gKAAoC;;;IACxF,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAI7E,sFAAmD;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3F,+EAA0D;IAAC,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;IAI/E,sFAAmD;IAAC,uDAAiC;;IAAA,4DAAkB;;IAAnD,0DAAiC;IAAjC,6JAAiC;;;IACrF,+EAAoD;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAIpE,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,8JAAmC;;;IACvF,+EAAqD;IACjD,uFAAqD;IAAnC,+OAAyB;IAAW,4DAAmB;IAC7E,4DAAW;;;IADW,0DAAyB;IAAzB,oFAAyB;;;IAK9C,sFAAmD;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3F,+EAA0D;IAAC,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;IAI/E,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAKzD,kFAAoC;IAAC,uDAA0C;;IAAA,4DAAkB;;IAA5D,0DAA0C;IAA1C,sKAA0C;;;IAC/E,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;ADxE3G,MAAM,gBAAgB;IAUzB,YAAoB,cAA+B,EACxC,MAAiB,EACjB,SAA2B,EAC1B,QAAqB,EACrB,iBAAoC;QAJ5B,mBAAc,GAAd,cAAc,CAAiB;QACxC,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAXhD,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAUoB,CAAC;IAErD,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAK,aAAa,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAK,aAAa,EAAE,CAAC;IACvC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,SAAS,CAAC;aAC9D,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aACzE,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACpB,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBAC9F;qBACI;oBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3D;aACJ;iBACK;gBAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACxC,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;YAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACf,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,WAAW,EAAE,CAAC;QAElC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;QAChC,SAAS,CAAC,WAAW,GAAG,EAAE,CAAC;QAC3B,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC;QAC3B,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC;QACtB,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;QAC1B,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC;QAC3B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAgB;QAC3B,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAgB,EAAE,KAAc;QAEvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6EAAsB,EAAE;YACrC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAC,IAAI;YACjB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAiB;QAEpB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBAC7D,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBACjD,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,QAAQ,CAAC,YAAY,EAAE;4BACvB,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACV;gBACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;oBAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,KAAK,EAAE;wBACP,kBAAkB,EAAE,OAAO;wBAC3B,gBAAgB,EAAE,QAAQ;wBAC1B,QAAQ,EAAE,IAAI;qBACjB,CAAC,CAAC;gBAEP,CAAC,CAAC,CAAC;aACV;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACA;gBACV,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,cAAc;gBACzB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,cAAc;gBACzB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YAEW;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACA;gBACG,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;gFA7TQ,gBAAgB;8GAAhB,gBAAgB;;QCtB7B,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,wIAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,uRAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,yIAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,kKAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,sIAAwF;QACxF,wHAOW;QACf,qEAAe;QAEf,6EAAuC;QACvD,uIAA0G;QAC1G,yHAAoF;QACxF,qEAAe;QAEf,6EAAyC;QACrC,uIAA4G;QAC5G,yHAAwF;QAC5F,qEAAe;QAEf,6EAA0C;QACtC,uIAA6G;QAC7G,yHAA0F;QAC9F,qEAAe;QAEf,6EAAoC;QAChC,uIAAuG;QACvG,yHAA8E;QAClF,qEAAe;QAEf,6EAAqC;QAClC,uIAAyG;QACzG,yHAEW;QACd,qEAAe;QAEf,6EAA0C;QACtC,uIAA6G;QAC7G,yHAA0F;QAC9F,qEAAe;QAEf,6EAAyC;QACrC,uIAA4G;QAC5G,yHAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,uIAA4G;QAC5G,yHAAwF;QAC5F,qEAAe;QAGK,6EAA6C;QACzC,sIAAiG;QACjG,yHAA6F;QACjG,qEAAe;QAEf,qIAAqE;QACrE,uHACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,4KAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,+HAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,yIAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,yIAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QAC9D,6EAAW;QAAA,wDAAkC;;QAAA,4DAAY;QACzD,6EAA6D;QAA/B,+LAA8B;QAA5D,4DAA6D;QACjE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,6EAA6D;QAAjC,iMAAgC;QAA5D,4DAA6D;QACjE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAAgE;QAAlC,kMAAiC;QAA/D,4DAAgE;QACpE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA+B;;QAAA,4DAAY;QACtD,6EAAwD;QAA5B,4LAA2B;QAAvD,4DAAwD;QAC5D,4DAAiB;QACjB,wFAA+C;QAA7B,wMAA4B;QAAC,wDAAgC;;QAAA,4DAAmB;QAClG,sFAA0D;QACtD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAAgE;QAAlC,kMAAiC;QAA/D,4DAAgE;QACpE,4DAAiB;QACjB,uEAAK;QACF,sFAAyD;QACrD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,6EAAqF;QAAjC,iMAAgC;QAApF,4DAAqF;QACrF,wFAAmF;QACnF,uFAAoD;QACxD,4DAAiB;QACjB,oEACA;QAAA,sFAAyD;QACrD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,8EAAuF;QAAlC,mMAAiC;QAAtF,4DAAuF;QACvF,yFAAoF;QACpF,wFAAqD;QACzD,4DAAiB;QACpB,4DAAM;QACN,uFAA0D;QACtD,8EAAW;QAAA,yDAAoC;;QAAA,4DAAY;QAC3D,8EAA+D;QAAjC,kMAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGb,4DAAc;QAClB,4DAAwB;;;;QArJyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QA6Df,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QAC9B,0DAAkC;QAAlC,uJAAkC;QACf,0DAA8B;QAA9B,yFAA8B;QAEhD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,yJAAoC;QACnB,0DAAgC;QAAhC,2FAAgC;QAEhD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAqC;QAArC,0JAAqC;QAClB,0DAAiC;QAAjC,4FAAiC;QAEnD,0DAAqB;QAArB,4EAAqB;QACtB,0DAA+B;QAA/B,oJAA+B;QACd,0DAA2B;QAA3B,sFAA2B;QAEzC,0DAA4B;QAA5B,uFAA4B;QAAC,0DAAgC;QAAhC,qJAAgC;QAC/D,0DAAqB;QAArB,4EAAqB;QACtB,0DAAqC;QAArC,0JAAqC;QAClB,0DAAiC;QAAjC,4FAAiC;QAGhD,0DAAoB;QAApB,2EAAoB;QACrB,0DAAoC;QAApC,yJAAoC;QAC/B,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAoC;QAApC,yJAAoC;QAC/B,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAIlD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,0JAAoC;QACjB,0DAAgC;QAAhC,2FAAgC;;ADwM3D,MAAM,WAAW;IAgBpB;IAEA,CAAC;CACJ;AAEM,MAAM,aAAa;IAetB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AEzXsD;;;;AAKhD,MAAM,cAAc;IAIvB,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,WAAW,CAAC;IAEmC,CAAC;IAEpF,IAAI,CAAC,IAAiB;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACrH,CAAC;IAED,MAAM,CAAC,IAAiB;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAClH,CAAC;IAED,OAAO,CAAC,MAAqB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAEpF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,gBAAgB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAC9H,CAAC;;4EAxBQ,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAAkH;;;IAAA,4DAAK;;;IAAvH,0DAAkH;IAAlH,4SAAkH;;;IAC3J,yEAA0C;IAAA,uDAAoH;;;IAAA,4DAAK;;;IAAzH,0DAAoH;IAApH,+SAAoH;;;;IAmB9J,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,0WAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,0WAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAOrD,6EAA+E;IAAnB,oUAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;ADpChH,MAAM,8BAA8B;IAIvC,YAAmB,SAAuD,EACtC,IAAS,EACjC,sBAA8C,EAC9C,SAA4B,EAC5B,iBAAqC,EACrC,QAAqB;QALd,cAAS,GAAT,SAAS,CAA8C;QACtC,SAAI,GAAJ,IAAI,CAAK;QACjC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,cAAS,GAAT,SAAS,CAAmB;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,aAAQ,GAAR,QAAQ,CAAa;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAEnE,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3D;oBACG,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EACjE;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IAGP,CAAC;;4GA1EQ,8BAA8B,uMAK3B,qEAAe;4HALlB,8BAA8B;QCd3C,yEAAkH;QAC9G,wHAAgK;QAChK,wHAAmK;QACnK,4EAAgH;QAAxE,sJAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,oFAA0D;QAC1D,4EAAW;QAAA,uDAA2C;;QAAA,4DAAY;QACnE,4EAAwD;QAA1B,wMAAyB;QAAvD,4DAAwD;QAC3D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAwC;;QAAA,4DAAY;QAChE,4EAAmD;QAAvB,qMAAsB;QAAlD,4DAAmD;QACtD,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAA4C;;QAAA,4DAAY;QACpE,4EAAuD;QAA3B,yMAA0B;QAAtD,4DAAuD;QAC1D,4DAAiB;QAEb,8HAWM;QAEN,8HAYM;QACV,4DAAqB;QACrB,yFAAmC;QAC/B,0EAAkB;QACd,kIAAwH;QAC5H,4DAAM;QACN,2EAA4C;QACxC,8EAA4C;QAAlB,uJAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,8EAA2D;QAAjB,uJAAS,UAAM,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QACtG,4DAAM;QACV,4DAAqB;;QAvDK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAMxB,0DAAqB;QAArB,4EAAqB;QAC1B,0DAA2C;QAA3C,6JAA2C;QACzB,0DAAyB;QAAzB,oFAAyB;QAE1C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAwC;QAAxC,0JAAwC;QACxB,0DAAsB;QAAtB,iFAAsB;QAErC,0DAAqB;QAArB,4EAAqB;QACtB,0DAA4C;QAA5C,8JAA4C;QAC5B,0DAA0B;QAA1B,qFAA0B;QAG/C,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBV,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QACjB,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDpC;AAGuB;AACtB;AAEP;AACuC;;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,4YAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,oYAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAI/B,sFAAmD;IAAC,uDAAoD;;IAAA,4DAAkB;;IAAtE,0DAAoD;IAApD,gLAAoD;;;IACxG,+EAA+D;IAAC,uDAAyB;IAAA,4DAAW;;;IAApC,0DAAyB;IAAzB,oGAAyB;;;IAIzF,sFAAmD;IAAC,uDAA0C;;IAAA,4DAAkB;;IAA5D,0DAA0C;IAA1C,sKAA0C;;;IAC9F,+EAAqD;IAAC,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAIrE,sFAAmD;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3F,+EAAkD;IAAC,uDAAY;IAAA,4DAAW;;;IAAvB,0DAAY;IAAZ,uFAAY;;;IAI/D,sFAAmD;IAAC,uDAA2C;;IAAA,4DAAkB;;IAA7D,0DAA2C;IAA3C,uKAA2C;;;IAC/F,+EAAsD;IAAC,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAIvE,sFAAmD;IAAC,uDAA8C;;IAAA,4DAAkB;;IAAhE,0DAA8C;IAA9C,0KAA8C;;;IAClG,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAA8C;;IAAA,4DAAkB;;IAAhE,0DAA8C;IAA9C,0KAA8C;;;IAClG,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAKzD,kFAAoC;IAAC,uDAAkD;;IAAA,4DAAkB;;IAApE,0DAAkD;IAAlD,8KAAkD;;;IACvF,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;AD5D3G,MAAM,wBAAwB;IAUjC,YAAoB,sBAA+C,EACxD,MAAiB,EACjB,SAA2B,EAC1B,QAAqB,EACrB,iBAAoC;QAJ5B,2BAAsB,GAAtB,sBAAsB,CAAyB;QACxD,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAXhD,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAUoB,CAAC;IAErD,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAK,qBAAqB,EAAE,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAK,qBAAqB,EAAE,CAAC;IAC/C,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,CAAC,SAAS,CAAC;aACtE,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aACjF,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACpB,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBAC9F;qBACI;oBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3D;aACJ;iBACK;gBAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACxC,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;YAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACf,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAE1C,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC;QACxC,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC;QACtB,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC;QACpB,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAwB;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAwB,EAAE,KAAc;QAE/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6FAA8B,EAAE;YAC7C,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAC,IAAI;YACjB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAyB;QAE5B,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBACrE,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBACjD,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACV;gBACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;oBAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC/B,kBAAkB,EAAE,OAAO;wBAC3B,gBAAgB,EAAE,QAAQ;wBAC1B,QAAQ,EAAE,IAAI;qBACjB,CAAC,CAAC;gBAEP,CAAC,CAAC,CAAC;aACV;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACA;gBACV,IAAI,EAAE,mBAAmB;gBACzB,SAAS,EAAE,mBAAmB;gBAC9B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,MAAM;gBACjB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YAEW;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACA;gBACG,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;gGA7SQ,wBAAwB;sHAAxB,wBAAwB;;QCtBrC,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,gJAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,+RAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,iJAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,0KAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,8IAAwF;QACxF,gIAOW;QACf,qEAAe;QAEf,6EAA+C;QAC/D,+IAA0H;QAC1H,iIAAoG;QACxG,qEAAe;QAEf,6EAAqC;QACjC,+IAAgH;QAChH,iIAAgF;QACpF,qEAAe;QAEf,6EAAkC;QAC9B,+IAA6G;QAC7G,iIAA0E;QAC9E,qEAAe;QAEf,6EAAsC;QAClC,+IAAiH;QACjH,iIAAkF;QACtF,qEAAe;QAEf,6EAAyC;QACrC,+IAAoH;QACpH,iIAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,+IAAoH;QACpH,iIAAwF;QAC5F,qEAAe;QAGK,6EAA6C;QACzC,8IAAyG;QACzG,iIAA6F;QACjG,qEAAe;QAEf,6IAAqE;QACrE,+HACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,oLAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,uIAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,iJAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,iJAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QAC9D,6EAAW;QAAA,wDAAkD;;QAAA,4DAAY;QACzE,6EAAqE;QAAvC,+MAAsC;QAApE,4DAAqE;QACzE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAwC;;QAAA,4DAAY;QAC/D,6EAA2D;QAA7B,qMAA4B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAAsD;QAA1B,kMAAyB;QAArD,4DAAsD;QAC1D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAyC;;QAAA,4DAAY;QAChE,6EAA0D;QAA9B,sMAA6B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,uEAAK;QACF,sFAAyD;QACrD,6EAAW;QAAA,wDAA4C;;QAAA,4DAAY;QACnE,6EAAqF;QAAjC,yMAAgC;QAApF,4DAAqF;QACrF,wFAAmF;QACnF,uFAAoD;QACxD,4DAAiB;QACjB,oEACA;QAAA,sFAAyD;QACrD,6EAAW;QAAA,wDAA4C;;QAAA,4DAAY;QACnE,6EAAuF;QAAlC,0MAAiC;QAAtF,4DAAuF;QACvF,wFAAoF;QACpF,uFAAqD;QACzD,4DAAiB;QACpB,4DAAM;QACN,sFAA0D;QACtD,6EAAW;QAAA,wDAA4C;;QAAA,4DAAY;QACnE,6EAA+D;QAAjC,yMAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGb,4DAAc;QAClB,4DAAwB;;;;QApIyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QAiDf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QAC9B,0DAAkD;QAAlD,uKAAkD;QAC/B,0DAAsC;QAAtC,iGAAsC;QAExD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAwC;QAAxC,6JAAwC;QACrB,0DAA4B;QAA5B,uFAA4B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAqC;QAArC,0JAAqC;QACpB,0DAAyB;QAAzB,oFAAyB;QAEzC,0DAAqB;QAArB,4EAAqB;QACtB,0DAAyC;QAAzC,8JAAyC;QACxB,0DAA6B;QAA7B,wFAA6B;QAG1C,0DAAoB;QAApB,2EAAoB;QACrB,0DAA4C;QAA5C,iKAA4C;QACvC,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAA4C;QAA5C,iKAA4C;QACvC,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAIlD,0DAAqB;QAArB,4EAAqB;QACtB,0DAA4C;QAA5C,iKAA4C;QACzB,0DAAgC;QAAhC,2FAAgC;;ADyM3D,MAAM,mBAAmB;IAc5B;IAEA,CAAC;CACJ;AAEM,MAAM,qBAAqB;IAa9B;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AErWsD;;;;AAKhD,MAAM,sBAAsB;IAI/B,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,mBAAmB,CAAC;IAE2B,CAAC;IAEpF,IAAI,CAAC,IAAyB;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,qBAAqB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAC7H,CAAC;IAED,MAAM,CAAC,IAAyB;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,gCAAgC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1H,CAAC;IAED,OAAO,CAAC,MAA6B,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAE5F,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,wBAAwB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IACtI,CAAC;;4FAxBQ,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFnB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;;;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAAsG;;;IAAA,4DAAK;;;IAA3G,0DAAsG;IAAtG,gSAAsG;;;IAC/I,yEAA0C;IAAA,uDAAwG;;;IAAA,4DAAK;;;IAA7G,0DAAwG;IAAxG,mSAAwG;;;;IAqClJ,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,sWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,sWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAOrD,6EAA+E;IAAnB,gUAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;ADtDhH,MAAM,0BAA0B;IAInC,YAAmB,SAAmD,EAClC,IAAS,EACjC,kBAAsC,EACtC,SAA4B,EAC5B,iBAAqC,EACrC,QAAqB;QALd,cAAS,GAAT,SAAS,CAA0C;QAClC,SAAI,GAAJ,IAAI,CAAK;QACjC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,cAAS,GAAT,SAAS,CAAmB;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,aAAQ,GAAR,QAAQ,CAAa;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAE/D,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3D;oBACG,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EACjE;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IAGP,CAAC;;oGA1EQ,0BAA0B,uMAKvB,qEAAe;wHALlB,0BAA0B;QCdvC,yEAAkH;QAC9G,oHAAoJ;QACpJ,oHAAuJ;QACvJ,4EAAgH;QAAxE,kJAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,oFAA0D;QACtD,4EAAW;QAAA,uDAA0C;;QAAA,4DAAY;QACjE,4EAAyD;QAA7B,uMAA4B;QAAxD,4DAAyD;QAC7D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,4EAAmD;QAAvB,iMAAsB;QAAlD,4DAAmD;QACvD,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,4EAAmD;QAAvB,iMAAsB;QAAlD,4DAAmD;QACvD,4DAAiB;QACjB,qFAA0D;QACtD,uFAA8C;QAA5B,iNAA2B;QAAE,4DAAmB;QAClE,2EAAgC;QAAA,wDAAyC;;QAAA,4DAAO;QAChF,0EAAoD;QACxD,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAwC;;QAAA,4DAAY;QAC/D,4EAAuD;QAA3B,qMAA0B;QAAtD,4DAAuD;QAC3D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAwC;;QAAA,4DAAY;QAC/D,4EAAuD;QAA3B,qMAA0B;QAAtD,4DAAuD;QAC3D,4DAAiB;QACjB,qFAA0D;QACtD,uFAA6C;QAA3B,gNAA0B;QAAE,4DAAmB;QACjE,2EAAgC;QAAA,wDAAwC;;QAAA,4DAAO;QAC/E,0EAAoD;QACxD,4DAAiB;QAEjB,0HAWM;QAEN,0HAYM;QACV,4DAAqB;QACrB,yFAAmC;QAC/B,2EAAkB;QACd,+HAAwH;QAC5H,4DAAM;QACN,2EAA4C;QACxC,8EAA4C;QAAlB,mJAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,8EAA2D;QAAjB,mJAAS,UAAM,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QACtG,4DAAM;QACV,4DAAqB;;QAzEK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAMxB,0DAAqB;QAArB,4EAAqB;QACtB,0DAA0C;QAA1C,4JAA0C;QACzB,0DAA4B;QAA5B,uFAA4B;QAE5C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,sJAAoC;QACnB,0DAAsB;QAAtB,iFAAsB;QAEtC,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,sJAAoC;QACnB,0DAAsB;QAAtB,iFAAsB;QAEtC,0DAAqB;QAArB,4EAAqB;QACf,0DAA2B;QAA3B,sFAA2B;QACb,0DAAyC;QAAzC,2JAAyC;QAG7D,0DAAqB;QAArB,4EAAqB;QACtB,0DAAwC;QAAxC,0JAAwC;QACvB,0DAA0B;QAA1B,qFAA0B;QAE1C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAwC;QAAxC,0JAAwC;QACvB,0DAA0B;QAA1B,qFAA0B;QAE1C,0DAAqB;QAArB,4EAAqB;QACf,0DAA0B;QAA1B,qFAA0B;QACZ,0DAAwC;QAAxC,0JAAwC;QAItE,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBV,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QACjB,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEpC;AAGe;AACd;AAEP;AACuC;;;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,wYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,gYAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAIX,sFAAmD;IAAC,uDAA4C;;IAAA,4DAAkB;;IAA9D,0DAA4C;IAA5C,wKAA4C;;;IAChG,+EAA2D;IAAC,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;IAIjF,sFAAmD;IAAC,uDAAyC;;IAAA,4DAAkB;;IAA3D,0DAAyC;IAAzC,qKAAyC;;;IAC7F,+EAAwD;IAAC,uDAAkB;IAAA,4DAAW;;;IAA7B,0DAAkB;IAAlB,6FAAkB;;;IAI3E,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,+JAAmC;;;IACvF,+EAAkD;IAAC,uDAAY;IAAA,4DAAW;;;IAAvB,0DAAY;IAAZ,uFAAY;;;IAI/D,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,+JAAmC;;;IACvF,+EAAkD;IAAC,uDAAY;IAAA,4DAAW;;;IAAvB,0DAAY;IAAZ,uFAAY;;;IAI/D,sFAAmD;IAAC,uDAAyC;;IAAA,4DAAkB;;IAA3D,0DAAyC;IAAzC,oKAAyC;;;IAC7F,+EAAuD;IACnD,uFAAuD;IAArC,qPAA2B;IAAW,4DAAmB;IAC/E,4DAAW;;;IADW,0DAA2B;IAA3B,sFAA2B;;;IAKjD,sFAAmD;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3F,+EAAsD;IAAC,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAIvE,sFAAmD;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3F,+EAAsD;IAAC,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAIvE,sFAAmD;IAAC,uDAAwC;;IAAA,4DAAkB;;IAA1D,0DAAwC;IAAxC,mKAAwC;;;IAC5F,+EAAsD;IAClD,uFAAsD;IAApC,oPAA0B;IAAW,4DAAmB;IAC9E,4DAAW;;;IADW,0DAA0B;IAA1B,qFAA0B;;;IAKhD,sFAAmD;IAAC,uDAA0C;;IAAA,4DAAkB;;IAA5D,0DAA0C;IAA1C,sKAA0C;;;IAC9F,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAA0C;;IAAA,4DAAkB;;IAA5D,0DAA0C;IAA1C,sKAA0C;;;IAC9F,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAK7E,kFAAmC;IAAC,uDAA8C;;IAAA,4DAAkB;;IAAhE,0DAA8C;IAA9C,0KAA8C;;;IAClF,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;ADpF3G,MAAM,oBAAoB;IAU7B,YAAoB,kBAAuC,EAChD,MAAiB,EACjB,SAA2B,EAC1B,QAAqB,EACrB,iBAAoC;QAJ5B,uBAAkB,GAAlB,kBAAkB,CAAqB;QAChD,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAXhD,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAUoB,CAAC;IAErD,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAK,iBAAiB,EAAE,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAK,iBAAiB,EAAE,CAAC;IAC3C,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC,SAAS,CAAC;aAClE,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aAC7E,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACpB,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBAC9F;qBACI;oBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3D;aACJ;iBACK;gBAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACxC,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;YAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACf,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,eAAe,EAAE,CAAC;QAEtC,SAAS,CAAC,aAAa,GAAG,CAAC,CAAC;QACpC,SAAS,CAAC,UAAU,GAAG,EAAE,CAAC;QAC1B,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC;QACpB,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC;QACpB,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;QAC5B,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC3B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAoB;QAC/B,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAoB,EAAE,KAAc;QAE3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qFAA0B,EAAE;YACzC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAC,IAAI;YACjB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAqB;QAExB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBACjE,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBACjD,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACV;gBACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;oBAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC/B,kBAAkB,EAAE,OAAO;wBAC3B,gBAAgB,EAAE,QAAQ;wBAC1B,QAAQ,EAAE,IAAI;qBACjB,CAAC,CAAC;gBAEP,CAAC,CAAC,CAAC;aACV;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACA;gBACV,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,eAAe;gBAC1B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,YAAY;gBACvB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,MAAM;gBACjB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,MAAM;gBACjB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YAEW;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACA;gBACG,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;wFA7UQ,oBAAoB;kHAApB,oBAAoB;;QCtBjC,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,4IAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,2RAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,6IAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,sKAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,0IAAwF;QACxF,4HAOW;QACf,qEAAe;QAEf,6EAA2C;QACvC,2IAAkH;QAClH,6HAA4F;QAChG,qEAAe;QAEf,6EAAwC;QACpC,2IAA+G;QAC/G,6HAAsF;QAC1F,qEAAe;QAEf,6EAAkC;QAC9B,2IAAyG;QACzG,6HAA0E;QAC9E,qEAAe;QAEf,6EAAkC;QAC9B,2IAAyG;QACzG,6HAA0E;QAC9E,qEAAe;QAEf,6EAAuC;QACnC,2IAA+G;QAC/G,6HAEW;QACf,qEAAe;QAEf,6EAAsC;QAClC,2IAA6G;QAC7G,6HAAkF;QACtF,qEAAe;QAEf,6EAAsC;QAClC,2IAA6G;QAC7G,6HAAkF;QACtF,qEAAe;QAEf,6EAAsC;QAClC,2IAA8G;QAC9G,6HAEW;QACf,qEAAe;QAEf,6EAAyC;QACrC,2IAAgH;QAChH,6HAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,2IAAgH;QAChH,6HAAwF;QAC5F,qEAAe;QAGf,6EAA6C;QACzC,0IAAoG;QACpG,6HAA6F;QACjG,qEAAe;QAEf,yIAAqE;QACrE,2HACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,gLAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,mIAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,6IAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,6IAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QACtD,6EAAW;QAAA,wDAA0C;;QAAA,4DAAY;QACjE,6EAAiE;QAAnC,uMAAkC;QAAhE,4DAAiE;QACrE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAuC;;QAAA,4DAAY;QAC9D,6EAA4D;QAAhC,oMAA+B;QAA3D,4DAA4D;QAChE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAAsD;QAA1B,8LAAyB;QAArD,4DAAsD;QAC1D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAAsD;QAA1B,8LAAyB;QAArD,4DAAsD;QAC1D,4DAAiB;QACjB,wFAAiD;QAA/B,8MAA8B;QAAC,wDAAsC;;QAAA,4DAAmB;QAC1G,sFAA0D;QACtD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAA0D;QAA9B,kMAA6B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAA0D;QAA9B,kMAA6B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,wFAAgD;QAA9B,6MAA6B;QAAC,wDAAqC;;QAAA,4DAAmB;QACxG,wEAAK;QACD,uFAAyD;QACrD,8EAAW;QAAA,yDAAwC;;QAAA,4DAAY;QAC/D,8EAAqF;QAAjC,sMAAgC;QAApF,4DAAqF;QACrF,yFAAmF;QACnF,wFAAoD;QACxD,4DAAiB;QACjB,qEACA;QAAA,uFAAyD;QACrD,8EAAW;QAAA,yDAAwC;;QAAA,4DAAY;QAC/D,8EAAuF;QAAlC,uMAAiC;QAAtF,4DAAuF;QACvF,yFAAoF;QACpF,wFAAqD;QACzD,4DAAiB;QACrB,4DAAM;QACN,uFAA0D;QACtD,8EAAW;QAAA,yDAAwC;;QAAA,4DAAY;QAC/D,8EAA+D;QAAjC,sMAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGrB,4DAAc;QAClB,4DAAwB;;;;QAtKyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QAyEf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QACtB,0DAA0C;QAA1C,+JAA0C;QACvB,0DAAkC;QAAlC,6FAAkC;QAEpD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAuC;QAAvC,4JAAuC;QACtB,0DAA+B;QAA/B,0FAA+B;QAE/C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,sJAAiC;QAChB,0DAAyB;QAAzB,oFAAyB;QAEzC,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,sJAAiC;QAChB,0DAAyB;QAAzB,oFAAyB;QAEvC,0DAA8B;QAA9B,yFAA8B;QAAC,0DAAsC;QAAtC,2JAAsC;QACvE,0DAAqB;QAArB,4EAAqB;QACtB,0DAAqC;QAArC,0JAAqC;QACpB,0DAA6B;QAA7B,wFAA6B;QAE7C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAqC;QAArC,0JAAqC;QACpB,0DAA6B;QAA7B,wFAA6B;QAE3C,0DAA6B;QAA7B,wFAA6B;QAAC,0DAAqC;QAArC,0JAAqC;QAEjE,0DAAoB;QAApB,2EAAoB;QACrB,0DAAwC;QAAxC,8JAAwC;QACnC,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAwC;QAAxC,8JAAwC;QACnC,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAInD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAwC;QAAxC,8JAAwC;QACrB,0DAAgC;QAAhC,2FAAgC;;ADuMnE,MAAM,eAAe;IAkBxB;IAEA,CAAC;CACJ;AAEM,MAAM,iBAAiB;IAiB1B;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AE7YsD;;;;AAKhD,MAAM,kBAAkB;IAI3B,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,eAAe,CAAC;IAE+B,CAAC;IAEpF,IAAI,CAAC,IAAqB;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,iBAAiB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACzH,CAAC;IAED,MAAM,CAAC,IAAqB;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,4BAA4B,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACtH,CAAC;IAED,OAAO,CAAC,MAAyB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAExF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,oBAAoB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAClI,CAAC;;oFAxBQ,kBAAkB;mHAAlB,kBAAkB,WAAlB,kBAAkB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;;;;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAAoF;;;IAAA,4DAAK;;;IAAzF,0DAAoF;IAApF,8QAAoF;;;IAC7H,yEAA0C;IAAA,uDAAsF;;;IAAA,4DAAK;;;IAA3F,0DAAsF;IAAtF,iRAAsF;;;;IAoDhI,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,gWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,gWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAOrD,6EAA+E;IAAnB,4TAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;ADrEhH,MAAM,oBAAoB;IAI7B,YAAmB,SAA6C,EAC5B,IAAS,EACjC,YAA0B,EAC1B,SAA4B,EAC5B,iBAAqC,EACrC,QAAqB;QALd,cAAS,GAAT,SAAS,CAAoC;QAC5B,SAAI,GAAJ,IAAI,CAAK;QACjC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,cAAS,GAAT,SAAS,CAAmB;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,aAAQ,GAAR,QAAQ,CAAa;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAEzD,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3D;oBACG,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EACjE;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IAGP,CAAC;;wFA1EQ,oBAAoB,uMAKjB,qEAAe;kHALlB,oBAAoB;QCdjC,yEAAkH;QAC9G,8GAAkI;QAClI,8GAAqI;QACrI,4EAAgH;QAAxE,4IAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,oFAA0D;QAC1D,4EAAW;QAAA,uDAAmC;;QAAA,4DAAY;QAC3D,4EAAwD;QAA5B,gMAA2B;QAAvD,4DAAwD;QAC3D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACzD,4EAAsD;QAA1B,8LAAyB;QAArD,4DAAsD;QACzD,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAmC;;QAAA,4DAAY;QAC3D,4EAAwD;QAA5B,gMAA2B;QAAvD,4DAAwD;QAC3D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC5D,4EAAyD;QAA7B,iMAA4B;QAAxD,4DAAyD;QAC5D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACzD,4EAAsD;QAA1B,8LAAyB;QAArD,4DAAsD;QACzD,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACtD,4EAAmD;QAAvB,2LAAsB;QAAlD,4DAAmD;QACtD,4DAAiB;QACjB,qFAA0D;QACvD,uFAA2C;QAAzB,wMAAwB;QAAE,4DAAmB;QAC/D,2EAAgC;QAAA,wDAAgC;;QAAA,4DAAO;QACvE,0EAAoD;QACvD,4DAAiB;QACjB,qFAA0D;QACvD,uFAA2C;QAAzB,wMAAwB;QAAE,4DAAmB;QAC/D,2EAAgC;QAAA,wDAAgC;;QAAA,4DAAO;QACvE,0EAAoD;QACvD,4DAAiB;QACjB,qFAA0D;QACvD,uFAA8C;QAA5B,2MAA2B;QAAE,4DAAmB;QAClE,2EAAgC;QAAA,wDAAmC;;QAAA,4DAAO;QAC1E,0EAAoD;QACvD,4DAAiB;QACjB,qFAA2D;QACvD,6EAAW;QAAA,wDAAkC;;QAAA,4DAAY;QACzD,4EAA4E;QAA3B,+LAA0B;QAA3E,4DAA4E;QAC3E,uFAAgF;QACjF,uFAAiD;QACpD,4DAAiB;QAEd,qHAWM;QAEN,qHAYM;QACV,4DAAqB;QACrB,0FAAmC;QAC/B,2EAAkB;QACd,yHAAwH;QAC5H,4DAAM;QACN,2EAA4C;QACxC,8EAA4C;QAAlB,6IAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,8EAA2D;QAAjB,6IAAS,UAAM,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QACtG,4DAAM;QACV,4DAAqB;;;QAxFK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAMxB,0DAAqB;QAArB,4EAAqB;QAC1B,0DAAmC;QAAnC,qJAAmC;QACnB,0DAA2B;QAA3B,sFAA2B;QAE1C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,mJAAiC;QACjB,0DAAyB;QAAzB,oFAAyB;QAExC,0DAAqB;QAArB,4EAAqB;QACtB,0DAAmC;QAAnC,qJAAmC;QACnB,0DAA2B;QAA3B,sFAA2B;QAE1C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,sJAAoC;QACpB,0DAA4B;QAA5B,uFAA4B;QAE3C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,mJAAiC;QACjB,0DAAyB;QAAzB,oFAAyB;QAExC,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,gJAA8B;QACd,0DAAsB;QAAtB,iFAAsB;QAErC,0DAAqB;QAArB,4EAAqB;QAChB,0DAAwB;QAAxB,mFAAwB;QACV,0DAAgC;QAAhC,kJAAgC;QAGnD,0DAAqB;QAArB,4EAAqB;QAChB,0DAAwB;QAAxB,mFAAwB;QACV,0DAAgC;QAAhC,kJAAgC;QAGnD,0DAAqB;QAArB,4EAAqB;QAChB,0DAA2B;QAA3B,sFAA2B;QACb,0DAAmC;QAAnC,qJAAmC;QAGrD,0DAAqB;QAArB,4EAAqB;QACvB,0DAAkC;QAAlC,oJAAkC;QAC7B,0DAAgC;QAAhC,8EAAgC;QACd,0DAAsB;QAAtB,oEAAsB;QAIlD,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBV,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QACjB,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFpC;AAGG;AACF;AAEP;AACuC;;;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,kYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,0XAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAIX,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAqD;IAAC,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAIrE,sFAAmD;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;IACtF,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAqD;IAAC,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAIrE,sFAAmD;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;IACtF,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,+JAAmC;;;IACvF,+EAAwD;IAAC,uDAAkB;IAAA,4DAAW;;;IAA7B,0DAAkB;IAAlB,6FAAkB;;;IAI3E,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAqD;IAAC,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAIrE,sFAAmD;IAAC,uDAA6B;;IAAA,4DAAkB;;IAA/C,0DAA6B;IAA7B,yJAA6B;;;IACjF,+EAAkD;IAAC,uDAAyB;;IAAA,4DAAW;;;IAApC,0DAAyB;IAAzB,+JAAyB;;;IAI5E,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,2JAAgC;;;IACpF,+EAAoD;IAChD,uFAAoD;IAAlC,4OAAwB;IAAW,4DAAmB;IAC5E,4DAAW;;;IADW,0DAAwB;IAAxB,mFAAwB;;;IAK9C,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,2JAAgC;;;IACpF,+EAAoD;IAChD,uFAAoD;IAAlC,4OAAwB;IAAW,4DAAmB;IAC5E,4DAAW;;;IADW,0DAAwB;IAAxB,mFAAwB;;;IAK9C,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,8JAAmC;;;IACvF,+EAAuD;IACnD,uFAAuD;IAArC,+OAA2B;IAAW,4DAAmB;IAC/E,4DAAW;;;IADW,0DAA2B;IAA3B,sFAA2B;;;IAKjD,sFAAmD;IAAC,uDAAiC;;IAAA,4DAAkB;;IAAnD,0DAAiC;IAAjC,6JAAiC;;;IACrF,+EAAsD;IAAC,uDAA8C;;IAAA,4DAAW;;;IAAzD,0DAA8C;IAA9C,oLAA8C;;;IAIrG,sFAAmD;IAAC,uDAAoC;;IAAA,4DAAkB;;IAAtD,0DAAoC;IAApC,gKAAoC;;;IACxF,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAAoC;;IAAA,4DAAkB;;IAAtD,0DAAoC;IAApC,gKAAoC;;;IACxF,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAK7E,kFAAmC;IAAC,uDAAwC;;IAAA,4DAAkB;;IAA1D,0DAAwC;IAAxC,oKAAwC;;;IAC5E,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;ADrG3G,MAAM,cAAc;IAUvB,YAAoB,YAA2B,EACpC,MAAiB,EACjB,SAA2B,EAC1B,QAAqB,EACrB,iBAAoC;QAJ5B,iBAAY,GAAZ,YAAY,CAAe;QACpC,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAXhD,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAUoB,CAAC;IAErD,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAK,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAK,WAAW,EAAE,CAAC;IACrC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,SAAS,CAAC;aAC5D,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aACvE,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACpB,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBAC9F;qBACI;oBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3D;aACJ;iBACK;gBAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACxC,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;YAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACf,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;QAEhC,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC;QAC9B,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;QACvB,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,UAAU,GAAG,EAAE,CAAC;QAC1B,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;QACvB,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC;QACpB,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;QACzB,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;QACzB,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;QAC5B,SAAS,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAChC,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAc;QACzB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAc,EAAE,KAAc;QAErC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yEAAoB,EAAE;YACnC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAC,IAAI;YACjB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAe;QAElB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBAC3D,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBACjD,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACV;gBACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;oBAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC/B,kBAAkB,EAAE,OAAO;wBAC3B,gBAAgB,EAAE,QAAQ;wBAC1B,QAAQ,EAAE,IAAI;qBACjB,CAAC,CAAC;gBAEP,CAAC,CAAC,CAAC;aACV;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACA;gBACV,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,YAAY;gBACvB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,MAAM;gBACjB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YAEW;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACA;gBACG,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;4EArWQ,cAAc;4GAAd,cAAc;;QCtB3B,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,sIAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,qRAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,uIAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,gKAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,oIAAwF;QACxF,sHAOW;QACf,qEAAe;QAEf,6EAAqC;QACjC,qIAAsG;QACtG,uHAAgF;QACpF,qEAAe;QAEf,6EAAuC;QACnC,qIAAwG;QACxG,uHAAoF;QACxF,qEAAe;QAEf,6EAAqC;QACjC,qIAAsG;QACtG,uHAAgF;QACpF,qEAAe;QAEf,6EAAuC;QACnC,qIAAwG;QACxG,uHAAoF;QACxF,qEAAe;QAEf,6EAAwC;QACpC,qIAAyG;QACzG,uHAAsF;QAC1F,qEAAe;QAEf,6EAAqC;QACjC,qIAAsG;QACtG,uHAAgF;QACpF,qEAAe;QAEf,6EAAkC;QAC9B,qIAAmG;QACnG,uHAAuF;QAC3F,qEAAe;QAEf,6EAAoC;QAChC,qIAAsG;QACtG,uHAEW;QACf,qEAAe;QAEf,6EAAoC;QAChC,qIAAsG;QACtG,uHAEW;QACf,qEAAe;QAEf,6EAAuC;QACnC,qIAAyG;QACzG,uHAEW;QACf,qEAAe;QAEf,6EAAsC;QAClC,qIAAuG;QACvG,uHAAgH;QACpH,qEAAe;QAEf,6EAAyC;QACrC,qIAA0G;QAC1G,uHAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,qIAA0G;QAC1G,uHAAwF;QAC5F,qEAAe;QAGf,6EAA6C;QACzC,oIAA8F;QAC9F,uHAA6F;QACjG,qEAAe;QAEf,mIAAqE;QACrE,qHACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,0KAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,6HAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,uIAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,uIAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA2D;QAA7B,2LAA4B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAgC;;QAAA,4DAAY;QACvD,6EAA2D;QAA/B,6LAA8B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAAyD;QAA7B,2LAA4B;QAAxD,4DAAyD;QAC7D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAgC;;QAAA,4DAAY;QACvD,6EAA2D;QAA/B,6LAA8B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAA4D;QAAhC,8LAA+B;QAA3D,4DAA4D;QAChE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,yDAA8B;;QAAA,4DAAY;QACrD,8EAAyD;QAA7B,4LAA4B;QAAxD,4DAAyD;QAC7D,4DAAiB;QACjB,uFAA0D;QACtD,8EAAW;QAAA,yDAA2B;;QAAA,4DAAY;QAClD,8EAAsD;QAA1B,yLAAyB;QAArD,4DAAsD;QAC1D,4DAAiB;QACjB,yFAA8C;QAA5B,sMAA2B;QAAC,yDAA6B;;QAAA,4DAAmB;QAC9F,yFAA8C;QAA5B,sMAA2B;QAAC,yDAA6B;;QAAA,4DAAmB;QAC9F,yFAAiD;QAA/B,yMAA8B;QAAC,yDAAgC;;QAAA,4DAAmB;QACpG,wEAAK;QACD,uFAAyD;QACrD,8EAAW;QAAA,yDAA+B;;QAAA,4DAAY;QACtD,8EAA+E;QAA9B,6LAA6B;QAA9E,4DAA+E;QAC/E,yFAAgF;QAChF,wFAAiD;QACrD,4DAAiB;QACjB,qEACA;QAAA,uFAAyD;QACrD,8EAAW;QAAA,yDAA+B;;QAAA,4DAAY;QACtD,8EAAiF;QAA/B,8LAA8B;QAAhF,4DAAiF;QACjF,yFAAiF;QACjF,wFAAkD;QACtD,4DAAiB;QACrB,4DAAM;QACN,wEAAK;QACD,uFAAyD;QACrD,8EAAW;QAAA,yDAAkC;;QAAA,4DAAY;QACzD,8EAAqF;QAAjC,gMAAgC;QAApF,4DAAqF;QACrF,yFAAmF;QACnF,wFAAoD;QACxD,4DAAiB;QACjB,qEACA;QAAA,uFAAyD;QACrD,8EAAW;QAAA,yDAAkC;;QAAA,4DAAY;QACzD,8EAAuF;QAAlC,iMAAiC;QAAtF,4DAAuF;QACvF,yFAAoF;QACpF,wFAAqD;QACzD,4DAAiB;QACrB,4DAAM;QACN,uFAA0D;QACtD,8EAAW;QAAA,yDAAkC;;QAAA,4DAAY;QACzD,8EAA+D;QAAjC,gMAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGrB,4DAAc;QAClB,4DAAwB;;;;;;QA3MyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QA0Ff,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACX,0DAA4B;QAA5B,uFAA4B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAgC;QAAhC,qJAAgC;QACf,0DAA8B;QAA9B,yFAA8B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACb,0DAA4B;QAA5B,uFAA4B;QAE5C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAgC;QAAhC,qJAAgC;QACf,0DAA8B;QAA9B,yFAA8B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,sJAAiC;QAChB,0DAA+B;QAA/B,0FAA+B;QAE/C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,oJAA8B;QACb,0DAA4B;QAA5B,uFAA4B;QAE5C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA2B;QAA3B,iJAA2B;QACV,0DAAyB;QAAzB,oFAAyB;QAEvC,0DAA2B;QAA3B,sFAA2B;QAAC,0DAA6B;QAA7B,mJAA6B;QACzD,0DAA2B;QAA3B,sFAA2B;QAAC,0DAA6B;QAA7B,mJAA6B;QACzD,0DAA8B;QAA9B,yFAA8B;QAAC,0DAAgC;QAAhC,sJAAgC;QAE7D,0DAAoB;QAApB,2EAAoB;QACrB,0DAA+B;QAA/B,sJAA+B;QAC1B,0DAAgC;QAAhC,+EAAgC;QACf,0DAAsB;QAAtB,qEAAsB;QAI3C,0DAAoB;QAApB,2EAAoB;QACrB,0DAA+B;QAA/B,sJAA+B;QAC1B,0DAAiC;QAAjC,+EAAiC;QAChB,0DAAuB;QAAvB,qEAAuB;QAK5C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAkC;QAAlC,yJAAkC;QAC7B,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAkC;QAAlC,yJAAkC;QAC7B,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAInD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAkC;QAAlC,yJAAkC;QACf,0DAAgC;QAAhC,2FAAgC;;AD0LnE,MAAM,SAAS;IAqBlB;IAEA,CAAC;CACJ;AAEM,MAAM,WAAW;IAqBpB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AE5asD;;;;AAKhD,MAAM,YAAY;IAIrB,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,SAAS,CAAC;IAEqC,CAAC;IAEpF,IAAI,CAAC,IAAe;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,WAAW,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACnH,CAAC;IAED,MAAM,CAAC,IAAe;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,sBAAsB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAChH,CAAC;IAED,OAAO,CAAC,MAAmB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAElF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,cAAc,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAC5H,CAAC;;wEAxBQ,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFT,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAA8E;;;IAAA,4DAAK;;;IAAnF,0DAA8E;IAA9E,wQAA8E;;;IACvH,yEAA0C;IAAA,uDAAgF;;;IAAA,4DAAK;;;IAArF,0DAAgF;IAAhF,2QAAgF;;;;IA+B1H,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,8VAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,8VAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAOrD,6EAA+E;IAAnB,wTAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;ADhDhH,MAAM,kBAAkB;IAI3B,YAAmB,SAA2C,EAC1B,IAAS,EACjC,UAAsB,EACtB,SAA4B,EAC5B,iBAAqC,EACrC,QAAqB;QALd,cAAS,GAAT,SAAS,CAAkC;QAC1B,SAAI,GAAJ,IAAI,CAAK;QACjC,eAAU,GAAV,UAAU,CAAY;QACtB,cAAS,GAAT,SAAS,CAAmB;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,aAAQ,GAAR,QAAQ,CAAa;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAEvD,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3D;oBACG,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EACjE;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IAGP,CAAC;;oFA1EQ,kBAAkB,uMAKf,qEAAe;gHALlB,kBAAkB;QCd/B,yEAAkH;QAC9G,4GAA4H;QAC5H,4GAA+H;QAC/H,4EAAgH;QAAxE,0IAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,oFAA0D;QACtD,4EAAW;QAAA,uDAA+B;;QAAA,4DAAY;QACtD,4EAAwD;QAA1B,4LAAyB;QAAvD,4DAAwD;QAC5D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,4EAAqD;QAAzB,2LAAwB;QAApD,4DAAqD;QACzD,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAA+B;;QAAA,4DAAY;QACtD,4EAAsD;QAA1B,4LAAyB;QAArD,4DAAsD;QAC1D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,4EAAwD;QAA5B,8LAA2B;QAAvD,4DAAwD;QAC5D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,4EAAwD;QAA5B,8LAA2B;QAAvD,4DAAwD;QAC5D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,4EAAwD;QAA5B,8LAA2B;QAAvD,4DAAwD;QAC5D,4DAAiB;QAEjB,kHAWM;QAEN,kHAYM;QACV,4DAAqB;QACrB,yFAAmC;QAC/B,0EAAkB;QACd,sHAAwH;QAC5H,4DAAM;QACN,2EAA4C;QACxC,8EAA4C;QAAlB,2IAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,8EAA2D;QAAjB,2IAAS,UAAM,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QACtG,4DAAM;QACV,4DAAqB;;QAnEK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAMxB,0DAAqB;QAArB,4EAAqB;QACtB,0DAA+B;QAA/B,iJAA+B;QACZ,0DAAyB;QAAzB,oFAAyB;QAE3C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,gJAA8B;QACb,0DAAwB;QAAxB,mFAAwB;QAExC,0DAAqB;QAArB,4EAAqB;QACtB,0DAA+B;QAA/B,iJAA+B;QACd,0DAAyB;QAAzB,oFAAyB;QAEzC,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,mJAAiC;QAChB,0DAA2B;QAA3B,sFAA2B;QAE3C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,mJAAiC;QAChB,0DAA2B;QAA3B,sFAA2B;QAE3C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,mJAAiC;QAChB,0DAA2B;QAA3B,sFAA2B;QAGrD,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBV,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QACjB,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DpC;AAGD;AACE;AAEP;AACuC;;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,gYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,wXAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAIX,sFAAmD;IAAC,uDAA4B;;IAAA,4DAAkB;;IAA9C,0DAA4B;IAA5B,wJAA4B;;;IAChF,+EAAmD;IAAC,uDAAa;IAAA,4DAAW;;;IAAxB,0DAAa;IAAb,wFAAa;;;IAIjE,sFAAmD;IAAC,uDAA8B;;IAAA,4DAAkB;;IAAhD,0DAA8B;IAA9B,0JAA8B;;;IAClF,+EAAqD;IAAC,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAIrE,sFAAmD;IAAC,uDAA6B;;IAAA,4DAAkB;;IAA/C,0DAA6B;IAA7B,yJAA6B;;;IACjF,+EAAoD;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAInE,sFAAmD;IAAC,uDAA8B;;IAAA,4DAAkB;;IAAhD,0DAA8B;IAA9B,0JAA8B;;;IAClF,+EAAqD;IAAC,uDAA4B;;IAAA,4DAAW;;;IAAvC,0DAA4B;IAA5B,kKAA4B;;;IAIlF,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;IACtF,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;IACtF,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAK7E,kFAAmC;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1E,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;AD3E3G,MAAM,YAAY;IAUrB,YAAoB,UAAuB,EAChC,MAAiB,EACjB,SAA2B,EAC1B,QAAqB,EACrB,iBAAoC;QAJ5B,eAAU,GAAV,UAAU,CAAa;QAChC,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAXhD,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAUoB,CAAC;IAErD,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAK,SAAS,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAK,SAAS,EAAE,CAAC;IACnC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC;aAC1D,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aACrE,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACpB,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBAC9F;qBACI;oBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3D;aACJ;iBACK;gBAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACxC,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;YAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACf,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;QAE9B,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;QAC5B,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC;QACtB,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC;QACtB,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;QACvB,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAY;QACvB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAY,EAAE,KAAc;QAEnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qEAAkB,EAAE;YACjC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAC,IAAI;YACjB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAa;QAEhB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBACzD,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBACjD,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACV;gBACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;oBAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC/B,kBAAkB,EAAE,OAAO;wBAC3B,gBAAgB,EAAE,QAAQ;wBAC1B,QAAQ,EAAE,IAAI;qBACjB,CAAC,CAAC;gBAEP,CAAC,CAAC,CAAC;aACV;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACA;gBACV,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,OAAO;gBAClB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YAEW;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACA;gBACG,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;wEArUQ,YAAY;0GAAZ,YAAY;;QCtBzB,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,oIAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,mRAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,qIAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,8JAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,kIAAwF;QACxF,oHAOW;QACf,qEAAe;QAEf,6EAAmC;QAC/B,mIAAkG;QAClG,qHAA4E;QAChF,qEAAe;QAEf,6EAAqC;QACjC,mIAAoG;QACpG,qHAAgF;QACpF,qEAAe;QAEf,6EAAoC;QAChC,mIAAmG;QACnG,qHAA8E;QAClF,qEAAe;QAEf,6EAAqC;QACjC,mIAAoG;QACpG,qHAA6F;QACjG,qEAAe;QAEf,6EAAuC;QACnC,mIAAsG;QACtG,qHAAoF;QACxF,qEAAe;QAEf,6EAAuC;QACnC,mIAAsG;QACtG,qHAAoF;QACxF,qEAAe;QAEf,6EAAuC;QACnC,mIAAsG;QACtG,qHAAoF;QACxF,qEAAe;QAEf,6EAAyC;QACrC,mIAAwG;QACxG,qHAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,mIAAwG;QACxG,qHAAwF;QAC5F,qEAAe;QAGf,6EAA6C;QACzC,kIAA4F;QAC5F,qHAA6F;QACjG,qEAAe;QAEf,iIAAqE;QACrE,mHACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,wKAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,2HAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,qIAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,qIAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QACtD,6EAAW;QAAA,wDAA0B;;QAAA,4DAAY;QACjD,6EAAyD;QAA3B,uLAA0B;QAAxD,4DAAyD;QAC7D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA4B;;QAAA,4DAAY;QACnD,6EAA2D;QAA7B,yLAA4B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA2B;;QAAA,4DAAY;QAClD,6EAAwD;QAA5B,wLAA2B;QAAvD,4DAAwD;QAC5D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA4B;;QAAA,4DAAY;QACnD,6EAAyD;QAA7B,yLAA4B;QAAxD,4DAAyD;QAC7D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA2D;QAA/B,2LAA8B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA2D;QAA/B,2LAA8B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA2D;QAA/B,2LAA8B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,uEAAK;QACD,sFAAyD;QACrD,6EAAW;QAAA,wDAAgC;;QAAA,4DAAY;QACvD,8EAAqF;QAAjC,8LAAgC;QAApF,4DAAqF;QACrF,yFAAmF;QACnF,wFAAoD;QACxD,4DAAiB;QACjB,qEACA;QAAA,uFAAyD;QACrD,8EAAW;QAAA,yDAAgC;;QAAA,4DAAY;QACvD,8EAAuF;QAAlC,+LAAiC;QAAtF,4DAAuF;QACvF,yFAAoF;QACpF,wFAAqD;QACzD,4DAAiB;QACrB,4DAAM;QACN,uFAA0D;QACtD,8EAAW;QAAA,yDAAgC;;QAAA,4DAAY;QACvD,8EAA+D;QAAjC,8LAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGrB,4DAAc;QAClB,4DAAwB;;;;QA/JyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QAgEf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QACtB,0DAA0B;QAA1B,+IAA0B;QACP,0DAA0B;QAA1B,qFAA0B;QAE5C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA4B;QAA5B,iJAA4B;QACT,0DAA4B;QAA5B,uFAA4B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA2B;QAA3B,gJAA2B;QACV,0DAA2B;QAA3B,sFAA2B;QAE3C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA4B;QAA5B,iJAA4B;QACX,0DAA4B;QAA5B,uFAA4B;QAE5C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACb,0DAA8B;QAA9B,yFAA8B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACb,0DAA8B;QAA9B,yFAA8B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACb,0DAA8B;QAA9B,yFAA8B;QAG1C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAgC;QAAhC,sJAAgC;QAC3B,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAgC;QAAhC,sJAAgC;QAC3B,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAInD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAgC;QAAhC,sJAAgC;QACb,0DAAgC;QAAhC,2FAAgC;;ADsMnE,MAAM,OAAO;IAiBhB;IAEA,CAAC;CACJ;AAEM,MAAM,SAAS;IAgBlB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AEnYsD;;;;AAKhD,MAAM,UAAU;IAInB,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,OAAO,CAAC;IAEuC,CAAC;IAEpF,IAAI,CAAC,IAAa;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACjH,CAAC;IAED,MAAM,CAAC,IAAa;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9G,CAAC;IAED,OAAO,CAAC,MAAiB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAEhF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,YAAY,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAC1H,CAAC;;oEAxBQ,UAAU;2GAAV,UAAU,WAAV,UAAU,mBAFP,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAAiF;;;IAAA,4DAAK;;;IAAtF,0DAAiF;IAAjF,2QAAiF;;;IAC1H,yEAA0C;IAAA,uDAAmF;;;IAAA,4DAAK;;;IAAxF,0DAAmF;IAAnF,8QAAmF;;;;IAmB7H,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,+VAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,+VAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAOrD,6EAA+E;IAAnB,yTAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;ADpChH,MAAM,mBAAmB;IAI5B,YAAmB,SAA4C,EAC3B,IAAS,EACjC,WAAwB,EACxB,SAA4B,EAC5B,iBAAqC,EACrC,QAAqB;QALd,cAAS,GAAT,SAAS,CAAmC;QAC3B,SAAI,GAAJ,IAAI,CAAK;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAmB;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,aAAQ,GAAR,QAAQ,CAAa;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAExD,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3D;oBACG,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EACjE;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IAGP,CAAC;;sFA1EQ,mBAAmB,uMAKhB,qEAAe;iHALlB,mBAAmB;QCdhC,yEAAkH;QAC9G,6GAA+H;QAC/H,6GAAkI;QAClI,4EAAgH;QAAxE,2IAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,oFAA0D;QAC1D,4EAAW;QAAA,uDAAiC;;QAAA,4DAAY;QACzD,4EAAuD;QAA3B,8LAA0B;QAAtD,4DAAuD;QAC1D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAA6B;;QAAA,4DAAY;QACrD,4EAAmD;QAAvB,0LAAsB;QAAlD,4DAAmD;QACtD,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACtD,4EAAoD;QAAxB,2LAAuB;QAAnD,4DAAoD;QACvD,4DAAiB;QAEb,mHAWM;QAEN,mHAYM;QACV,4DAAqB;QACrB,yFAAmC;QAC/B,0EAAkB;QACd,uHAAwH;QAC5H,4DAAM;QACN,0EAA4C;QACxC,8EAA4C;QAAlB,4IAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,8EAA2D;QAAjB,4IAAS,UAAM,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QACtG,4DAAM;QACV,4DAAqB;;QAvDK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAMxB,0DAAqB;QAArB,4EAAqB;QAC1B,0DAAiC;QAAjC,mJAAiC;QACjB,0DAA0B;QAA1B,qFAA0B;QAEzC,0DAAqB;QAArB,4EAAqB;QACtB,0DAA6B;QAA7B,+IAA6B;QACb,0DAAsB;QAAtB,iFAAsB;QAErC,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,gJAA8B;QACd,0DAAuB;QAAvB,kFAAuB;QAG5C,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBV,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QACjB,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDpC;AAGC;AACA;AAEP;AACuC;;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,iYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,yXAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAIX,sFAAmD;IAAC,uDAA8B;;IAAA,4DAAkB;;IAAhD,0DAA8B;IAA9B,0JAA8B;;;IAClF,+EAAoD;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAInE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAsD;IAAC,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAIvE,sFAAmD;IAAC,uDAA4B;;IAAA,4DAAkB;;IAA9C,0DAA4B;IAA5B,wJAA4B;;;IAChF,+EAAkD;IAAC,uDAAY;IAAA,4DAAW;;;IAAvB,0DAAY;IAAZ,uFAAY;;;IAI/D,sFAAmD;IAAC,uDAA6B;;IAAA,4DAAkB;;IAA/C,0DAA6B;IAA7B,yJAA6B;;;IACjF,+EAAmD;IAAC,uDAAa;IAAA,4DAAW;;;IAAxB,0DAAa;IAAb,wFAAa;;;IAIjE,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,+JAAmC;;;IACvF,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,+JAAmC;;;IACvF,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAK7E,kFAAmC;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3E,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;AD5D3G,MAAM,aAAa;IAUtB,YAAoB,WAAyB,EAClC,MAAiB,EACjB,SAA2B,EAC1B,QAAqB,EACrB,iBAAoC;QAJ5B,gBAAW,GAAX,WAAW,CAAc;QAClC,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAXhD,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAUoB,CAAC;IAErD,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAK,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAK,UAAU,EAAE,CAAC;IACpC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC;aAC3D,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aACtE,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACpB,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBAC9F;qBACI;oBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3D;aACJ;iBACK;gBAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACxC,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;YAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACf,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE/B,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC7B,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC;QACpB,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;QACrB,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAa;QACxB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAa,EAAE,KAAc;QAEpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uEAAmB,EAAE;YAClC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAC,IAAI;YACjB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAc;QAEjB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBAC1D,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBACjD,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACV;gBACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;oBAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC/B,kBAAkB,EAAE,OAAO;wBAC3B,gBAAgB,EAAE,QAAQ;wBAC1B,QAAQ,EAAE,IAAI;qBACjB,CAAC,CAAC;gBAEP,CAAC,CAAC,CAAC;aACV;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACA;gBACV,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,MAAM;gBACjB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,OAAO;gBAClB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YAEW;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACA;gBACG,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;0EA7SQ,aAAa;2GAAb,aAAa;;QCtB1B,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,qIAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,oRAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,sIAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,+JAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,mIAAwF;QACxF,qHAOW;QACf,qEAAe;QAEf,6EAAoC;QAChC,oIAAoG;QACpG,sHAA8E;QAClF,qEAAe;QAEf,6EAAsC;QAClC,oIAAsG;QACtG,sHAAkF;QACtF,qEAAe;QAEf,6EAAkC;QAC9B,oIAAkG;QAClG,sHAA0E;QAC9E,qEAAe;QAEf,6EAAmC;QAC/B,oIAAmG;QACnG,sHAA4E;QAChF,qEAAe;QAEf,6EAAyC;QACrC,oIAAyG;QACzG,sHAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,oIAAyG;QACzG,sHAAwF;QAC5F,qEAAe;QAGf,6EAA6C;QACzC,mIAA6F;QAC7F,sHAA6F;QACjG,qEAAe;QAEf,kIAAqE;QACrE,oHACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,yKAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,4HAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,sIAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,sIAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QACtD,6EAAW;QAAA,wDAA4B;;QAAA,4DAAY;QACnD,6EAA0D;QAA5B,yLAA2B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA0D;QAA9B,2LAA6B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA0B;;QAAA,4DAAY;QACjD,6EAAsD;QAA1B,uLAAyB;QAArD,4DAAsD;QAC1D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA2B;;QAAA,4DAAY;QAClD,6EAAuD;QAA3B,wLAA0B;QAAtD,4DAAuD;QAC3D,4DAAiB;QACjB,uEAAK;QACD,sFAAyD;QACrD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAAqF;QAAjC,8LAAgC;QAApF,4DAAqF;QACrF,wFAAmF;QACnF,uFAAoD;QACxD,4DAAiB;QACjB,oEACA;QAAA,sFAAyD;QACrD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAAuF;QAAlC,+LAAiC;QAAtF,4DAAuF;QACvF,wFAAoF;QACpF,uFAAqD;QACzD,4DAAiB;QACrB,4DAAM;QACN,sFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAA+D;QAAjC,8LAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGrB,4DAAc;QAClB,4DAAwB;;;;QApIyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QAiDf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QACtB,0DAA4B;QAA5B,iJAA4B;QACT,0DAA2B;QAA3B,sFAA2B;QAE7C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACb,0DAA6B;QAA7B,wFAA6B;QAE7C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA0B;QAA1B,+IAA0B;QACT,0DAAyB;QAAzB,oFAAyB;QAEzC,0DAAqB;QAArB,4EAAqB;QACtB,0DAA2B;QAA3B,gJAA2B;QACV,0DAA0B;QAA1B,qFAA0B;QAGtC,0DAAoB;QAApB,2EAAoB;QACrB,0DAAiC;QAAjC,sJAAiC;QAC5B,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAiC;QAAjC,sJAAiC;QAC5B,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAInD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,sJAAiC;QACd,0DAAgC;QAAhC,2FAAgC;;ADyMnE,MAAM,QAAQ;IAcjB;IAEA,CAAC;CACJ;AAEM,MAAM,UAAU;IAanB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AErWsD;;;;AAKhD,MAAM,WAAW;IAIpB,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,QAAQ,CAAC;IAEsC,CAAC;IAEpF,IAAI,CAAC,IAAc;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAClH,CAAC;IAED,MAAM,CAAC,IAAc;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAC/G,CAAC;IAED,OAAO,CAAC,MAAkB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAEjF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAC3H,CAAC;;sEAxBQ,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;;;;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAA4F;;;IAAA,4DAAK;;;IAAjG,0DAA4F;IAA5F,sRAA4F;;;IACrI,yEAA0C;IAAA,uDAA8F;;;IAAA,4DAAK;;;IAAnG,0DAA8F;IAA9F,yRAA8F;;;IAUhI,iFAAiF;IAC7E,uDACJ;;IAAA,4DAAa;;;IAFgD,+EAAmB;IAC5E,0DACJ;IADI,sLACJ;;;;IA4BR,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,oWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,qWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAOrD,6EAA+E;IAAnB,gUAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;;ADzDhH,MAAM,wBAAwB;IAIjC,YAAmB,SAAiD,EAChC,IAAS,EACjC,gBAAkC,EAClC,SAA4B,EAC5B,iBAAqC,EACrC,QAAqB;QALd,cAAS,GAAT,SAAS,CAAwC;QAChC,SAAI,GAAJ,IAAI,CAAK;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,cAAS,GAAT,SAAS,CAAmB;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,aAAQ,GAAR,QAAQ,CAAa;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAE7D,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3D;oBACG,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EACjE;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IAGP,CAAC;;gGA1EQ,wBAAwB,uMAKrB,qEAAe;sHALlB,wBAAwB;QCdrC,yEAAkH;QAC9G,kHAA0I;QAC1I,kHAA6I;QAC7I,4EAAgH;QAAxE,gJAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,oFAA0D;QACtD,4EAAW;QAAA,uDAAuC;;QAAA,4DAAY;QAE9D,iFAAiD;QAA5B,yMAA2B;QAC5C,oIAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAuC;;QAAA,4DAAY;QAC9D,4EAAwD;QAA5B,oMAA2B;QAAvD,4DAAwD;QAC5D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAuC;;QAAA,4DAAY;QAC9D,4EAAwD;QAA5B,oMAA2B;QAAvD,4DAAwD;QAC5D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAsC;;QAAA,4DAAY;QAC7D,4EAAyD;QAA3B,mMAA0B;QAAxD,4DAAyD;QAC7D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAuC;;QAAA,4DAAY;QAC9D,4EAAwD;QAA5B,oMAA2B;QAAvD,4DAAwD;QAC5D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAuC;;QAAA,4DAAY;QAC9D,4EAAwD;QAA5B,oMAA2B;QAAvD,4DAAwD;QAC5D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAuC;;QAAA,4DAAY;QAC9D,4EAAwD;QAA5B,oMAA2B;QAAvD,4DAAwD;QAC5D,4DAAiB;QAEjB,wHAWM;QAEN,wHAYM;QACV,4DAAqB;QACrB,yFAAmC;QAC/B,2EAAkB;QACd,6HAAwH;QAC5H,4DAAM;QACN,2EAA4C;QACxC,8EAA4C;QAAlB,iJAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,8EAA2D;QAAjB,iJAAS,UAAM,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QACtG,4DAAM;QACV,4DAAqB;;QA5EK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAMxB,0DAAqB;QAArB,4EAAqB;QACtB,0DAAuC;QAAvC,yJAAuC;QAE7B,0DAA2B;QAA3B,sFAA2B;QACV,0DAAyB;QAAzB,2IAAyB;QAKnD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAuC;QAAvC,yJAAuC;QACtB,0DAA2B;QAA3B,sFAA2B;QAE3C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAuC;QAAvC,yJAAuC;QACtB,0DAA2B;QAA3B,sFAA2B;QAE3C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAsC;QAAtC,wJAAsC;QACnB,0DAA0B;QAA1B,qFAA0B;QAE5C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAuC;QAAvC,yJAAuC;QACtB,0DAA2B;QAA3B,sFAA2B;QAE3C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAuC;QAAvC,yJAAuC;QACtB,0DAA2B;QAA3B,sFAA2B;QAE3C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAuC;QAAvC,yJAAuC;QACtB,0DAA2B;QAA3B,sFAA2B;QAGrD,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBV,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QACjB,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEpC;AAGW;AACV;AAEP;AACuC;;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,sYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,8XAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAIX,sFAAmD;IAAC,uDAAoC;;IAAA,4DAAkB;;IAAtD,0DAAoC;IAApC,gKAAoC;;;IACxF,+EAAqD;IAAC,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAIrE,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAuD;IAAC,uDAAwD;;IAAA,4DAAW;;;IAAnE,0DAAwD;IAAxD,0LAAwD;;;IAIhH,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAqC;;IAAA,4DAAkB;;IAAvD,0DAAqC;IAArC,iKAAqC;;;IACzF,+EAAsD;IAAC,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAIvE,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAwC;;IAAA,4DAAkB;;IAA1D,0DAAwC;IAAxC,oKAAwC;;;IAC5F,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAAwC;;IAAA,4DAAkB;;IAA1D,0DAAwC;IAAxC,oKAAwC;;;IAC5F,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAK7E,kFAAmC;IAAC,uDAA4C;;IAAA,4DAAkB;;IAA9D,0DAA4C;IAA5C,wKAA4C;;;IAChF,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;ADhF3G,MAAM,kBAAkB;IAU3B,YAAoB,gBAAmC,EAC5C,MAAiB,EACjB,SAA2B,EAC1B,QAAqB,EACrB,iBAAoC;QAJ5B,qBAAgB,GAAhB,gBAAgB,CAAmB;QAC5C,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAXhD,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAUoB,CAAC;IAErD,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAK,eAAe,EAAE,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAK,eAAe,EAAE,CAAC;IACzC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC;aAChE,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aAC3E,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACpB,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBAC9F;qBACI;oBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3D;aACJ;iBACK;gBAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACxC,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;YAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACf,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;QAEpC,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC;QAC9B,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;QACxB,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;QACvB,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAkB;QAC7B,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAkB,EAAE,KAAc;QAEzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iFAAwB,EAAE;YACvC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAC,IAAI;YACjB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAmB;QAEtB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBAC/D,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBACjD,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACV;gBACL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;oBAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC/B,kBAAkB,EAAE,OAAO;wBAC3B,gBAAgB,EAAE,QAAQ;wBAC1B,QAAQ,EAAE,IAAI;qBACjB,CAAC,CAAC;gBAEP,CAAC,CAAC,CAAC;aACV;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACA;gBACV,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YAEW;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACA;gBACG,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;oFA7UQ,kBAAkB;gHAAlB,kBAAkB;;QCtB/B,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,0IAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,yRAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,2IAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,oKAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,wIAAwF;QACxF,0HAOW;QACf,qEAAe;QAEf,6EAAqC;QACjC,yIAA0G;QAC1G,2HAAgF;QACpF,qEAAe;QAEf,6EAAuC;QACnC,yIAA4G;QAC5G,2HAA2H;QAC/H,qEAAe;QAEf,6EAAuC;QACnC,yIAA4G;QAC5G,2HAAoF;QACxF,qEAAe;QAEf,6EAAuC;QACnC,yIAA4G;QAC5G,2HAAoF;QACxF,qEAAe;QAEf,6EAAsC;QAClC,yIAA2G;QAC3G,2HAAkF;QACtF,qEAAe;QAEf,6EAAuC;QACnC,yIAA4G;QAC5G,2HAAoF;QACxF,qEAAe;QAEf,6EAAuC;QACnC,yIAA4G;QAC5G,2HAAoF;QACxF,qEAAe;QAEf,6EAAuC;QACnC,yIAA4G;QAC5G,2HAAoF;QACxF,qEAAe;QAEf,6EAAyC;QACrC,yIAA8G;QAC9G,2HAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,yIAA8G;QAC9G,2HAAwF;QAC5F,qEAAe;QAGf,6EAA6C;QACzC,wIAAkG;QAClG,2HAA6F;QACjG,qEAAe;QAEf,uIAAqE;QACrE,yHACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,8KAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,iIAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,2IAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,2IAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QACtD,6EAAW;QAAA,wDAAkC;;QAAA,4DAAY;QACzD,6EAA2D;QAA7B,+LAA4B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,6EAA6D;QAA/B,iMAA8B;QAA5D,4DAA6D;QACjE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,6EAA2D;QAA/B,iMAA8B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,6EAA2D;QAA/B,iMAA8B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAmC;;QAAA,4DAAY;QAC1D,6EAA4D;QAA9B,gMAA6B;QAA3D,4DAA4D;QAChE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,6EAA2D;QAA/B,iMAA8B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,6EAA2D;QAA/B,iMAA8B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,sFAA0D;QACtD,8EAAW;QAAA,yDAAoC;;QAAA,4DAAY;QAC3D,8EAA2D;QAA/B,kMAA8B;QAA1D,4DAA2D;QAC/D,4DAAiB;QACjB,wEAAK;QACD,uFAAyD;QACrD,8EAAW;QAAA,yDAAsC;;QAAA,4DAAY;QAC7D,8EAAqF;QAAjC,oMAAgC;QAApF,4DAAqF;QACrF,yFAAmF;QACnF,wFAAoD;QACxD,4DAAiB;QACjB,qEACA;QAAA,uFAAyD;QACrD,8EAAW;QAAA,yDAAsC;;QAAA,4DAAY;QAC7D,8EAAuF;QAAlC,qMAAiC;QAAtF,4DAAuF;QACvF,yFAAoF;QACpF,wFAAqD;QACzD,4DAAiB;QACrB,4DAAM;QACN,uFAA0D;QACtD,8EAAW;QAAA,yDAAsC;;QAAA,4DAAY;QAC7D,8EAA+D;QAAjC,oMAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGrB,4DAAc;QAClB,4DAAwB;;;;QAxKyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QAqEf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QACtB,0DAAkC;QAAlC,uJAAkC;QACf,0DAA4B;QAA5B,uFAA4B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,yJAAoC;QACjB,0DAA8B;QAA9B,yFAA8B;QAEhD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,yJAAoC;QACnB,0DAA8B;QAA9B,yFAA8B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,yJAAoC;QACnB,0DAA8B;QAA9B,yFAA8B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAmC;QAAnC,wJAAmC;QAChB,0DAA6B;QAA7B,wFAA6B;QAE/C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,yJAAoC;QACnB,0DAA8B;QAA9B,yFAA8B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,yJAAoC;QACnB,0DAA8B;QAA9B,yFAA8B;QAE9C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,0JAAoC;QACnB,0DAA8B;QAA9B,yFAA8B;QAG1C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAsC;QAAtC,4JAAsC;QACjC,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAsC;QAAtC,4JAAsC;QACjC,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAInD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAsC;QAAtC,4JAAsC;QACnB,0DAAgC;QAAhC,2FAAgC;;ADqMnE,MAAM,aAAa;IAkBtB;IAEA,CAAC;CACJ;AAEM,MAAM,eAAe;IAiBxB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AE7YsD;;;;AAKhD,MAAM,gBAAgB;IAIzB,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,aAAa,CAAC;IAEiC,CAAC;IAEpF,IAAI,CAAC,IAAmB;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,eAAe,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACvH,CAAC;IAED,MAAM,CAAC,IAAmB;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,0BAA0B,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACpH,CAAC;IAED,OAAO,CAAC,MAAuB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAEtF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,kBAAkB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAChI,CAAC;;gFAxBQ,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAA6F;;;IAAA,4DAAK;;;IAAlG,0DAA6F;IAA7F,uRAA6F;;;IACtI,yEAA0C;IAAA,uDAA+F;;;IAAA,4DAAK;;;IAApG,0DAA+F;IAA/F,0RAA+F;;;;IAezI,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,mWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,mWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAOrD,6EAA+E;IAAnB,6TAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;ADjChH,MAAM,uBAAuB;IAIhC,YAAmB,SAAgD,EAC/B,IAAS,EACjC,eAAgC,EAChC,SAA4B,EAC5B,QAAqB;QAJd,cAAS,GAAT,SAAS,CAAuC;QAC/B,SAAI,GAAJ,IAAI,CAAK;QACjC,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAmB;QAC5B,aAAQ,GAAR,QAAQ,CAAa;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAE5D,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3D;oBACG,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EACjE;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,CAAC,CAAC;IAGP,CAAC;;8FA9DQ,uBAAuB,uMAKpB,qEAAe;qHALlB,uBAAuB;QCbpC,yEAAkH;QAC9G,iHAA2I;QAC3I,iHAA8I;QAC9I,4EAAgH;QAAxE,+IAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,oFAA0D;QAC1D,4EAAW;QAAA,uDAAmC;;QAAA,4DAAY;QAC3D,4EAAuD;QAAzB,gMAAwB;QAAtD,4DAAuD;QAC1D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAmC;;QAAA,4DAAY;QAC3D,4EAAuD;QAAzB,gMAAwB;QAAtD,4DAAuD;QAC1D,4DAAiB;QAEb,uHAWM;QAEN,uHAYM;QACV,4DAAqB;QACrB,yFAAmC;QAC/B,0EAAkB;QACd,2HAAwH;QAC5H,4DAAM;QACN,0EAA4C;QACxC,8EAA4C;QAAlB,gJAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,8EAA2D;QAAjB,gJAAS,UAAM,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QACtG,4DAAM;QACV,4DAAqB;;QAnDK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAMxB,0DAAqB;QAArB,4EAAqB;QAC1B,0DAAmC;QAAnC,qJAAmC;QACjB,0DAAwB;QAAxB,mFAAwB;QAEzC,0DAAqB;QAArB,4EAAqB;QACtB,0DAAmC;QAAnC,qJAAmC;QACjB,0DAAwB;QAAxB,mFAAwB;QAG/C,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBV,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QACjB,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CpC;AAGS;AACR;AAEP;AACuC;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,qYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,6XAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAIX,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAwD;IAAC,uDAAkB;IAAA,4DAAW;;;IAA7B,0DAAkB;IAAlB,6FAAkB;;;IAI3E,sFAAmD;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;IACtF,+EAAoD;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAInE,sFAAmD;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;IACtF,+EAAoD;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAInE,sFAAmD;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3F,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3F,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAK7E,kFAAmC;IAAC,uDAA2C;;IAAA,4DAAkB;;IAA7D,0DAA2C;IAA3C,uKAA2C;;;IAC/E,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;ADxD3G,MAAM,iBAAiB;IAU1B,YAAoB,eAAgC,EACzC,MAAiB,EACjB,SAA2B,EAC1B,QAAqB;QAHb,oBAAe,GAAf,eAAe,CAAiB;QACzC,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QAVjC,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IASK,CAAC;IAEtC,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;IACvC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC,SAAS,CAAC;aAC/D,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aAC1E,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,EAAE;gBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;aAC9F;iBACI;gBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;gBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC3D;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;QAEnC,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;QACzB,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAiB;QAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAiB,EAAE,KAAc;QAExC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+EAAuB,EAAE;YACtC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAkB;QAErB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBAC/D,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACN;gBAEL,CAAC,CAAC,CAAC;aACN;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,YAAY;gBACvB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;kFAjQQ,iBAAiB;+GAAjB,iBAAiB;;QCrB9B,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,yIAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,wRAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,0IAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,mKAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,uIAAwF;QACxF,yHAOW;QACf,qEAAe;QAEf,6EAAwC;QACpC,wIAA4G;QAC5G,0HAAsF;QAC1F,qEAAe;QAEf,6EAAoC;QAChC,wIAAwG;QACxG,0HAA8E;QAClF,qEAAe;QAEf,6EAAoC;QAChC,wIAAwG;QACxG,0HAA8E;QAClF,qEAAe;QAEf,6EAAyC;QACrC,wIAA6G;QAC7G,0HAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,wIAA6G;QAC7G,0HAAwF;QAC5F,qEAAe;QAGf,6EAA6C;QACzC,uIAAiG;QACjG,0HAA6F;QACjG,qEAAe;QAEf,sIAAqE;QACrE,wHACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,6KAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,gIAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,0IAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,0IAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QACtD,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,6EAA8D;QAAhC,iMAA+B;QAA7D,4DAA8D;QAClE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAgC;;QAAA,4DAAY;QACvD,6EAA0D;QAA5B,6LAA2B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAgC;;QAAA,4DAAY;QACvD,6EAA0D;QAA5B,6LAA2B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,uEAAK;QACD,sFAAyD;QACrD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAAqF;QAAjC,kMAAgC;QAApF,4DAAqF;QACrF,wFAAmF;QACnF,uFAAoD;QACxD,4DAAiB;QACjB,oEACA;QAAA,sFAAyD;QACrD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAAuF;QAAlC,mMAAiC;QAAtF,4DAAuF;QACvF,wFAAoF;QACpF,uFAAqD;QACzD,4DAAiB;QACrB,4DAAM;QACN,sFAA0D;QACtD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAA+D;QAAjC,kMAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGrB,4DAAc;QAClB,4DAAwB;;;;QA3HyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QA4Cf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QACtB,0DAAoC;QAApC,yJAAoC;QACjB,0DAA+B;QAA/B,0FAA+B;QAEjD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAgC;QAAhC,qJAAgC;QACb,0DAA2B;QAA3B,sFAA2B;QAE7C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAgC;QAAhC,qJAAgC;QACb,0DAA2B;QAA3B,sFAA2B;QAGzC,0DAAoB;QAApB,2EAAoB;QACrB,0DAAqC;QAArC,0JAAqC;QAChC,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAqC;QAArC,0JAAqC;QAChC,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAInD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAqC;QAArC,0JAAqC;QAClB,0DAAgC;QAAhC,2FAAgC;;ADqKnE,MAAM,YAAY;IAarB;IAEA,CAAC;CACJ;AAEM,MAAM,cAAc;IAYvB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AEtTsD;;;;AAKhD,MAAM,eAAe;IAIxB,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,YAAY,CAAC;IAEkC,CAAC;IAEpF,IAAI,CAAC,IAAkB;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,cAAc,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACtH,CAAC;IAED,MAAM,CAAC,IAAkB;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,yBAAyB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACnH,CAAC;IAED,OAAO,CAAC,MAAsB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAErF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,iBAAiB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAC/H,CAAC;;8EAxBQ,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;;;;;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAAiF;;;IAAA,4DAAK;;;IAAtF,0DAAiF;IAAjF,2QAAiF;;;IAC1H,yEAA0C;IAAA,uDAAmF;;;IAAA,4DAAK;;;IAAxF,0DAAmF;IAAnF,8QAAmF;;;;IAmBjH,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,+VAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,gWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAerD,sFAAoJ;IAAvF,saAAqC;IAC9F,uDACJ;IAAA,4DAAkB;;;IAFiF,iFAAoB;IACnH,0DACJ;IADI,4FACJ;;;;IAWZ,6EAA+E;IAAnB,2TAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;;;IAI/G,6EAA6F;IAAnD,yTAAgB;IAAmC,uDAA8B;;IAAA,4DAAS;;IAAvC,0DAA8B;IAA9B,gJAA8B;;AD7D5H,MAAM,mBAAmB;IAQ5B,YAAmB,SAA4C,EAC3B,IAAS,EACjC,WAAwB,EACxB,SAA2B,EAC3B,QAAqB,EACrB,iBAAoC;QAL7B,cAAS,GAAT,SAAS,CAAmC;QAC3B,SAAI,GAAJ,IAAI,CAAK;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAkB;QAC3B,aAAQ,GAAR,QAAQ,CAAa;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAC5C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,YAAY,EAAE,CAAC;IAExB,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAErF,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EACxC;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEP,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EAC7C;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACV;QAEL,CAAC,CAAC,CAAC;IAGP,CAAC;IAED,YAAY;QAER,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAEtE,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC;aAEtC;iBAAM;gBAEH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE;oBAC1C,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aAEN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB;QAEZ,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE;YAE3C,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;SAC/E;aACI;YACD,OAAO,IAAI,CAAC,aAAa,CAAC;SAC7B;IACL,CAAC;IAED,eAAe,CAAC,KAAU,EAAE,GAAG;QAC3B,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC;IACrC,CAAC;;sFAvHQ,mBAAmB,uMAShB,qEAAe;iHATlB,mBAAmB;QCdhC,yEAAkH;QAC9G,6GAA+H;QAC/H,6GAAkI;QAClI,4EAAgH;QAAxE,2IAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,mFAAuC;QACnC,6EAAgD;;QAC5C,4EAAU;QAEN,qFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,4EAAuD;QAA3B,8LAA0B;QAAtD,4DAAuD;QAC3D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,4EAAuD;QAA3B,8LAA0B;QAAtD,4DAAuD;QAC3D,4DAAiB;QAEjB,mHAWM;QAEN,mHAYM;QACN,4DAAW;QACnB,4DAAU;QAEV,8EAAoD;;QAEhD,qFAAyG;QACrG,6EAAW;QAAA,wDAAsC;;QAAA,4DAAY;QAC7D,4EAA8C;QAA9B,4LAA6B;QAA7C,4DAA8C;QAClD,4DAAiB;QACjB,4EAAU;QACN,sFAAoB;QAChB,0IAEkB;QACtB,4DAAqB;QACzB,4DAAW;QAEf,4DAAU;QAEd,4DAAgB;QAEpB,4DAAqB;QACrB,0FAAmC;QAC/B,2EAAkB;QACd,wHAAwH;QAC5H,4DAAM;QACN,2EAA4C;QACxC,8EAA4C;QAAlB,4IAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,wHAAoI;QACxI,4DAAM;QACV,4DAAqB;;QA5EK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAO3B,0DAAsC;QAAtC,8JAAsC;QAGvB,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,mJAAiC;QAChB,0DAA0B;QAA1B,qFAA0B;QAE1C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,mJAAiC;QAChB,0DAA0B;QAA1B,qFAA0B;QAGpD,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBtB,0DAA0C;QAA1C,mKAA0C;QAGhC,0DAAsC;QAAtC,wJAAsC;QACjC,0DAA6B;QAA7B,mFAA6B;QAIR,0DAA0B;QAA1B,2FAA0B;QAa9D,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QAChB,0DAA8B;QAA9B,0FAA8B;;AD+D3F,MAAM,YAAY;IAQrB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjJ4D;AAGC;AACA;AAEP;AACuC;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,iYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,yXAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAI/B,sFAAmD;IAAC,uDAA8B;;IAAA,4DAAkB;;IAAhD,0DAA8B;IAA9B,0JAA8B;;;IAClF,+EAAoD;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAInE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAsD;IAAC,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAIvE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAsD;IAAC,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,2FAAgB;;;IAIvE,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,+JAAmC;;;IACvF,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,+JAAmC;;;IACvF,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAKzD,kFAAoC;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC5E,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;ADxD3G,MAAM,aAAa;IAUtB,YAAoB,WAAyB,EAClC,MAAiB,EACjB,SAA2B,EAC1B,QAAqB;QAHb,gBAAW,GAAX,WAAW,CAAc;QAClC,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QAVjC,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IASK,CAAC;IAEtC,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAK,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAK,UAAU,EAAE,CAAC;IACpC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC;aAC3D,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aACtE,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,EAAE;gBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;aAC9F;iBACI;gBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;gBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC3D;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE/B,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC7B,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAa;QACxB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAa,EAAE,KAAc;QAEpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uEAAmB,EAAE;YAClC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAC,IAAI;YACjB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAc;QAEjB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBAC3D,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACV;gBAEL,CAAC,CAAC,CAAC;aACN;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACA;gBACV,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YAEW;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACA;gBACG,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;0EAjQQ,aAAa;2GAAb,aAAa;;QCrB1B,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,qIAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,oRAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,sIAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,+JAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,mIAAwF;QACxF,qHAOW;QACf,qEAAe;QAEf,6EAAoC;QACpD,oIAAoG;QACpG,sHAA8E;QAClF,qEAAe;QAEf,6EAAsC;QAClC,oIAAsG;QACtG,sHAAkF;QACtF,qEAAe;QAEf,6EAAsC;QAClC,oIAAsG;QACtG,sHAAkF;QACtF,qEAAe;QAEf,6EAAyC;QACrC,oIAAyG;QACzG,sHAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,oIAAyG;QACzG,sHAAwF;QAC5F,qEAAe;QAGK,6EAA6C;QACzC,mIAA8F;QAC9F,sHAA6F;QACjG,qEAAe;QAEf,kIAAqE;QACrE,oHACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,yKAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,4HAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,sIAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,sIAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QAC9D,6EAAW;QAAA,wDAA4B;;QAAA,4DAAY;QACnD,6EAA0D;QAA5B,yLAA2B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA0D;QAA9B,2LAA6B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA0D;QAA9B,2LAA6B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,uEAAK;QACF,sFAAyD;QACrD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAAqF;QAAjC,8LAAgC;QAApF,4DAAqF;QACrF,wFAAmF;QACnF,uFAAoD;QACxD,4DAAiB;QACjB,oEACA;QAAA,sFAAyD;QACrD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAAuF;QAAlC,+LAAiC;QAAtF,4DAAuF;QACvF,wFAAoF;QACpF,uFAAqD;QACzD,4DAAiB;QACpB,4DAAM;QACN,sFAA0D;QACtD,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,6EAA+D;QAAjC,8LAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGb,4DAAc;QAClB,4DAAwB;;;;QA3HyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QA4Cf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QAC9B,0DAA4B;QAA5B,iJAA4B;QACT,0DAA2B;QAA3B,sFAA2B;QAE7C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACb,0DAA6B;QAA7B,wFAA6B;QAE7C,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACb,0DAA6B;QAA7B,wFAA6B;QAG1C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAiC;QAAjC,sJAAiC;QAC5B,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAiC;QAAjC,sJAAiC;QAC5B,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAIlD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAiC;QAAjC,sJAAiC;QACd,0DAAgC;QAAhC,2FAAgC;;ADqK3D,MAAM,QAAQ;IAajB;IAEA,CAAC;CACJ;AAEM,MAAM,UAAU;IAYnB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AEtTsD;;;;AAMhD,MAAM,WAAW;IAIpB,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,QAAQ,CAAC;IAEsC,CAAC;IAEpF,IAAI,CAAC,IAAc;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAClH,CAAC;IAED,aAAa,CAAC,IAAc,EAAE,QAAwB;QAElD,IAAI,YAAY,GAAG;YACf,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,QAAQ;SACtB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,mBAAmB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,CAAC;IACnI,CAAC;IAED,MAAM,CAAC,IAAc;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAC/G,CAAC;IAED,OAAO,CAAC,MAAkB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAEjF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAC3H,CAAC;IAED,WAAW,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IAE/H,CAAC;;sEAvCQ,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPgD;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAA6F;;;IAAA,4DAAK;;;IAAlG,0DAA6F;IAA7F,uRAA6F;;;IACtI,yEAA0C;IAAA,uDAA+F;;;IAAA,4DAAK;;;IAApG,0DAA+F;IAA/F,0RAA+F;;;;IAezI,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,mWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,0EAA2G;IAEvG,qFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,qFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,6EAA2D;IAA3C,mWAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAOrD,6EAA+E;IAAnB,6TAAkB;IAAC,uDAAgC;;IAAA,4DAAS;;IAAzC,0DAAgC;IAAhC,kJAAgC;;ADhChH,MAAM,uBAAuB;IAIhC,YAAmB,SAAgD,EAC/B,IAAS,EACjC,eAAgC,EAChC,SAA4B,EAC5B,QAAqB;QAJd,cAAS,GAAT,SAAS,CAAuC;QAC/B,SAAI,GAAJ,IAAI,CAAK;QACjC,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAmB;QAC5B,aAAQ,GAAR,QAAQ,CAAa;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAE5D,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAC3D;oBACG,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EACjE;oBACI,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,CAAC,CAAC;IAGP,CAAC;;8FA9DQ,uBAAuB,uMAKpB,qEAAe;qHALlB,uBAAuB;QCdpC,yEAAkH;QAC9G,iHAA2I;QAC3I,iHAA8I;QAC9I,4EAAgH;QAAxE,+IAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,oFAA0D;QAC1D,4EAAW;QAAA,uDAAmC;;QAAA,4DAAY;QAC3D,4EAAuD;QAAzB,gMAAwB;QAAtD,4DAAuD;QAC1D,4DAAiB;QACjB,qFAA0D;QACtD,6EAAW;QAAA,wDAAmC;;QAAA,4DAAY;QAC3D,4EAAuD;QAAzB,gMAAwB;QAAtD,4DAAuD;QAC1D,4DAAiB;QAEb,uHAWM;QAEN,uHAYM;QACV,4DAAqB;QACrB,yFAAmC;QAC/B,0EAAkB;QACd,2HAAwH;QAC5H,4DAAM;QACN,0EAA4C;QACxC,8EAA4C;QAAlB,gJAAS,WAAO,IAAC;QAAC,wDAAgC;;QAAA,4DAAS;QACrF,8EAA2D;QAAjB,gJAAS,UAAM,IAAC;QAAC,wDAA8B;;QAAA,4DAAS;QACtG,4DAAM;QACV,4DAAqB;;QAnDK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAMxB,0DAAqB;QAArB,4EAAqB;QAC1B,0DAAmC;QAAnC,qJAAmC;QACjB,0DAAwB;QAAxB,mFAAwB;QAEzC,0DAAqB;QAArB,4EAAqB;QACtB,0DAAmC;QAAnC,qJAAmC;QACjB,0DAAwB;QAAxB,mFAAwB;QAG/C,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBV,0DAAkB;QAAlB,oFAAkB;QAGiB,0DAAgC;QAAhC,oJAAgC;QACjB,0DAA8B;QAA9B,kJAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CpC;AAGS;AACR;AAEP;AACuC;;;;;;;;;;;;;;;;;;;ICetE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,qYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,6XAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAI/B,sFAAmD;IAAC,uDAAsC;;IAAA,4DAAkB;;IAAxD,0DAAsC;IAAtC,kKAAsC;;;IAC1F,+EAAwD;IAAC,uDAAkB;IAAA,4DAAW;;;IAA7B,0DAAkB;IAAlB,6FAAkB;;;IAI3E,sFAAmD;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;IACtF,+EAAoD;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAInE,sFAAmD;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;IACtF,+EAAoD;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAInE,sFAAmD;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3F,+EAAyD;IAAC,uDAAiD;;IAAA,4DAAW;;;IAA5D,0DAAiD;IAAjD,uLAAiD;;;IAI3G,sFAAmD;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3F,+EAAyD;IAAC,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAKzD,kFAAoC;IAAC,uDAA2C;;IAAA,4DAAkB;;IAA7D,0DAA2C;IAA3C,uKAA2C;;;IAChF,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;ADxD3G,MAAM,iBAAiB;IAU1B,YAAoB,eAAiC,EAC1C,MAAiB,EACjB,SAA2B,EAC1B,QAAqB;QAHb,oBAAe,GAAf,eAAe,CAAkB;QAC1C,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QAVjC,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IASK,CAAC;IAEtC,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAK,cAAc,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAK,cAAc,EAAE,CAAC;IACxC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QAGX,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC,SAAS,CAAC;aAC/D,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aAC1E,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,EAAE;gBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;aAC9F;iBACI;gBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;gBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC3D;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;QAEnC,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;QACjC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAiB;QAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAiB,EAAE,KAAc;QAExC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+EAAuB,EAAE;YACtC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAC,IAAI;YACjB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAkB;QAErB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBAC/D,IAAI,QAAQ,CAAC,SAAS,EAAE;wBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBACV;gBAEL,CAAC,CAAC,CAAC;aACN;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,WAAW;QACP,OAAO;YAEH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACA;gBACV,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,YAAY;gBACvB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YACD;gBACG,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aACf;YAEW;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACA;gBACG,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;kFAjQQ,iBAAiB;+GAAjB,iBAAiB;;QCrB9B,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAE/B,4EAA4F;QAApD,yIAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,wRAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,0IAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,mKAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,uIAAwF;QACxF,yHAOW;QACf,qEAAe;QAEf,6EAAwC;QACxD,wIAA4G;QAC5G,0HAAsF;QAC1F,qEAAe;QAEf,6EAAoC;QAChC,wIAAwG;QACxG,0HAA8E;QAClF,qEAAe;QAEf,6EAAoC;QAChC,wIAAwG;QACxG,0HAA8E;QAClF,qEAAe;QAEf,6EAAyC;QACrC,wIAA6G;QAC7G,0HAAsH;QAC1H,qEAAe;QAEf,6EAAyC;QACrC,wIAA6G;QAC7G,0HAAwF;QAC5F,qEAAe;QAGK,6EAA6C;QACzC,uIAAkG;QAClG,0HAA6F;QACjG,qEAAe;QAEf,sIAAqE;QACrE,wHACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,6KAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,gIAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,0IAAS,gBAAY,IAAC;QAAiD,wDAAgC;;QAAA,4DAAS;QAC1J,8EAAoF;QAA7C,0IAAS,iBAAa,IAAC;QAAsB,wDAAqC;;QAAA,4DAAS;QACtI,4DAAM;QAEN,sFAA0D;QAC9D,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,6EAA8D;QAAhC,iMAA+B;QAA7D,4DAA8D;QAClE,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAgC;;QAAA,4DAAY;QACvD,6EAA0D;QAA5B,6LAA2B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,sFAA0D;QACtD,6EAAW;QAAA,wDAAgC;;QAAA,4DAAY;QACvD,6EAA0D;QAA5B,6LAA2B;QAAzD,4DAA0D;QAC9D,4DAAiB;QACjB,uEAAK;QACF,sFAAyD;QACrD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAAqF;QAAjC,kMAAgC;QAApF,4DAAqF;QACrF,wFAAmF;QACnF,uFAAoD;QACxD,4DAAiB;QACjB,oEACA;QAAA,sFAAyD;QACrD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAAuF;QAAlC,mMAAiC;QAAtF,4DAAuF;QACvF,wFAAoF;QACpF,uFAAqD;QACzD,4DAAiB;QACpB,4DAAM;QACN,sFAA0D;QACtD,6EAAW;QAAA,wDAAqC;;QAAA,4DAAY;QAC5D,6EAA+D;QAAjC,kMAAgC;QAA9D,4DAA+D;QACnE,4DAAiB;QAGb,4DAAc;QAClB,4DAAwB;;;;QA3HyB,6EAAoB;QAuB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QA4Cf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAgC;QAAhC,oJAAgC;QAClF,0DAAoB;QAApB,2EAAoB;QAAC,0DAAqC;QAArC,yJAAqC;QAG7G,0DAAqB;QAArB,4EAAqB;QAC9B,0DAAoC;QAApC,yJAAoC;QACjB,0DAA+B;QAA/B,0FAA+B;QAEjD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAgC;QAAhC,qJAAgC;QACb,0DAA2B;QAA3B,sFAA2B;QAE7C,0DAAqB;QAArB,4EAAqB;QACtB,0DAAgC;QAAhC,qJAAgC;QACb,0DAA2B;QAA3B,sFAA2B;QAG1C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAqC;QAArC,0JAAqC;QAChC,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAqC;QAArC,0JAAqC;QAChC,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;QAIlD,0DAAqB;QAArB,4EAAqB;QACtB,0DAAqC;QAArC,0JAAqC;QAClB,0DAAgC;QAAhC,2FAAgC;;ADqK3D,MAAM,YAAY;IAarB;IAEA,CAAC;CACJ;AAEM,MAAM,cAAc;IAYvB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AEtTsD;;;;AAKhD,MAAM,eAAe;IAIxB,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,YAAY,CAAC;IAEkC,CAAC;IAEpF,IAAI,CAAC,IAAkB;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,cAAc,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACtH,CAAC;IAED,MAAM,CAAC,IAAkB;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,yBAAyB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IACnH,CAAC;IAED,OAAO,CAAC,MAAsB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAErF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,iBAAiB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAC/H,CAAC;;8EAxBQ,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;;;;;;;;;;;;;;;;;;;ICFlE,yEAAyC;IAAA,uDAAyB;IAAA,4DAAK;;;IAA9B,0DAAyB;IAAzB,sGAAyB;;;IAClE,yEAA0C;IAAA,uDAA0B;IAAA,4DAAK;;;IAA/B,0DAA0B;IAA1B,uGAA0B;;;;IAyExD,yEAA2G;IAEvG,oFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,oFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,4EAA2D;IAA3C,+VAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IACrB,4DAAM;;;IARa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAIzD,yEAA2G;IAEvG,oFAA2C;IACvC,4EAAW;IAAA,uDAAoC;;IAAA,4DAAY;IAC3D,uEAAgF;;IACpF,4DAAiB;IAEjB,oFAA2C;IACvC,4EAAW;IAAA,uDAAwC;;IAAA,4DAAY;IAC/D,4EAA2D;IAA3C,+VAAiC;IAAjD,4DAA2D;IAC/D,4DAAiB;IAErB,4DAAM;;;IATa,0DAAoC;IAApC,oJAAoC;IAC/B,0DAAsD;IAAtD,yLAAsD;IAI3D,0DAAwC;IAAxC,yJAAwC;IACnC,0DAAiC;IAAjC,+FAAiC;;;;IAerD,sFAAwJ;IAAvF,oaAAqC;IAClG,uDACJ;IAAA,4DAAkB;;;IAFqF,gFAAoB;IACvH,0DACJ;IADI,2FACJ;;ADpGb,MAAM,mBAAmB;IAM5B,YAAmB,SAA4C,EAC3B,IAAS,EACjC,WAAwB,EACxB,QAAqB,EACrB,SAA2B,EAC3B,iBAAoC;QAL7B,cAAS,GAAT,SAAS,CAAmC;QAC3B,SAAI,GAAJ,IAAI,CAAK;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAa;QACrB,cAAS,GAAT,SAAS,CAAkB;QAC3B,sBAAiB,GAAjB,iBAAiB,CAAmB;QAC5C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAGrB,IAAI,CAAC,YAAY,EAAE,CAAC;IAExB,CAAC;IAED,QAAQ;IAGR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,KAAK;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,MAAM;QAEF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,IAAI;QAEA,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAErF,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,EAAE;oBACvC,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;aAC/D;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE;oBAC1C,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,YAAY;QAER,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAEtE,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAEpB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC;aAEtC;iBAAM;gBAEH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE;oBAC1C,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aAEN;QAEL,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YAET,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB;QACZ,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE;YAE3C,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;SAC/E;aACI;YACD,OAAO,IAAI,CAAC,aAAa,CAAC;SAC7B;IACL,CAAC;IAED,eAAe,CAAC,KAAU,EAAE,GAAG;QAC3B,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC;IACrC,CAAC;;sFA1HQ,mBAAmB,uMAOhB,qEAAe;iHAPlB,mBAAmB;QCdhC,yEAAkH;QAC9G,6GAAuE;QACvE,6GAAyE;QACzE,4EAAgH;QAAxE,2IAAS,WAAO,IAAC;QACrD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC9B,4DAAS;QACb,4DAAM;QACN,qFAAoB;QAChB,mFAAuC;QACnC,6EAAgD;;QAC5C,4EAAU;QACN,0EAAuF;QACnF,qFAA2C;QACvC,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,4EAA2C;QAA3B,8LAA0B;QAA1C,4DAA2C;QAC/C,4DAAiB;QAEjB,qFAA2C;QACvC,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,4EAAwC;QAAxB,2LAAuB;QAAvC,4DAAwC;QAC5C,4DAAiB;QACrB,4DAAM;QAQN,0EAAuF;QAEnF,qFAA2C;QACvC,6EAAW;QAAA,wDAAkC;;QAAA,4DAAY;QACzD,4EAA4C;QAA5B,+LAA2B;QAA3C,4DAA4C;QAChD,4DAAiB;QAEjB,qFAA2C;QACvC,6EAAW;QAAA,wDAAiC;;QAAA,4DAAY;QACxD,4EAA2C;QAA3B,8LAA0B;QAA1C,4DAA2C;QAC/C,4DAAiB;QAErB,4DAAM;QAEN,0EAAuF;QAEnF,qFAAgD;QAC5C,6EAAW;QAAA,wDAAoC;;QAAA,4DAAY;QAC3D,4EAAuD;QAAvC,iMAA6B;QAA7C,4DAAuD;QAC3D,4DAAiB;QAYjB,qFAA2C;QACvC,6EAAW;QAAA,wDAAsC;;QAAA,4DAAY;QAC7D,wEAAkF;;QACtF,4DAAiB;QAErB,4DAAM;QAEN,0EAAuF;QACnF,qFAAgD;QAC5C,wFAA6C;QAA3B,yMAA0B;QAAE,4DAAmB;QACjE,4EAAgC;QAAA,wDAAiC;;QAAA,4DAAO;QACxE,2EAAoD;QACxD,4DAAiB;QACrB,4DAAM;QAEN,oHAWM;QAEN,oHAYM;QACV,4DAAW;QACf,4DAAU;QAEV,8EAAoD;;QAEhD,sFAAyG;QACrG,6EAAW;QAAA,wDAAsC;;QAAA,4DAAY;QAC7D,4EAA8C;QAA9B,4LAA6B;QAA7C,4DAA8C;QAClD,4DAAiB;QACjB,4EAAU;QACN,sFAAoB;QAChB,0IAEkB;QACtB,4DAAqB;QACzB,4DAAW;QAEf,4DAAU;QAEd,4DAAgB;QAGpB,4DAAqB;QACrB,0FAAmC;QAC/B,2EAAkB;QACd,8EAA0D;QAAnB,4IAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC7E,4DAAM;QACN,2EAA4C;QACxC,8EAA4C;QAAlB,4IAAS,WAAO,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC3D,8EAA2D;QAAjB,4IAAS,UAAM,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAC5E,4DAAM;QACV,4DAAqB;;QAnIK,0DAAiB;QAAjB,mFAAiB;QACjB,0DAAkB;QAAlB,oFAAkB;QAO3B,0DAAsC;QAAtC,8JAAsC;QAIpB,0DAAiC;QAAjC,mJAAiC;QAC5B,0DAA0B;QAA1B,qFAA0B;QAI/B,0DAA8B;QAA9B,gJAA8B;QACzB,0DAAuB;QAAvB,kFAAuB;QAa5B,0DAAkC;QAAlC,oJAAkC;QAC7B,0DAA2B;QAA3B,sFAA2B;QAIhC,0DAAiC;QAAjC,mJAAiC;QAC5B,0DAA0B;QAA1B,qFAA0B;QAQ/B,0DAAoC;QAApC,sJAAoC;QAC/B,0DAA6B;QAA7B,wFAA6B;QAclC,0DAAsC;QAAtC,wJAAsC;QACjC,0DAAwD;QAAxD,0LAAwD;QAOtD,0DAA0B;QAA1B,qFAA0B;QACZ,0DAAiC;QAAjC,mJAAiC;QAKnE,0DAAiB;QAAjB,mFAAiB;QAajB,0DAAiB;QAAjB,mFAAiB;QAgBtB,0DAA0C;QAA1C,mKAA0C;QAGhC,0DAAsC;QAAtC,wJAAsC;QACjC,0DAA6B;QAA7B,mFAA6B;QAIR,0DAA0B;QAA1B,2FAA0B;;AD8BxE,MAAM,YAAY;IAQrB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErJ4D;AAGC;AACA;AAEP;AACuC;;;;;;;;;;;;;;;;;;;;;ICgBtE,kFAAmC;IAAC,uDAAkC;;IAAA,4DAAkB;;IAApD,0DAAkC;IAAlC,8JAAkC;;;;IACtE,2EAAgC;IAC5B,6EAAoG;IAAjD,iYAA6B;IAC5E,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;IAC/C,4DAAS;IACT,6EAA8F;IAAzC,yXAAqB;IACtE,+EAA8B;IAAA,iEAAM;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAW;;;IAIX,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,0JAAgC;;;IACpF,+EAAoD;IAChD,uDAEJ;IAAA,4DAAW;;;IAFP,0DAEJ;IAFI,0FAEJ;;;IAIA,sFAAmD;IAAA,uDAA+B;;IAAA,4DAAkB;;IAAjD,0DAA+B;IAA/B,iJAA+B;;;IAClF,+EAAsD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIxE,sFAAmD;IAAC,uDAA6B;;IAAA,4DAAkB;;IAA/C,0DAA6B;IAA7B,yJAA6B;;;IACjF,+EAAmD;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAIlE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAsD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIxE,sFAAmD;IAAC,uDAAiC;;IAAA,4DAAkB;;IAAnD,0DAAiC;IAAjC,6JAAiC;;;IACrF,+EAAuD;IAAC,uDAAkB;IAAA,4DAAW;;;IAA7B,0DAAkB;IAAlB,6FAAkB;;;IAI1E,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAuD;IAAC,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAIzE,sFAAmD;IAAC,uDAAgC;;IAAA,4DAAkB;;IAAlD,0DAAgC;IAAhC,4JAAgC;;;IACpF,+EAAsD;IAClD,uFAAsD;IAApC,6OAA0B;IAAW,4DAAmB;IAC9E,4DAAW;;;IADW,0DAA0B;IAA1B,qFAA0B;;;IAKhD,sFAAmD;IAAA,uDAAmC;;IAAA,4DAAkB;;IAArD,0DAAmC;IAAnC,8JAAmC;;;IACtF,+EAAyD;IAAA,wEAAO;IAAC,uDAA8C;;IAAA,4DAAQ;IAAC,4DAAW;;;IAAlE,0DAA8C;IAA9C,oLAA8C;;;IAI/G,sFAAmD;IAAC,uDAAuC;;IAAA,4DAAkB;;IAAzD,0DAAuC;IAAvC,mKAAuC;;;IAC3F,+EAAyD;IAAC,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAItF,4EAAqE;;;IACrE,qEACU;;;IAOlB,6EAAsG;;;AD3E3G,MAAM,aAAa;IAatB,YAAoB,WAAwB,EACjC,MAAiB,EACjB,SAA2B,EAC1B,QAAqB,EACrB,iBAAoC;QAJ5B,gBAAW,GAAX,WAAW,CAAa;QACjC,WAAM,GAAN,MAAM,CAAW;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAdhD,gBAAW,GAAY,KAAK,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAaoB,CAAC;IAErD,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACjG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,eAAe;IAEf,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;IACnC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAM;QACX,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM;YAAE,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QACtF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,gBAAgB,CAAC,KAAgB;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,QAAiB;QAErB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC;QAEtB,IAAI,QAAQ,EAAE;YAEV,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;iBAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC;aAC3D,CAAC,CAAC,CAAC;SAEX;QAGD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;aACtE,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAEzB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBAGpB,IAAI,QAAQ,EAAE;oBACV,MAAM,CAAC,IAAI,CAAC,wEAAkB,GAAG,+BAA+B,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;iBAC9F;qBACI;oBAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;oBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3D;aAEJ;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACxC,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QAEL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;YAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,kBAAkB,EAAE,OAAO;gBAC3B,gBAAgB,EAAE,QAAQ;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;QAEP,CAAC,CAEJ,CAAC;IACV,CAAC;IAED,aAAa;QAET,IAAI,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE/B,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;QACrB,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;QACzB,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QACxB,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC3B,SAAS,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QACrC,SAAS,CAAC,WAAW,GAAG,EAAE,CAAC;QAC3B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,eAAe,GAAG,EAAE,CAAC;QAC/B,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACnC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,eAAe,GAAG,EAAE,CAAC;QAE/B,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,GAAa;QACxB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,GAAa,EAAE,KAAc;QAEpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uEAAmB,EAAE;YAClC,KAAK,EAAE,MAAM;YACb,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;aACf;SACJ,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAElB,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAEI,IAAI,QAAQ,CAAC,SAAS,IAAI,MAAM,EAAE;gBACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACvB;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,MAAM,CAAC,IAAc;QAEjB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACrC,WAAW,EAAE,IAAI;SACpB,CAAC,CAAC,WAAW,EAAE;aACX,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBAE3D,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;oBAEhD,IAAI,QAAQ,CAAC,SAAS,EAAE;wBAEpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BAC1C,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBAEH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBAEvB;yBACI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBAE1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;4BACxC,kBAAkB,EAAE,OAAO;4BAC3B,gBAAgB,EAAE,QAAQ;4BAC1B,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBAEN;gBAEL,CAAC,EACG,CAAC,KAAK,EAAE,EAAE;oBAEN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,EACtD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC/B,kBAAkB,EAAE,OAAO;wBAC3B,gBAAgB,EAAE,QAAQ;wBAC1B,QAAQ,EAAE,IAAI;qBACjB,CAAC,CAAC;gBAEP,CAAC,CACJ,CAAC;aACL;iBACI;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE;oBAC/D,kBAAkB,EAAE,OAAO;oBAC3B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IAGX,CAAC;IAED,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK;QACzB,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,cAAc;IACd,gDAAgD;IAChD,kGAAkG;IAClG,8DAA8D;IAC9D,wCAAwC;IACxC,aAAa;IAEb,GAAG;IAEH,0CAA0C;IAC1C,uCAAuC;IACvC,mDAAmD;IACnD,GAAG;IAEH,mBAAmB;IACnB,kCAAkC;IAClC,gFAAgF;IAChF,6DAA6D;IAC7D,GAAG;IAKH,WAAW;QACP,OAAO;YACH;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,OAAO;gBAClB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,WAAW;gBACtB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,UAAU;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YAED;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,aAAa;gBACxB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,iBAAiB;gBAC5B,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,EAAE;aAChB;SAGJ,CAAC;IACN,CAAC;;0EA9VQ,aAAa;2GAAb,aAAa;;QCvB1B,2FAAsE;QAClE,yFAAiE;QAC7D,yEAAkC;QAE9B,yEAAmC;QAG/B,4EAA4F;QAApD,qIAAS,mBAAe,IAAC;QAC7D,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;QAET,4EAA6F;QAArD,oRAAS,aAAgB,IAAC;QAC9D,2EAAU;QAAA,sEAAW;QAAA,4DAAW;QACpC,4DAAS;QAET,6EAA2F;QAAnD,sIAAS,kBAAc,IAAC;QAC5D,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QACjC,4DAAS;QAKb,4DAAM;QAEN,0EAA0D;QACtD,gFAAgF;QAAnC,+JAAiB,oBAAgB,IAAC;QAC3E,4EAAqC;QACjC,mIAAwF;QACxF,qHAOW;QACf,qEAAe;QAEf,6EAAoC;QAChC,oIAAsG;QACtG,sHAGW;QACf,qEAAe;QAEf,6EAAsC;QAClC,oIAAoG;QACpG,sHAAmF;QACvF,qEAAe;QAEf,6EAAmC;QAC/B,oIAAmG;QACnG,sHAA6E;QACjF,qEAAe;QAEf,6EAAsC;QAClC,oIAAsG;QACtG,sHAAmF;QACvF,qEAAe;QAEf,6EAAuC;QACnC,oIAAuG;QACvG,sHAAqF;QACzF,qEAAe;QAEf,6EAAsC;QAClC,oIAAsG;QACtG,sHAAoF;QACxF,qEAAe;QAEf,6EAAsC;QAClC,oIAAsG;QACtG,sHAEW;QACf,qEAAe;QAEf,6EAAyC;QACrC,oIAAwG;QACxG,sHAAmI;QACvI,qEAAe;QAEf,6EAA6C;QACzC,oIAA6G;QAC7G,sHAA6F;QACjG,qEAAe;QAGf,kIAAqE;QACrE,oHACU;QACd,4DAAY;QACZ,qFAGgD;QADjC,yKAA0B,4BAAwB,IAAC;QAClB,4DAAgB;QACpE,4DAAM;QACN,4HAAsG;QAC1G,4DAAM;QACV,4DAAsB;QAEtB,uFAC0D;QAEtD,2EAAiC;QAC7B,8EAAiH;QAAvE,sIAAS,gBAAY,IAAC;QAAiD,wDAAwB;;QAAA,4DAAS;QAClJ,8EAAoF;QAA7C,sIAAS,iBAAa,IAAC;QAAsB,wDAA6B;;QAAA,4DAAS;QAC9H,4DAAM;QAEN,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA8C;QAA9B,2LAA6B;QAA7C,4DAA8C;QAClD,4DAAiB;QAEjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA2B;;QAAA,4DAAY;QAClD,6EAA2C;QAA3B,wLAA0B;QAA1C,4DAA2C;QAC/C,4DAAiB;QAEjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA+B;;QAAA,4DAAY;QACtD,6EAA+C;QAA/B,4LAA8B;QAA9C,4DAA+C;QACnD,4DAAiB;QAEjB,sFAA0D;QACtD,6EAAW;QAAA,wDAA8B;;QAAA,4DAAY;QACrD,6EAA8C;QAA9B,2LAA6B;QAA7C,4DAA8C;QAClD,4DAAiB;QAEjB,wFAAgD;QAA9B,sMAA6B;QAAC,wDAA8B;;QAAA,4DAAmB;QAEjG,uEAAK;QACD,sFAAyD;QACrD,6EAAW;QAAA,wDAAmC;;QAAA,4DAAY;QAC1D,6EAAyF;QAAnC,gMAAkC;QAAxF,4DAAyF;QACzF,wFAAqF;QACrF,uFAAsD;QAC1D,4DAAiB;QACjB,oEACA;QAAA,sFAAyD;QACrD,6EAAW;QAAA,wDAAmC;;QAAA,4DAAY;QAC1D,6EAA2F;QAApC,iMAAmC;QAA1F,4DAA2F;QAC3F,wFAAsF;QACtF,uFAAuD;QAC3D,4DAAiB;QACrB,4DAAM;QAEN,uEAAK;QACD,uFAAyD;QACrD,8EAAW;QAAA,yDAAiC;;QAAA,4DAAY;QACxD,8EAAqF;QAAjC,+LAAgC;QAApF,4DAAqF;QACrF,yFAAmF;QACnF,wFAAoD;QACxD,4DAAiB;QACjB,qEACA;QAAA,uFAAyD;QACrD,8EAAW;QAAA,yDAAiC;;QAAA,4DAAY;QACxD,8EAAuF;QAAlC,gMAAiC;QAAtF,4DAAuF;QACvF,yFAAoF;QACpF,wFAAqD;QACzD,4DAAiB;QACrB,4DAAM;QACV,4DAAc;QAClB,4DAAwB;;;;;;QApKyB,6EAAoB;QAwB3B,2DAA2B;QAA3B,mFAA2B;QAC1C,0DAAyB;QAAzB,sFAAyB;QAgEf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAG7C,0DAA0C;QAA1C,kGAA0C;QAK/C,0DAA+B;QAA/B,0FAA+B;QAQoB,0DAAoB;QAApB,2EAAoB;QAA4B,0DAAwB;QAAxB,4IAAwB;QAC1E,0DAAoB;QAApB,2EAAoB;QAAC,0DAA6B;QAA7B,iJAA6B;QAGrG,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACzB,0DAA6B;QAA7B,wFAA6B;QAGjC,0DAAqB;QAArB,4EAAqB;QACtB,0DAA2B;QAA3B,gJAA2B;QACtB,0DAA0B;QAA1B,qFAA0B;QAG9B,0DAAqB;QAArB,4EAAqB;QACtB,0DAA+B;QAA/B,oJAA+B;QAC1B,0DAA8B;QAA9B,yFAA8B;QAGlC,0DAAqB;QAArB,4EAAqB;QACtB,0DAA8B;QAA9B,mJAA8B;QACzB,0DAA6B;QAA7B,wFAA6B;QAG/B,0DAA6B;QAA7B,wFAA6B;QAAC,0DAA8B;QAA9B,mJAA8B;QAG1D,0DAAoB;QAApB,2EAAoB;QACrB,0DAAmC;QAAnC,wJAAmC;QAC9B,0DAAqC;QAArC,+EAAqC;QACpB,0DAA2B;QAA3B,qEAA2B;QAIhD,0DAAoB;QAApB,2EAAoB;QACrB,0DAAmC;QAAnC,wJAAmC;QAC9B,0DAAsC;QAAtC,+EAAsC;QACrB,0DAA4B;QAA5B,qEAA4B;QAMjD,0DAAoB;QAApB,2EAAoB;QACrB,0DAAiC;QAAjC,uJAAiC;QAC5B,0DAAmC;QAAnC,+EAAmC;QAClB,0DAAyB;QAAzB,qEAAyB;QAI9C,0DAAoB;QAApB,2EAAoB;QACrB,0DAAiC;QAAjC,uJAAiC;QAC5B,0DAAoC;QAApC,+EAAoC;QACnB,0DAA0B;QAA1B,qEAA0B;;AD2NpE,MAAM,QAAQ;IAkBjB;IAEA,CAAC;CACJ;AAEM,MAAM,UAAU;IAmBnB;IAEA,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AEhasD;;;;AAKhD,MAAM,WAAW;IAIpB,YAAoB,UAAsB,EAAU,WAA2B;QAA3D,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAF/E,iBAAY,GAAG,wEAAkB,GAAG,QAAQ,CAAC;IAEsC,CAAC;IAEpF,IAAI,CAAC,IAAc;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,UAAU,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAClH,CAAC;IAED,aAAa,CAAC,IAAc,EAAE,QAAwB;QAElD,IAAI,YAAY,GAAG;YACf,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,QAAQ;SAEtB;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,mBAAmB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,CAAC;IACnI,CAAC;IAED,MAAM,CAAC,IAAc;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAC/G,CAAC;IAED,OAAO,CAAC,MAAkB,EAAE,SAAoB,EAAE,WAAgB,EAAE,QAAiB;QAEjF,IAAI,UAAU,GAAG;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;SAC3B;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC;IAC3H,CAAC;IAED,WAAW,CAAC,EAAU;QAElB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IAE/H,CAAC;IAED,mBAAmB,CAAC,MAAc,EAAE,KAAa;QAC7C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,iBAAiB,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAG,MAAM,EAAG,KAAK,EAAE,CAAC,CAAC;IAC1J,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,sCAAsC,CAAC,CAAC;IAC5E,CAAC;;sEAhDQ,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTyB;AACA;AACU;AACQ;AACV;AACsB;AAChB;AAEP;AAEqC;AAC3C;AACa;AACG;AACL;AACQ;AACN;AACS;AACX;AACM;AACV;AACI;AACQ;AACW;AACtB;AACA;AACe;AAET;AACK;AACb;AACA;AACa;AACD;AACa;AACb;AACa;AACzB;AACa;AACZ;AACA;AACA;AACgB;AACd;AACa;AACK;AACa;AACrC;AACa;AAEuB;AACa;AAC/B;AACa;AACnB;AACa;;;AAG5E,oBAAoB;AAiEb,MAAM,YAAY;;wEAAZ,YAAY;0GAAZ,YAAY;+GAJV;QACP,mEAAc;KACjB,YA5DQ;YACL,wEAAgB;YAChB,2EAAiB;YACjB,sEAAe;YACf,8EAAmB;YACnB,wEAAmB;YACnB,iFAAoB;YACpB,sEAAe;YACf,kEAAa;YACb,wDAAW;YACX,gEAAmB;YACnB,sEAAe;YACf,mEAAgB;YAChB,mEAAgB;YAChB,0DAAY;YACZ,oEAAc;YACd,4EAAkB;YAClB,kEAAa;YACb,oEAAc;YACd,wEAAkB;YAClB,yFAAwB;YACxB,iEAAe;YACf,kEAAa;YACb,kEAAa;YACb,kEAAa;YACb,kFAAqB;YACrB,mEAAqB,CAAC,yDAAY,CAAC;SACtC;oIAmCQ,YAAY,mBAhCjB,+DAAa;QACb,4EAAmB;QACnB,+DAAa;QACb,4EAAmB;QACnB,gGAAsB;QACtB,+DAAa;QACb,4EAAmB;QACnB,4EAAiB;QACjB,yFAAuB;QACvB,2EAAiB;QACjB,yFAAuB;QACvB,gEAAa;QACb,6EAAmB;QACnB,mEAAc;QACd,gFAAoB;QACpB,qFAAoB;QACpB,kGAA0B;QAC1B,6DAAY;QACZ,0EAAkB;QAClB,iGAAwB;QACxB,8GAA8B;QAC9B,+EAAkB;QAClB,4FAAwB;QACxB,sFAAsB;QACtB,yEAAgB,aArDhB,wEAAgB;QAChB,2EAAiB;QACjB,sEAAe;QACf,8EAAmB;QACnB,wEAAmB;QACnB,iFAAoB;QACpB,sEAAe;QACf,kEAAa;QACb,wDAAW;QACX,gEAAmB;QACnB,sEAAe;QACf,mEAAgB;QAChB,mEAAgB;QAChB,0DAAY;QACZ,oEAAc;QACd,4EAAkB;QAClB,kEAAa;QACb,oEAAc;QACd,wEAAkB;QAClB,yFAAwB;QACxB,iEAAe;QACf,kEAAa;QACb,kEAAa;QACb,kEAAa;QACb,kFAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFyB;AACA;AACA;AACY;AACA;AACZ;AACG;AACkB;AACxB;AACoC;AAClB;AACN;AAC/D,oBAAoB;AAGb,MAAM,YAAY,GAAW;IAChC;QACI,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,+DAAa;gBACxB,IAAI,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,UAAU,EAAE,eAAe,EAAE;aAChE;YACC;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,+DAAa;gBACxB,IAAI,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,UAAU,EAAE,eAAe,EAAE;aAChE;YACA;gBACG,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,+DAAa;gBACvB,IAAI,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,UAAU,EAAE,eAAe,EAAE;aACjE;YACC;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,2EAAiB;gBAC5B,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,UAAU,EAAE,uBAAuB,EAAE;aAChF;YACC;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,2EAAiB;gBAC5B,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,UAAU,EAAE,uBAAuB,EAAE;aAChF;YACC;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,+DAAa;gBACxB,IAAI,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,UAAU,EAAE,eAAe,EAAE;aAChE;YACD;gBACI,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,kEAAc;gBACzB,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,UAAU,EAAE,iBAAiB,EAAE;aACpE;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,oFAAoB;gBAC/B,IAAI,EAAE,EAAE,KAAK,EAAE,6BAA6B,EAAE,UAAU,EAAE,6BAA6B,EAAE;aAC5F;YACD;gBACI,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,4DAAY;gBACvB,IAAI,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,UAAU,EAAE,aAAa,EAAE;aAC5D;YAED;gBACI,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,gGAAwB;gBACnC,IAAI,EAAE,EAAE,KAAK,EAAE,qCAAqC,EAAE,UAAU,EAAE,qCAAqC,EAAE;aAC5G;YACD;gBACI,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,+EAAkB;gBAC7B,IAAI,EAAE,EAAE,KAAK,EAAE,yBAAyB,EAAE,UAAU,EAAE,yBAAyB,EAAE;aACpF;YACD;gBACI,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,yEAAgB;gBAC3B,IAAI,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE,UAAU,EAAE,qBAAqB,EAAE;aAC5E;YACD,mBAAmB;SACtB;KACJ;CACJ,CAAC","file":"src_app_views_System_system_module_ts-es2015.js","sourcesContent":["import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { AuthData } from \"./auth.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"auth-dialog\",\r\n    templateUrl: \"./auth-dialog.component.html\"\r\n})\r\nexport class AuthDialogComponent {\r\n\r\n    row: AuthData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<AuthDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private authService: AuthService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.authService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'AUTH.AUTH' | translate}}  - {{row.authId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'AUTH.AUTH' | translate}} - {{row.authId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'AUTH.AUTHCODE' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.authCode\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'AUTH.AUTHDESC' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.authDesc\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'AUTH.AUTHTYPE' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.authType\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { AuthDialogComponent } from './auth-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'auth-table',\r\n    templateUrl: './auth.component.html',\r\n    styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: AuthFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private authService: AuthService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new AuthFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new AuthFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('AUTH.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.authService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new AuthData();\r\n\r\n        emptyData.authId = 0;\r\n        emptyData.authCode = '';\r\n        emptyData.authDesc = '';\r\n        emptyData.authType = 0;\r\n        emptyData.createdDate = new Date();\r\n        emptyData.createdUser = 0;\r\n        emptyData.updatedDate = new Date();\r\n        emptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: AuthData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: AuthData, isNew: boolean) {\r\n\r\n        this.dialog.open(AuthDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: AuthData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.authService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(response.error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'authId',\r\n                translate: 'AUTHID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'authCode',\r\n                translate: 'AUTHCODE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'authDesc',\r\n                translate: 'AUTHDESC',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'authType',\r\n                translate: 'AUTHTYPE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class AuthData {\r\n\r\n    authId: number;\r\n    authCode: string;\r\n    authDesc: string;\r\n    authType: number;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class AuthFilter {\r\n\r\n    authId: number;\r\n    authCode: string;\r\n    authDesc: string;\r\n    authType: number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"authId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.AUTHID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"AuthId\"> {{row.authId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"authCode\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.AUTHCODE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"AuthCode\"> {{row.authCode}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"authDesc\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.AUTHDESC' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"AuthDesc\"> {{row.authDesc}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"authType\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.AUTHTYPE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"AuthType\"> {{row.authType}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedDate\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.UPDATEDDATE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedUser\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.UPDATEDUSER' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \r\n</ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'AUTH.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'AUTH.AUTHID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.authId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'AUTH.AUTHCODE'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.authCode\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'AUTH.AUTHDESC'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.authDesc\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'AUTH.AUTHTYPE'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.authType\">\r\n</mat-form-field>\r\n<div>\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'AUTH.CREATEDDATE'| translate}}</mat-label> \r\n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDatepicker></mat-datepicker>\r\n   </mat-form-field>\r\n   &nbsp;\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'AUTH.CREATEDDATE'| translate}}</mat-label>\r\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDate2picker></mat-datepicker>\r\n   </mat-form-field>\r\n</div>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'AUTH.CREATEDUSER'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthData, AuthFilter } from \"./auth.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n    endPointBase = environment.apiURL + \"/Auth/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: AuthData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveAuth\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: AuthData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteAuth?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: AuthFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetAuthList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { CounterData } from \"./counter.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { CounterService } from './counter.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"counter-dialog\",\r\n    templateUrl: \"./counter-dialog.component.html\"\r\n})\r\nexport class CounterDialogComponent {\r\n\r\n    row: CounterData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<CounterDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private counterService: CounterService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.counterService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'COUNTER.COUNTER' | translate}}  - {{row.counterId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'COUNTER.COUNTER' | translate}} - {{row.counterId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'COUNTER.COUNTERNAME' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.counterName\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'COUNTER.CURRENTVALUE' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.currentValue\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'COUNTER.PREFIX' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.prefix\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n   <mat-slide-toggle [(ngModel)]=\"row.addYear\"> </mat-slide-toggle>\r\n   <span style=\"margin-left:10px;\">{{ 'COUNTER.ADDYEAR' | translate }}</span>\r\n   <textarea matInput style=\"display:none;\"></textarea>\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'COUNTER.PADDINGCOUNT' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.paddingCount\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { CounterService } from './counter.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { CounterDialogComponent } from './counter-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'counter-table',\r\n    templateUrl: './counter.component.html',\r\n    styleUrls: ['./counter.component.scss']\r\n})\r\nexport class CounterComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: CounterFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private counterService:  CounterService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  CounterFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  CounterFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('COUNTER.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.counterService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new CounterData();\r\n\r\n        emptyData.counterId = 0;\r\nemptyData.counterName = '';\r\nemptyData.currentValue = 0;\r\nemptyData.prefix = '';\r\nemptyData.addYear = false;\r\nemptyData.paddingCount = 0;\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: CounterData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: CounterData, isNew: boolean) {\r\n\r\n        this.dialog.open(CounterDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: CounterData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.counterService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    response.errorMessage, {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'counterId',\r\n   translate: 'COUNTERID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'counterName',\r\n   translate: 'COUNTERNAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'currentValue',\r\n   translate: 'CURRENTVALUE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'prefix',\r\n   translate: 'PREFIX',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'addYear',\r\n   translate: 'ADDYEAR',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'paddingCount',\r\n   translate: 'PADDINGCOUNT',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class CounterData {\r\n\r\n    counterId : number;\r\ncounterName : string;\r\ncurrentValue : number;\r\nprefix : string;\r\naddYear : boolean;\r\npaddingCount : number;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class CounterFilter {\r\n\r\n    counterId : number;\r\ncounterName : string;\r\ncurrentValue : number;\r\nprefix : string;\r\naddYear : boolean;\r\npaddingCount : number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"counterId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.COUNTERID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"CounterId\"> {{row.counterId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"counterName\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.COUNTERNAME' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"CounterName\"> {{row.counterName}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"currentValue\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.CURRENTVALUE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"CurrentValue\"> {{row.currentValue}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"prefix\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.PREFIX' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"Prefix\"> {{row.prefix}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"addYear\">\r\n   <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.ADDYEAR' | translate}}  </mat-header-cell>\r\n   <mat-cell *matCellDef=\"let row\" data-label=\"AddYear\">\r\n       <mat-slide-toggle [(ngModel)]=\"row.addYear\" disabled> </mat-slide-toggle>\r\n   </mat-cell>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"paddingCount\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.PADDINGCOUNT' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"PaddingCount\"> {{row.paddingCount}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedDate\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.UPDATEDDATE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedUser\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.UPDATEDUSER' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \r\n</ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'COUNTER.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.COUNTERID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.counterId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.COUNTERNAME'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.counterName\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.CURRENTVALUE'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.currentValue\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.PREFIX'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.prefix\">\r\n</mat-form-field>\r\n<mat-slide-toggle [(ngModel)]=\"filter.addYear\">{{'COUNTER.ADDYEAR'| translate}}</mat-slide-toggle>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.PADDINGCOUNT'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.paddingCount\">\r\n</mat-form-field>\r\n<div>\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'COUNTER.CREATEDDATE'| translate}}</mat-label> \r\n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDatepicker></mat-datepicker>\r\n   </mat-form-field>\r\n   &nbsp;\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'COUNTER.CREATEDDATE'| translate}}</mat-label>\r\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDate2picker></mat-datepicker>\r\n   </mat-form-field>\r\n</div>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.CREATEDUSER'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CounterData, CounterFilter } from \"./counter.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CounterService {\r\n\r\n    endPointBase = environment.apiURL + \"/Counter/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: CounterData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveCounter\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: CounterData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteCounter?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: CounterFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetCounterList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { EmailAttachmentData } from \"./emailattachment.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { EmailAttachmentService } from './emailattachment.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"emailattachment-dialog\",\r\n    templateUrl: \"./emailattachment-dialog.component.html\"\r\n})\r\nexport class EmailAttachmentDialogComponent {\r\n\r\n    row: EmailAttachmentData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<EmailAttachmentDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private emailAttachmentService: EmailAttachmentService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.emailAttachmentService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'EMAILATTACHMENT.EMAILATTACHMENT' | translate}}  - {{row.emailAttachmentId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'EMAILATTACHMENT.EMAILATTACHMENT' | translate}} - {{row.emailAttachmentId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAILATTACHMENT.EMAILID' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.emailId\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAILATTACHMENT.NAME' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.name\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAILATTACHMENT.FILEPATH' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.filePath\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { EmailAttachmentService } from './emailattachment.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { EmailAttachmentDialogComponent } from './emailattachment-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'emailattachment-table',\r\n    templateUrl: './emailattachment.component.html',\r\n    styleUrls: ['./emailattachment.component.scss']\r\n})\r\nexport class EmailAttachmentComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: EmailAttachmentFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private emailAttachmentService:  EmailAttachmentService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  EmailAttachmentFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  EmailAttachmentFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('EMAILATTACHMENT.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.emailAttachmentService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new EmailAttachmentData();\r\n\r\n        emptyData.emailAttachmentId = 0;\r\nemptyData.emailId = 0;\r\nemptyData.name = '';\r\nemptyData.filePath = '';\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: EmailAttachmentData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: EmailAttachmentData, isNew: boolean) {\r\n\r\n        this.dialog.open(EmailAttachmentDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: EmailAttachmentData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.emailAttachmentService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'emailAttachmentId',\r\n   translate: 'EMAILATTACHMENTID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'emailId',\r\n   translate: 'EMAILID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'name',\r\n   translate: 'NAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'filePath',\r\n   translate: 'FILEPATH',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class EmailAttachmentData {\r\n\r\n    emailAttachmentId : number;\r\nemailId : number;\r\nname : string;\r\nfilePath : string;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class EmailAttachmentFilter {\r\n\r\n    emailAttachmentId : number;\r\nemailId : number;\r\nname : string;\r\nfilePath : string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailAttachmentId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.EMAILATTACHMENTID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"EmailAttachmentId\"> {{row.emailAttachmentId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"emailId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.EMAILID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"EmailId\"> {{row.emailId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"name\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.NAME' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.name}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"filePath\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.FILEPATH' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"FilePath\"> {{row.filePath}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedDate\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.UPDATEDDATE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedUser\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.UPDATEDUSER' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \r\n</ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'EMAILATTACHMENT.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'EMAILATTACHMENT.EMAILATTACHMENTID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.emailAttachmentId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'EMAILATTACHMENT.EMAILID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.emailId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'EMAILATTACHMENT.NAME'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.name\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'EMAILATTACHMENT.FILEPATH'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.filePath\">\r\n</mat-form-field>\r\n<div>\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'EMAILATTACHMENT.CREATEDDATE'| translate}}</mat-label> \r\n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDatepicker></mat-datepicker>\r\n   </mat-form-field>\r\n   &nbsp;\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'EMAILATTACHMENT.CREATEDDATE'| translate}}</mat-label>\r\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDate2picker></mat-datepicker>\r\n   </mat-form-field>\r\n</div>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'EMAILATTACHMENT.CREATEDUSER'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { EmailAttachmentData, EmailAttachmentFilter } from \"./emailattachment.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EmailAttachmentService {\r\n\r\n    endPointBase = environment.apiURL + \"/EmailAttachment/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: EmailAttachmentData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveEmailAttachment\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: EmailAttachmentData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteEmailAttachment?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: EmailAttachmentFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetEmailAttachmentList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { EmailConfigData } from \"./emailconfig.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { EmailConfigService } from './emailconfig.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"emailconfig-dialog\",\r\n    templateUrl: \"./emailconfig-dialog.component.html\"\r\n})\r\nexport class EmailConfigDialogComponent {\r\n\r\n    row: EmailConfigData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<EmailConfigDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private emailConfigService: EmailConfigService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.emailConfigService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'EMAILCONFIG.EMAILCONFIG' | translate}}  - {{row.emailConfigId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'EMAILCONFIG.EMAILCONFIG' | translate}} - {{row.emailConfigId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'EMAILCONFIG.CONFIGNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.configName\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'EMAILCONFIG.HOST' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.host\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'EMAILCONFIG.PORT' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.port\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-slide-toggle [(ngModel)]=\"row.enableSsl\"> </mat-slide-toggle>\r\n        <span style=\"margin-left:10px;\">{{ 'EMAILCONFIG.ENABLESSL' | translate }}</span>\r\n        <textarea matInput style=\"display:none;\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'EMAILCONFIG.USERNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.userName\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'EMAILCONFIG.PASSWORD' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.password\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-slide-toggle [(ngModel)]=\"row.isActive\"> </mat-slide-toggle>\r\n        <span style=\"margin-left:10px;\">{{ 'EMAILCONFIG.ISACTIVE' | translate }}</span>\r\n        <textarea matInput style=\"display:none;\"></textarea>\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { EmailConfigService } from './emailconfig.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { EmailConfigDialogComponent } from './emailconfig-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'emailconfig-table',\r\n    templateUrl: './emailconfig.component.html',\r\n    styleUrls: ['./emailconfig.component.scss']\r\n})\r\nexport class EmailConfigComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: EmailConfigFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private emailConfigService:  EmailConfigService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  EmailConfigFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  EmailConfigFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('EMAILCONFIG.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.emailConfigService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new EmailConfigData();\r\n\r\n        emptyData.emailConfigId = 0;\r\nemptyData.configName = '';\r\nemptyData.host = '';\r\nemptyData.port = '';\r\nemptyData.enableSsl = false;\r\nemptyData.userName = '';\r\nemptyData.password = '';\r\nemptyData.isActive = false;\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: EmailConfigData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: EmailConfigData, isNew: boolean) {\r\n\r\n        this.dialog.open(EmailConfigDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: EmailConfigData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.emailConfigService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'emailConfigId',\r\n   translate: 'EMAILCONFIGID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'configName',\r\n   translate: 'CONFIGNAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'host',\r\n   translate: 'HOST',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'port',\r\n   translate: 'PORT',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'enableSsl',\r\n   translate: 'ENABLESSL',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'userName',\r\n   translate: 'USERNAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'password',\r\n   translate: 'PASSWORD',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'isActive',\r\n   translate: 'ISACTIVE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class EmailConfigData {\r\n\r\n    emailConfigId : number;\r\nconfigName : string;\r\nhost : string;\r\nport : string;\r\nenableSsl : boolean;\r\nuserName : string;\r\npassword : string;\r\nisActive : boolean;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class EmailConfigFilter {\r\n\r\n    emailConfigId : number;\r\nconfigName : string;\r\nhost : string;\r\nport : string;\r\nenableSsl : boolean;\r\nuserName : string;\r\npassword : string;\r\nisActive : boolean;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailConfigId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.EMAILCONFIGID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailConfigId\"> {{row.emailConfigId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"configName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.CONFIGNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ConfigName\"> {{row.configName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"host\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.HOST' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Host\"> {{row.host}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"port\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.PORT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Port\"> {{row.port}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"enableSsl\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.ENABLESSL' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EnableSsl\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.enableSsl\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"userName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.USERNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UserName\"> {{row.userName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"password\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.PASSWORD' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Password\"> {{row.password}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"isActive\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.ISACTIVE' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IsActive\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.isActive\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'EMAILCONFIG.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.EMAILCONFIGID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.emailConfigId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.CONFIGNAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.configName\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.HOST'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.host\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.PORT'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.port\">\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.enableSsl\">{{'EMAILCONFIG.ENABLESSL'| translate}}</mat-slide-toggle>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.USERNAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.userName\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.PASSWORD'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.password\">\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.isActive\">{{'EMAILCONFIG.ISACTIVE'| translate}}</mat-slide-toggle>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAILCONFIG.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAILCONFIG.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { EmailConfigData, EmailConfigFilter } from \"./emailconfig.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EmailConfigService {\r\n\r\n    endPointBase = environment.apiURL + \"/EmailConfig/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: EmailConfigData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveEmailConfig\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: EmailConfigData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteEmailConfig?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: EmailConfigFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetEmailConfigList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { EmailData } from \"./email.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { EmailService } from './email.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"email-dialog\",\r\n    templateUrl: \"./email-dialog.component.html\"\r\n})\r\nexport class EmailDialogComponent {\r\n\r\n    row: EmailData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<EmailDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private emailService: EmailService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.emailService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'EMAIL.EMAIL' | translate}}  - {{row.emailId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'EMAIL.EMAIL' | translate}} - {{row.emailId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.EMAILFROM' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.emailFrom\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.EMAILTO' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.emailTo\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.EMAILTOCC' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.emailToCc\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.EMAILTOBCC' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.emailToBcc\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.SUBJECT' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.subject\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.BODY' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.body\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n   <mat-slide-toggle [(ngModel)]=\"row.isHtml\"> </mat-slide-toggle>\r\n   <span style=\"margin-left:10px;\">{{ 'EMAIL.ISHTML' | translate }}</span>\r\n   <textarea matInput style=\"display:none;\"></textarea>\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n   <mat-slide-toggle [(ngModel)]=\"row.isSend\"> </mat-slide-toggle>\r\n   <span style=\"margin-left:10px;\">{{ 'EMAIL.ISSEND' | translate }}</span>\r\n   <textarea matInput style=\"display:none;\"></textarea>\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n   <mat-slide-toggle [(ngModel)]=\"row.isSuccess\"> </mat-slide-toggle>\r\n   <span style=\"margin-left:10px;\">{{ 'EMAIL.ISSUCCESS' | translate }}</span>\r\n   <textarea matInput style=\"display:none;\"></textarea>\r\n</mat-form-field>\r\n<mat-form-field  [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.SENDDATE' | translate }}</mat-label>\r\n    <input matInput [matDatepicker]=\"sendDatePicker\" [(ngModel)]=\"row.sendDate\">\r\n     <mat-datepicker-toggle matSuffix [for]=\"sendDatePicker\"></mat-datepicker-toggle>\r\n    <mat-datepicker #sendDatePicker></mat-datepicker>\r\n </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { EmailService } from './email.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { EmailDialogComponent } from './email-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'email-table',\r\n    templateUrl: './email.component.html',\r\n    styleUrls: ['./email.component.scss']\r\n})\r\nexport class EmailComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: EmailFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private emailService:  EmailService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  EmailFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  EmailFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('EMAIL.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.emailService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new EmailData();\r\n\r\n        emptyData.emailId = 0;\r\nemptyData.emailFrom = '';\r\nemptyData.emailTo = '';\r\nemptyData.emailToCc = '';\r\nemptyData.emailToBcc = '';\r\nemptyData.subject = '';\r\nemptyData.body = '';\r\nemptyData.isHtml = false;\r\nemptyData.isSend = false;\r\nemptyData.isSuccess = false;\r\nemptyData.sendDate = new Date();\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: EmailData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: EmailData, isNew: boolean) {\r\n\r\n        this.dialog.open(EmailDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: EmailData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.emailService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'emailId',\r\n   translate: 'EMAILID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'emailFrom',\r\n   translate: 'EMAILFROM',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'emailTo',\r\n   translate: 'EMAILTO',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'emailToCc',\r\n   translate: 'EMAILTOCC',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'emailToBcc',\r\n   translate: 'EMAILTOBCC',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'subject',\r\n   translate: 'SUBJECT',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'body',\r\n   translate: 'BODY',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'isHtml',\r\n   translate: 'ISHTML',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'isSend',\r\n   translate: 'ISSEND',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'isSuccess',\r\n   translate: 'ISSUCCESS',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'sendDate',\r\n   translate: 'SENDDATE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class EmailData {\r\n\r\n    emailId : number;\r\nemailFrom : string;\r\nemailTo : string;\r\nemailToCc : string;\r\nemailToBcc : string;\r\nsubject : string;\r\nbody : string;\r\nisHtml : boolean;\r\nisSend : boolean;\r\nisSuccess : boolean;\r\nsendDate : Date;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class EmailFilter {\r\n\r\n    emailId : number;\r\nemailFrom : string;\r\nemailTo : string;\r\nemailToCc : string;\r\nemailToBcc : string;\r\nsubject : string;\r\nbody : string;\r\nisHtml : boolean;\r\nisSend : boolean;\r\nisSuccess : boolean;\r\nsendDate : Date;\r\nsendDate2 : Date\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.EMAILID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailId\"> {{row.emailId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailFrom\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.EMAILFROM' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailFrom\"> {{row.emailFrom}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailTo\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.EMAILTO' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailTo\"> {{row.emailTo}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailToCc\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.EMAILTOCC' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailToCc\"> {{row.emailToCc}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailToBcc\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.EMAILTOBCC' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailToBcc\"> {{row.emailToBcc}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"subject\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.SUBJECT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Subject\"> {{row.subject}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"body\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.BODY' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Body\"> {{row.body | slice:0:50}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"isHtml\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.ISHTML' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IsHtml\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.isHtml\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"isSend\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.ISSEND' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IsSend\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.isSend\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"isSuccess\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.ISSUCCESS' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IsSuccess\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.isSuccess\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"sendDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.SENDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"SendDate\"> {{row.sendDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'EMAIL.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.EMAILID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.emailId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.EMAILFROM'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.emailFrom\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.EMAILTO'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.emailTo\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.EMAILTOCC'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.emailToCc\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.EMAILTOBCC'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.emailToBcc\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.SUBJECT'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.subject\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.BODY'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.body\">\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.isHtml\">{{'EMAIL.ISHTML'| translate}}</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.isSend\">{{'EMAIL.ISSEND'| translate}}</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.isSuccess\">{{'EMAIL.ISSUCCESS'| translate}}</mat-slide-toggle>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAIL.SENDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"sendDatepicker\" [(ngModel)]=\"filter.sendDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"sendDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #sendDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAIL.SENDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"sendDate2picker\" [(ngModel)]=\"filter.sendDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"sendDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #sendDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAIL.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAIL.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { EmailData, EmailFilter } from \"./email.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EmailService {\r\n\r\n    endPointBase = environment.apiURL + \"/Email/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: EmailData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveEmail\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: EmailData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteEmail?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: EmailFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetEmailList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { LogData } from \"./log.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { LogService } from './log.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"log-dialog\",\r\n    templateUrl: \"./log-dialog.component.html\"\r\n})\r\nexport class LogDialogComponent {\r\n\r\n    row: LogData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<LogDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private logService: LogService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.logService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'LOG.LOG' | translate}}  - {{row.logId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'LOG.LOG' | translate}} - {{row.logId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.LOGTYPE' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.logType\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.SOURCE' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.source\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.MESSAGE' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.message\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.FREETEXT1' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText1\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.FREETEXT2' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText2\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.FREETEXT3' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText3\">\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { LogService } from './log.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { LogDialogComponent } from './log-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'log-table',\r\n    templateUrl: './log.component.html',\r\n    styleUrls: ['./log.component.scss']\r\n})\r\nexport class LogComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: LogFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private logService:  LogService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  LogFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  LogFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('LOG.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.logService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new LogData();\r\n\r\n        emptyData.logId = 0;\r\nemptyData.logType = 0;\r\nemptyData.source = '';\r\nemptyData.message = '';\r\nemptyData.freeText1 = '';\r\nemptyData.freeText2 = '';\r\nemptyData.freeText3 = '';\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: LogData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: LogData, isNew: boolean) {\r\n\r\n        this.dialog.open(LogDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: LogData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.logService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'logId',\r\n   translate: 'LOGID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'logType',\r\n   translate: 'LOGTYPE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'source',\r\n   translate: 'SOURCE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'message',\r\n   translate: 'MESSAGE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText1',\r\n   translate: 'FREETEXT1',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText2',\r\n   translate: 'FREETEXT2',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText3',\r\n   translate: 'FREETEXT3',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class LogData {\r\n\r\n    logId : number;\r\nlogType : number;\r\nsource : string;\r\nmessage : string;\r\nfreeText1 : string;\r\nfreeText2 : string;\r\nfreeText3 : string;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class LogFilter {\r\n\r\n    logId : number;\r\nlogType : number;\r\nsource : string;\r\nmessage : string;\r\nfreeText1 : string;\r\nfreeText2 : string;\r\nfreeText3 : string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"logId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.LOGID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"LogId\"> {{row.logId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"logType\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.LOGTYPE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"LogType\"> {{row.logType}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"source\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.SOURCE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Source\"> {{row.source}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"message\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.MESSAGE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Message\"> {{row.message | slice:0:50}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText1\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.FREETEXT1' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText1\"> {{row.freeText1}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText2\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.FREETEXT2' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText2\"> {{row.freeText2}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText3\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.FREETEXT3' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText3\"> {{row.freeText3}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'LOG.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.LOGID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.logId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.LOGTYPE'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.logType\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.SOURCE'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.source\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.MESSAGE'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.message\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.FREETEXT1'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText1\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.FREETEXT2'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText2\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.FREETEXT3'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText3\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'LOG.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'LOG.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LogData, LogFilter } from \"./log.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LogService {\r\n\r\n    endPointBase = environment.apiURL + \"/Log/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: LogData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveLog\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: LogData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteLog?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: LogFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetLogList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MenuData } from \"./menu.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MenuService } from './menu.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"menu-dialog\",\r\n    templateUrl: \"./menu-dialog.component.html\"\r\n})\r\nexport class MenuDialogComponent {\r\n\r\n    row: MenuData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<MenuDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private menuService: MenuService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.menuService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'MENU.MENU' | translate}}  - {{row.menuId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'MENU.MENU' | translate}} - {{row.menuId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'MENU.MENUICON' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.menuIcon\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'MENU.NAME' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.name\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'MENU.STATE' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.state\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { MenuService } from './menu.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MenuDialogComponent } from './menu-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'menu-table',\r\n    templateUrl: './menu.component.html',\r\n    styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: MenuFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private menuService:  MenuService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  MenuFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  MenuFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('MENU.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.menuService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new MenuData();\r\n\r\n        emptyData.menuId = 0;\r\nemptyData.menuIcon = '';\r\nemptyData.name = '';\r\nemptyData.state = '';\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: MenuData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: MenuData, isNew: boolean) {\r\n\r\n        this.dialog.open(MenuDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: MenuData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.menuService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'menuId',\r\n   translate: 'MENUID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'menuIcon',\r\n   translate: 'MENUICON',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'name',\r\n   translate: 'NAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'state',\r\n   translate: 'STATE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class MenuData {\r\n\r\n    menuId : number;\r\nmenuIcon : string;\r\nname : string;\r\nstate : string;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class MenuFilter {\r\n\r\n    menuId : number;\r\nmenuIcon : string;\r\nname : string;\r\nstate : string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"menuId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.MENUID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"MenuId\"> {{row.menuId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"menuIcon\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.MENUICON' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"MenuIcon\"> {{row.menuIcon}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"name\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.NAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.name}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"state\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.STATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"State\"> {{row.state}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'MENU.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'MENU.MENUID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.menuId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'MENU.MENUICON'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.menuIcon\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'MENU.NAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.name\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'MENU.STATE'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.state\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'MENU.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'MENU.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'MENU.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { MenuData, MenuFilter } from \"./menu.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n\r\n    endPointBase = environment.apiURL + \"/Menu/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: MenuData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveMenu\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: MenuData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteMenu?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: MenuFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetMenuList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ParameterData } from \"./parameter.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ParameterService } from './parameter.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"parameter-dialog\",\r\n    templateUrl: \"./parameter-dialog.component.html\"\r\n})\r\nexport class ParameterDialogComponent {\r\n\r\n    row: ParameterData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<ParameterDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private parameterService: ParameterService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.parameterService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'PARAMETER.PARAMETER' | translate}}  - {{row.paramId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'PARAMETER.PARAMETER' | translate}} - {{row.paramId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.PARAMTYPE' | translate }}</mat-label>\r\n        <!--<input type=\"number\" matInput [(ngModel)]=\"row.paramType\">-->\r\n        <mat-select matInput [(ngModel)]=\"row.paramType\">\r\n            <mat-option *ngFor=\"let paramType of [1,2,3,4,5,6,7,8,9,10]\" [value]=\"paramType\">\r\n                {{'PARAMETER.PARAMETERTYPE_' + paramType | translate}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.PARAMCODE' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.paramCode\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.PARAMDESC' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.paramDesc\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.PARENTID' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.parentId\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.FREETEXT1' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText1\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.FREETEXT2' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText2\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.FREETEXT3' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText3\">\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { ParameterService } from './parameter.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { ParameterDialogComponent } from './parameter-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'parameter-table',\r\n    templateUrl: './parameter.component.html',\r\n    styleUrls: ['./parameter.component.scss']\r\n})\r\nexport class ParameterComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: ParameterFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private parameterService:  ParameterService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  ParameterFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  ParameterFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('PARAMETER.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.parameterService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new ParameterData();\r\n\r\n        emptyData.paramId = 0;\r\nemptyData.paramType = 0;\r\nemptyData.paramCode = '';\r\nemptyData.paramDesc = '';\r\nemptyData.parentId = 0;\r\nemptyData.freeText1 = '';\r\nemptyData.freeText2 = '';\r\nemptyData.freeText3 = '';\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: ParameterData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: ParameterData, isNew: boolean) {\r\n\r\n        this.dialog.open(ParameterDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: ParameterData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.parameterService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'paramId',\r\n   translate: 'PARAMID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'paramType',\r\n   translate: 'PARAMTYPE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'paramCode',\r\n   translate: 'PARAMCODE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'paramDesc',\r\n   translate: 'PARAMDESC',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'parentId',\r\n   translate: 'PARENTID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText1',\r\n   translate: 'FREETEXT1',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText2',\r\n   translate: 'FREETEXT2',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText3',\r\n   translate: 'FREETEXT3',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class ParameterData {\r\n\r\n    paramId : number;\r\nparamType : number;\r\nparamCode : string;\r\nparamDesc : string;\r\nparentId : number;\r\nfreeText1 : string;\r\nfreeText2 : string;\r\nfreeText3 : string;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class ParameterFilter {\r\n\r\n    paramId : number;\r\nparamType : number;\r\nparamCode : string;\r\nparamDesc : string;\r\nparentId : number;\r\nfreeText1 : string;\r\nfreeText2 : string;\r\nfreeText3 : string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"paramId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.PARAMID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ParamId\"> {{row.paramId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"paramType\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.PARAMTYPE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ParamType\"> {{'PARAMETER.PARAMETERTYPE_'+row.paramType | translate}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"paramCode\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.PARAMCODE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ParamCode\"> {{row.paramCode}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"paramDesc\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.PARAMDESC' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ParamDesc\"> {{row.paramDesc}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"parentId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.PARENTID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ParentId\"> {{row.parentId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText1\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.FREETEXT1' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText1\"> {{row.freeText1}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText2\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.FREETEXT2' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText2\"> {{row.freeText2}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText3\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.FREETEXT3' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText3\"> {{row.freeText3}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'PARAMETER.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.PARAMID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.paramId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.PARAMTYPE'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.paramType\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.PARAMCODE'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.paramCode\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.PARAMDESC'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.paramDesc\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.PARENTID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.parentId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.FREETEXT1'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText1\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.FREETEXT2'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText2\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.FREETEXT3'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText3\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'PARAMETER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'PARAMETER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ParameterData, ParameterFilter } from \"./parameter.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ParameterService {\r\n\r\n    endPointBase = environment.apiURL + \"/Parameter/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: ParameterData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveParameter\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: ParameterData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteParameter?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: ParameterFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetParameterList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { RoleAuthData } from \"./roleauth.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { RoleAuthService } from './roleauth.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: \"roleauth-dialog\",\r\n    templateUrl: \"./roleauth-dialog.component.html\"\r\n})\r\nexport class RoleAuthDialogComponent {\r\n\r\n    row: RoleAuthData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<RoleAuthDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private roleAuthService: RoleAuthService,\r\n        private translate : TranslateService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.roleAuthService.save(this.row).subscribe((response: any) => {\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'ROLEAUTH.ROLEAUTH' | translate}}  - {{row.roleAuthId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'ROLEAUTH.ROLEAUTH' | translate}} - {{row.roleAuthId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'ROLEAUTH.ROLEID' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.roleId\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'ROLEAUTH.AUTHID' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.authId\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { RoleAuthService } from './roleauth.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { RoleAuthDialogComponent } from './roleauth-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'roleauth-table',\r\n    templateUrl: './roleauth.component.html',\r\n    styleUrls: ['./roleauth.component.scss']\r\n})\r\nexport class RoleAuthComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: RoleAuthFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private roleAuthService: RoleAuthService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new RoleAuthFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new RoleAuthFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('ROLEAUTH.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.roleAuthService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                console.log(response);\r\n                this.showSpinner = false;\r\n                if (isExport) {\r\n                    window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                }\r\n                else {\r\n\r\n                    this.queryInfo.pager.totalCount = response.totalCount;\r\n                    this.dataSource = new MatTableDataSource(response.data);\r\n                }\r\n            });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new RoleAuthData();\r\n\r\n        emptyData.roleAuthId = 0;\r\n        emptyData.roleId = 0;\r\n        emptyData.authId = 0;\r\n        emptyData.createdDate = new Date();\r\n        emptyData.createdUser = 0;\r\n        emptyData.updatedDate = new Date();\r\n        emptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: RoleAuthData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: RoleAuthData, isNew: boolean) {\r\n\r\n        this.dialog.open(RoleAuthDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: RoleAuthData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.roleAuthService.delete(deleteRow).subscribe((response: any) => {\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(response.error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'roleAuthId',\r\n                translate: 'ROLEAUTHID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'roleId',\r\n                translate: 'ROLEID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'authId',\r\n                translate: 'AUTHID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class RoleAuthData {\r\n\r\n    roleAuthId: number;\r\n    roleId: number;\r\n    authId: number;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class RoleAuthFilter {\r\n\r\n    roleAuthId: number;\r\n    roleId: number;\r\n    authId: number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"roleAuthId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLEAUTH.ROLEAUTHID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"RoleAuthId\"> {{row.roleAuthId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"roleId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLEAUTH.ROLEID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"RoleId\"> {{row.roleId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"authId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLEAUTH.AUTHID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"AuthId\"> {{row.authId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLEAUTH.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLEAUTH.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'ROLEAUTH.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'ROLEAUTH.ROLEAUTHID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.roleAuthId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'ROLEAUTH.ROLEID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.roleId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'ROLEAUTH.AUTHID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.authId\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'ROLEAUTH.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'ROLEAUTH.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'ROLEAUTH.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { RoleAuthData, RoleAuthFilter } from \"./roleauth.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RoleAuthService {\r\n\r\n    endPointBase = environment.apiURL + \"/RoleAuth/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: RoleAuthData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveRoleAuth\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: RoleAuthData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteRoleAuth?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: RoleAuthFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetRoleAuthList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { RoleData } from \"./role.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { RoleService } from './role.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"role-dialog\",\r\n    templateUrl: \"./role-dialog.component.html\"\r\n})\r\nexport class RoleDialogComponent {\r\n\r\n    row: RoleData;\r\n    isNew: boolean;\r\n    filterAuth: string;\r\n    roleAuthInfos: RoleAuthInfo[];\r\n    isDataLoaded: boolean;\r\n\r\n    constructor(public dialogRef: MatDialogRef<RoleDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private roleService: RoleService,\r\n        private translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n        this.isDataLoaded = false;\r\n\r\n        this.getRoleAuths();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.roleService.saveWithAuths(this.row, this.roleAuthInfos).subscribe((response: any) => {\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                    this.translate.instant(response.message),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(response.errorMessage),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    getRoleAuths() {\r\n\r\n        this.roleService.getAuthInfo(this.row.roleId).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n            this.isDataLoaded = true;\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.roleAuthInfos = response.data;\r\n\r\n            } else {\r\n\r\n                this.snackbar.open('ERROR', response.message, {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    getFilteredAuths() {\r\n\r\n        if (this.filterAuth && this.filterAuth.trim()) {\r\n\r\n            return this.roleAuthInfos.filter(i => i.authCode.includes(this.filterAuth));\r\n        }\r\n        else {\r\n            return this.roleAuthInfos;\r\n        }\r\n    }\r\n\r\n    onRoleAuthClick(event: any, row) {\r\n        row.isRoleAuth = !row.isRoleAuth;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class RoleAuthInfo {\r\n\r\n    roleId: number;\r\n    authId: string;\r\n    authCode: string;\r\n    authDesc: string;\r\n    isRoleAuth: boolean;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'ROLE.ROLE' | translate}}  - {{row.roleId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'ROLE.ROLE' | translate}} - {{row.roleId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"{{'ROLE.ROLETAB' | translate}}\">\r\n            <mat-card>\r\n\r\n                <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n                    <mat-label>{{ 'ROLE.ROLENAME' | translate }}</mat-label>\r\n                    <input type=\"text\" matInput [(ngModel)]=\"row.roleName\">\r\n                </mat-form-field>\r\n                <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n                    <mat-label>{{ 'ROLE.ROLEDESC' | translate }}</mat-label>\r\n                    <input type=\"text\" matInput [(ngModel)]=\"row.roleDesc\">\r\n                </mat-form-field>\r\n\r\n                <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n                        <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n                        <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n                </mat-card>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"{{'ROLE.ROLEAUTHTAB' | translate}}\">\r\n\r\n            <mat-form-field fxFlex appearance=\"legacy\" style=\"margin-bottom:0px; margin-left:20px; margin-top:10px;\">\r\n                <mat-label>{{ 'GENERAL.FILTERLIST' | translate }}</mat-label>\r\n                <input matInput [(ngModel)]=\"this.filterAuth\">\r\n            </mat-form-field>\r\n            <mat-card>\r\n                <mat-selection-list>\r\n                    <mat-list-option *ngFor=\"let row of this.getFilteredAuths()\" (click)=\"onRoleAuthClick($event,row)\" [value]=\"row.authId\" [selected]=\"row.isRoleAuth\">\r\n                        {{row.authCode}}\r\n                    </mat-list-option>\r\n                </mat-selection-list>\r\n            </mat-card>\r\n\r\n        </mat-tab>\r\n\r\n    </mat-tab-group>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\" *ngIf=\"this.isDataLoaded ==true\" >{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { RoleService } from './role.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { RoleDialogComponent } from './role-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'role-table',\r\n    templateUrl: './role.component.html',\r\n    styleUrls: ['./role.component.scss']\r\n})\r\nexport class RoleComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: RoleFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private roleService:  RoleService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  RoleFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  RoleFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('ROLE.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.roleService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                console.log(response);\r\n                this.showSpinner = false;\r\n                if (isExport) {\r\n                    window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                }\r\n                else {\r\n\r\n                    this.queryInfo.pager.totalCount = response.totalCount;\r\n                    this.dataSource = new MatTableDataSource(response.data);\r\n                }\r\n            });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new RoleData();\r\n\r\n        emptyData.roleId = 0;\r\nemptyData.roleName = '';\r\nemptyData.roleDesc = '';\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: RoleData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: RoleData, isNew: boolean) {\r\n\r\n        this.dialog.open(RoleDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: RoleData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.roleService.delete(deleteRow).subscribe((response: any) => {\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'roleId',\r\n   translate: 'ROLEID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'roleName',\r\n   translate: 'ROLENAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'roleDesc',\r\n   translate: 'ROLEDESC',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class RoleData {\r\n\r\n    roleId : number;\r\nroleName : string;\r\nroleDesc : string;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class RoleFilter {\r\n\r\n    roleId : number;\r\nroleName : string;\r\nroleDesc : string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"roleId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLE.ROLEID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"RoleId\"> {{row.roleId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"roleName\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLE.ROLENAME' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"RoleName\"> {{row.roleName}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"roleDesc\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLE.ROLEDESC' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"RoleDesc\"> {{row.roleDesc}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedDate\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLE.UPDATEDDATE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedUser\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLE.UPDATEDUSER' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \r\n</ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'ROLE.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'ROLE.ROLEID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.roleId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'ROLE.ROLENAME'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.roleName\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'ROLE.ROLEDESC'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.roleDesc\">\r\n</mat-form-field>\r\n<div>\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'ROLE.CREATEDDATE'| translate}}</mat-label> \r\n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDatepicker></mat-datepicker>\r\n   </mat-form-field>\r\n   &nbsp;\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'ROLE.CREATEDDATE'| translate}}</mat-label>\r\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDate2picker></mat-datepicker>\r\n   </mat-form-field>\r\n</div>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'ROLE.CREATEDUSER'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { RoleData, RoleFilter } from \"./role.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\nimport { RoleAuthInfo } from \"./role-dialog.component\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n\r\n    endPointBase = environment.apiURL + \"/Role/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: RoleData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveRole\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    saveWithAuths(data: RoleData, authData: RoleAuthInfo[]): Observable<object> {\r\n\r\n        let roleWithAuth = {\r\n            role: data,\r\n            authInfos: authData\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"SaveRoleWithAuths\" + \"?session=\" + this.authService.getToken(), roleWithAuth);\r\n    }\r\n\r\n    delete(data: RoleData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteRole?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: RoleFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetRoleList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n    getAuthInfo(id: number): Observable<any> {\r\n        return this.httpClient.post(this.endPointBase + \"GetAuthInfo\" + \"?session=\" + this.authService.getToken(), { roleId: id });\r\n\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { UserRoleData } from \"./userrole.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { UserRoleService } from './userrole.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n    selector: \"userrole-dialog\",\r\n    templateUrl: \"./userrole-dialog.component.html\"\r\n})\r\nexport class UserRoleDialogComponent {\r\n\r\n    row: UserRoleData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<UserRoleDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private userRoleService: UserRoleService,\r\n        private translate : TranslateService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.userRoleService.save(this.row).subscribe((response: any) => {\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'USERROLE.USERROLE' | translate}}  - {{row.userRoleId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'USERROLE.USERROLE' | translate}} - {{row.userRoleId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'USERROLE.USERID' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.userId\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'USERROLE.ROLEID' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.roleId\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { UserRoleService } from './userrole.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { UserRoleDialogComponent } from './userrole-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'userrole-table',\r\n    templateUrl: './userrole.component.html',\r\n    styleUrls: ['./userrole.component.scss']\r\n})\r\nexport class UserRoleComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: UserRoleFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private userRoleService:  UserRoleService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  UserRoleFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  UserRoleFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('USERROLE.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.userRoleService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                console.log(response);\r\n                this.showSpinner = false;\r\n                if (isExport) {\r\n                    window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                }\r\n                else {\r\n\r\n                    this.queryInfo.pager.totalCount = response.totalCount;\r\n                    this.dataSource = new MatTableDataSource(response.data);\r\n                }\r\n            });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new UserRoleData();\r\n\r\n        emptyData.userRoleId = 0;\r\nemptyData.userId = 0;\r\nemptyData.roleId = 0;\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: UserRoleData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: UserRoleData, isNew: boolean) {\r\n\r\n        this.dialog.open(UserRoleDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: UserRoleData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.userRoleService.delete(deleteRow).subscribe((response: any) => {\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'userRoleId',\r\n   translate: 'USERROLEID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'userId',\r\n   translate: 'USERID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'roleId',\r\n   translate: 'ROLEID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class UserRoleData {\r\n\r\n    userRoleId : number;\r\nuserId : number;\r\nroleId : number;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class UserRoleFilter {\r\n\r\n    userRoleId : number;\r\nuserId : number;\r\nroleId : number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"userRoleId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USERROLE.USERROLEID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UserRoleId\"> {{row.userRoleId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"userId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USERROLE.USERID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UserId\"> {{row.userId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"roleId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USERROLE.ROLEID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"RoleId\"> {{row.roleId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedDate\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USERROLE.UPDATEDDATE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedUser\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USERROLE.UPDATEDUSER' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \r\n</ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'USERROLE.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'USERROLE.USERROLEID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.userRoleId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'USERROLE.USERID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.userId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'USERROLE.ROLEID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.roleId\">\r\n</mat-form-field>\r\n<div>\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'USERROLE.CREATEDDATE'| translate}}</mat-label> \r\n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDatepicker></mat-datepicker>\r\n   </mat-form-field>\r\n   &nbsp;\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'USERROLE.CREATEDDATE'| translate}}</mat-label>\r\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDate2picker></mat-datepicker>\r\n   </mat-form-field>\r\n</div>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'USERROLE.CREATEDUSER'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserRoleData, UserRoleFilter } from \"./userrole.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserRoleService {\r\n\r\n    endPointBase = environment.apiURL + \"/UserRole/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: UserRoleData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveUserRole\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: UserRoleData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteUserRole?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: UserRoleFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetUserRoleList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { UserData } from \"./user.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { UserService } from './user.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: \"dialog-b\",\r\n    templateUrl: \"./user-dialog.component.html\"\r\n})\r\nexport class UserDialogComponent {\r\n\r\n    row: UserData;\r\n    isNew: boolean;\r\n    userRoleInfos: UserRoleInfo[];\r\n    filterRole: string;\r\n    constructor(public dialogRef: MatDialogRef<UserDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private userService: UserService,\r\n        private snackbar: MatSnackBar,\r\n        private translate: TranslateService,\r\n        private navigationService: NavigationService) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n        this.filterRole = \"\";\r\n\r\n\r\n        this.getUserRoles();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.userService.saveWithRoles(this.row, this.userRoleInfos).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open('OK', response.message, {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open('ERROR', response.message, {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getUserRoles() {\r\n\r\n        this.userService.getRoleInfo(this.row.userId).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.userRoleInfos = response.data;\r\n\r\n            } else {\r\n\r\n                this.snackbar.open('ERROR', response.message, {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    getFilteredRoles() {\r\n        if (this.filterRole && this.filterRole.trim()) {\r\n\r\n            return this.userRoleInfos.filter(i => i.roleName.includes(this.filterRole));\r\n        }\r\n        else {\r\n            return this.userRoleInfos;\r\n        }\r\n    }\r\n\r\n    onUserRoleClick(event: any, row) {\r\n        row.isUserRole = !row.isUserRole;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport class UserRoleInfo {\r\n\r\n    userId: number;\r\n    roleId: string;\r\n    roleDesc: string;\r\n    roleName: string;\r\n    isUserRole: boolean;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">New User - {{row.userId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">Edit User - {{row.userId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"{{'USER.USERTAB' | translate}}\">\r\n            <mat-card>\r\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.USERNAME' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.userName\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.EMAIL' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.email\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n\r\n                <!--<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput [(ngModel)]=\"row.password\">\r\n                </mat-form-field>-->\r\n\r\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.FIRSTNAME' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.firstName\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.LASTNAME' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.lastName\">\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex=\"50\" appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.LASTLOGINIP' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.lastLoginIp\" readonly>\r\n                    </mat-form-field>\r\n\r\n\r\n\r\n                    <!--<mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.LASTLOGINDATE' | translate }}</mat-label>\r\n                        <input matInput [matDatepicker]=\"lastLoginDatePicker\" [(ngModel)]=\"row.lastLoginDate\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"lastLoginDatePicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #lastLoginDatePicker></mat-datepicker>\r\n                    </mat-form-field>-->\r\n\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.LASTLOGINDATE' | translate }}</mat-label>\r\n                        <input matInput value=\"{{row.lastLoginDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n                    <mat-form-field fxFlex=\"50\" appearance=\"legacy\">\r\n                        <mat-slide-toggle [(ngModel)]=\"row.isActive\"> </mat-slide-toggle>\r\n                        <span style=\"margin-left:10px;\">{{ 'USER.ISACTIVE' | translate }}</span>\r\n                        <textarea matInput style=\"display:none;\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n                        <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n                        <input matInput value=\"{{row.updatedUser | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n            </mat-card>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"{{'USER.USERROLETAB' | translate}}\">\r\n\r\n            <mat-form-field fxFlex appearance=\"legacy\" style=\"margin-bottom:0px; margin-left:20px; margin-top:10px;\">\r\n                <mat-label>{{ 'GENERAL.FILTERLIST' | translate }}</mat-label>\r\n                <input matInput [(ngModel)]=\"this.filterRole\">\r\n            </mat-form-field>\r\n            <mat-card>\r\n                <mat-selection-list>\r\n                    <mat-list-option *ngFor=\"let row of this.getFilteredRoles()\"     (click)=\"onUserRoleClick($event,row)\" [value]=\"row.roleId\" [selected]=\"row.isUserRole\">\r\n                        {{row.roleName}}\r\n                    </mat-list-option>\r\n                </mat-selection-list>\r\n            </mat-card>\r\n\r\n        </mat-tab>\r\n\r\n    </mat-tab-group>\r\n\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"delete()\">Delete</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Save</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { UserService } from './user.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { UserDialogComponent } from './user-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'user-table',\r\n    templateUrl: './user.component.html',\r\n    styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: UserFilter;\r\n    pageEvent: PageEvent;\r\n    data: Array<any>;\r\n    jokes: any;\r\n    currentJoke: any;\r\n\r\n\r\n    constructor(private userService: UserService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new UserFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n        this.data = [];\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new UserFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n        console.log($event);\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('USER.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.userService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n\r\n                this.navigationService.sessionControl(response);\r\n\r\n                this.showSpinner = false;\r\n\r\n                if (response.isSuccess) {\r\n\r\n\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                }\r\n\r\n            );\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new UserData();\r\n\r\n        emptyData.userId = 0;\r\n        emptyData.userName = '';\r\n        emptyData.email = '';\r\n        emptyData.password = '';\r\n        emptyData.firstName = '';\r\n        emptyData.lastName = '';\r\n        emptyData.isActive = false;\r\n        emptyData.lastLoginDate = new Date();\r\n        emptyData.lastLoginIp = '';\r\n        emptyData.createdDate = new Date();\r\n        emptyData.createdUser = 0;\r\n        emptyData.createdUserText = '';\r\n        emptyData.updatedDate = new Date();\r\n        emptyData.updatedUser = 0;\r\n        emptyData.updatedUserText = '';\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: UserData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: UserData, isNew: boolean) {\r\n\r\n        this.dialog.open(UserDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: UserData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.userService.delete(deleteRow).subscribe((response: any) => {\r\n\r\n                        this.navigationService.sessionControl(response);\r\n\r\n                        if (response.isSuccess) {\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                            this.getData(false);\r\n\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(response.error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        }\r\n\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        }\r\n                    );\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n\r\n    userChange($event, row, field) {\r\n        row[field] = $event;\r\n    }\r\n\r\n    //doFilter() {\r\n    //    if ((typeof this.currentJoke) == \"string\")\r\n    //        this.userService.getUserListForCombo(this.currentJoke, 0).subscribe((response: any) => {\r\n    //            this.navigationService.sessionControl(response);\r\n    //            this.data = response.data;\r\n    //        });\r\n\r\n    //}\r\n\r\n    //autoCompleteDisplay(item: any): string {\r\n    //    if (item == undefined) { return }\r\n    //    return item.value + ' - ' + item.displayText;\r\n    //}\r\n\r\n    //filter2(values) {\r\n    //    return values.filter(joke =>\r\n    //        // used 'includes' here for demo, you'd want to probably use 'indexOf'\r\n    //        joke.joke.toLowerCase().includes(this.currentJoke))\r\n    //}\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'userId',\r\n                translate: 'USERID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'userName',\r\n                translate: 'USERNAME',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'password',\r\n                translate: 'PASSWORD',\r\n                showColumn: false,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'email',\r\n                translate: 'EMAIL',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'firstName',\r\n                translate: 'FIRSTNAME',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'lastName',\r\n                translate: 'LASTNAME',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'isActive',\r\n                translate: 'ISACTIVE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class UserData {\r\n\r\n    userId: number;\r\n    userName: string;\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    isActive: boolean;\r\n    lastLoginDate: Date;\r\n    lastLoginIp: string;\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class UserFilter {\r\n\r\n    userId: number;\r\n    userName: string;\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    isActive: boolean;\r\n    lastLoginDate: Date;\r\n    lastLoginDate2: Date;\r\n    lastLoginIp: string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"userId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.USERID' | translate}}   </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UserId\">\r\n                            {{row.userId}}\r\n                           \r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"userName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'USER.USERNAME' | translate}}</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UserName\"> {{row.userName}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"email\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.EMAIL' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Email\"> {{row.email}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"password\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.PASSWORD' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Password\"> {{row.password}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"firstName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.FIRSTNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FirstName\"> {{row.firstName}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"lastName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.LASTNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Last Name\"> {{row.lastName}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"isActive\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.ISACTIVE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IsActive\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.isActive\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'USER.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"updatedDate\"><small> {{row.updatedDate | date:'yyyy-MM-dd HH:mm'}} </small> </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'USER.USERNAME'| translate}}</mat-label>\r\n            <input matInput [(ngModel)]=\"filter.userName\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'USER.EMAIL'| translate}}</mat-label>\r\n            <input matInput [(ngModel)]=\"filter.email\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'USER.FIRSTNAME'| translate}}</mat-label>\r\n            <input matInput [(ngModel)]=\"filter.firstName\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'USER.LASTNAME'| translate}}</mat-label>\r\n            <input matInput [(ngModel)]=\"filter.lastName\">\r\n        </mat-form-field>\r\n\r\n        <mat-slide-toggle [(ngModel)]=\"filter.isActive\">{{'USER.ISACTIVE'| translate}}</mat-slide-toggle>\r\n\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'USER.LASTLOGINDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"lastLoginDatepicker\" [(ngModel)]=\"filter.lastLoginDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"lastLoginDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #lastLoginDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'USER.LASTLOGINDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"lastLoginDate2picker\" [(ngModel)]=\"filter.lastLoginDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"lastLoginDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #lastLoginDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'USER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'USER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserData, UserFilter } from \"./user.component\";\r\nimport { UserRoleInfo } from \"./user-dialog.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n    endPointBase = environment.apiURL + \"/User/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: UserData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveUser\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    saveWithRoles(data: UserData, roleData: UserRoleInfo[]): Observable<object> {\r\n\r\n        let userWithRole = {\r\n            user: data,\r\n            roleInfos: roleData,\r\n           \r\n        }\r\n        return this.httpClient.post(this.endPointBase + \"SaveUserWithRoles\" + \"?session=\" + this.authService.getToken(), userWithRole);\r\n    }\r\n\r\n    delete(data: UserData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteUser?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: UserFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetUserList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n    getRoleInfo(id: number): Observable<any>{\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetRoleInfo\" + \"?session=\" + this.authService.getToken(), { userId: id });\r\n\r\n    }\r\n\r\n    getUserListForCombo(search: string, value: number) {\r\n        return this.httpClient.post(this.endPointBase + \"GetListForCombo\" + \"?session=\" + this.authService.getToken(), { userName: search , userId : value });\r\n    }\r\n\r\n    getData2() {\r\n        return this.httpClient.get<any>('https://api.icndb.com/jokes/random/5');\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\nimport { UserComponent } from './User/user.component';\r\n\r\nimport { ComfirmDialogComponent } from \"../../shared/components/comfirm/comfirm.component\";\r\nimport { SystemRoutes } from './system.routing';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { UserDialogComponent } from './User/user-dialog.component';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\n\r\nimport { SessionService } from \"../../shared/session.service\";\r\nimport { RoleDialogComponent } from './Role/role-dialog.component';\r\nimport { RoleComponent } from './Role/role.component';\r\nimport { AuthComponent } from './Auth/auth.component';\r\nimport { AuthDialogComponent } from './Auth/auth-dialog.component';\r\nimport { UserRoleComponent } from './UserRole/userrole.component';\r\nimport { UserRoleDialogComponent } from './UserRole/userrole-dialog.component';\r\nimport { RoleAuthComponent } from './RoleAuth/roleauth.component';\r\nimport { RoleAuthDialogComponent } from './RoleAuth/roleauth-dialog.component';\r\nimport { MenuComponent } from './Menu/menu.component';\r\nimport { MenuDialogComponent } from './Menu/menu-dialog.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { EmailComponent } from './Email/email.component';\r\nimport { EmailDialogComponent } from './Email/email-dialog.component';\r\nimport { EmailConfigComponent } from './EmailConfig/emailconfig.component';\r\nimport { EmailConfigDialogComponent } from './EmailConfig/emailconfig-dialog.component';\r\nimport { LogComponent } from './Log/log.component';\r\nimport { LogDialogComponent } from './Log/log-dialog.component';\r\n\r\nimport { EmailAttachmentComponent } from './EmailAttachment/emailattachment.component';\r\nimport { EmailAttachmentDialogComponent } from './EmailAttachment/emailattachment-dialog.component';\r\nimport { ParameterComponent } from './Parameter/parameter.component';\r\nimport { ParameterDialogComponent } from './Parameter/parameter-dialog.component';\r\nimport { CounterComponent } from './Counter/counter.component';\r\nimport { CounterDialogComponent } from './Counter/counter-dialog.component';\r\n\r\n\r\n//@Component_Imports\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatSidenavModule,\r\n        MatGridListModule,\r\n        MatButtonModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSlideToggleModule,\r\n        MatSelectModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatDialogModule,\r\n        FlexLayoutModule,\r\n        HttpClientModule,\r\n        CommonModule,\r\n        MatInputModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        NgxDatatableModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        MatTabsModule,\r\n        MatListModule,\r\n        MatCardModule,\r\n        MatAutocompleteModule,\r\n        RouterModule.forChild(SystemRoutes)\r\n    ],\r\n\r\n    declarations: [\r\n        UserComponent,\r\n        UserDialogComponent,\r\n        RoleComponent,\r\n        RoleDialogComponent,\r\n        ComfirmDialogComponent,\r\n        AuthComponent,\r\n        AuthDialogComponent,\r\n        RoleAuthComponent,\r\n        RoleAuthDialogComponent,\r\n        UserRoleComponent,\r\n        UserRoleDialogComponent,\r\n        MenuComponent,\r\n        MenuDialogComponent,\r\n        EmailComponent,\r\n        EmailDialogComponent,\r\n        EmailConfigComponent,\r\n        EmailConfigDialogComponent,\r\n        LogComponent,\r\n        LogDialogComponent,\r\n        EmailAttachmentComponent,\r\n        EmailAttachmentDialogComponent,\r\n        ParameterComponent,\r\n        ParameterDialogComponent,\r\n        CounterDialogComponent,\r\n        CounterComponent,\r\n        //FastAutoCompleteComponent\r\n        //@Component_Declarations\r\n    ],\r\n    providers: [\r\n        SessionService\r\n    ]\r\n})\r\nexport class SystemModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { UserComponent } from './User/user.component';\r\nimport { RoleComponent } from './Role/role.component';\r\nimport { AuthComponent } from './Auth/auth.component';\r\nimport { UserRoleComponent } from './UserRole/userrole.component';\r\nimport { RoleAuthComponent } from './RoleAuth/roleauth.component';\r\nimport { MenuComponent } from './Menu/menu.component';\r\nimport { EmailComponent } from './Email/email.component';\r\nimport { EmailConfigComponent } from './EmailConfig/emailconfig.component';\r\nimport { LogComponent } from './Log/log.component';\r\nimport { EmailAttachmentComponent } from './EmailAttachment/emailattachment.component';\r\nimport { ParameterComponent } from './Parameter/parameter.component';\r\nimport { CounterComponent } from './Counter/counter.component';\r\n//@Component_Imports\r\n\r\n\r\nexport const SystemRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'user',\r\n                component: UserComponent,\r\n                data: { title: 'USER.USERMENU', breadcrumb: 'USER.USERMENU' }\r\n            }\r\n            , {\r\n                path: 'role',\r\n                component: RoleComponent,\r\n                data: { title: 'ROLE.ROLEMENU', breadcrumb: 'ROLE.ROLEMENU' }\r\n            },\r\n             {\r\n                path: 'auth',\r\n                component: AuthComponent,\r\n                 data: { title: 'AUTH.AUTHMENU', breadcrumb: 'AUTH.AUTHMENU' }\r\n            }\r\n            , {\r\n                path: 'userrole',\r\n                component: UserRoleComponent,\r\n                data: { title: 'USERROLE.USERROLEMENU', breadcrumb: 'USERROLE.USERROLEMENU' }\r\n            }\r\n            , {\r\n                path: 'roleauth',\r\n                component: RoleAuthComponent,\r\n                data: { title: 'ROLEAUTH.ROLEAUTHMENU', breadcrumb: 'ROLEAUTH.ROLEAUTHMENU' }\r\n            }\r\n            , {\r\n                path: 'menu',\r\n                component: MenuComponent,\r\n                data: { title: 'MENU.MENUMENU', breadcrumb: 'MENU.MENUMENU' }\r\n            },\r\n            {\r\n                path: 'email',\r\n                component: EmailComponent,\r\n                data: { title: 'EMAIL.EMAILMENU', breadcrumb: 'EMAIL.EMAILMENU' }\r\n            },\r\n            {\r\n                path: 'emailconfig',\r\n                component: EmailConfigComponent,\r\n                data: { title: 'EMAILCONFIG.EMAILCONFIGMENU', breadcrumb: 'EMAILCONFIG.EMAILCONFIGMENU' }\r\n            },\r\n            {\r\n                path: 'log',\r\n                component: LogComponent,\r\n                data: { title: 'LOG.LOGMENU', breadcrumb: 'LOG.LOGMENU' }\r\n            }\r\n            ,\r\n            {\r\n                path: 'emailattachment',\r\n                component: EmailAttachmentComponent,\r\n                data: { title: 'EMAILATTACHMENT.EMAILATTACHMENTMENU', breadcrumb: 'EMAILATTACHMENT.EMAILATTACHMENTMENU' }\r\n            },\r\n            {\r\n                path: 'parameter',\r\n                component: ParameterComponent,\r\n                data: { title: 'PARAMETER.PARAMETERMENU', breadcrumb: 'PARAMETER.PARAMETERMENU' }\r\n            },\r\n            {\r\n                path: 'counter',\r\n                component: CounterComponent,\r\n                data: { title: 'COUNTER.COUNTERMENU', breadcrumb: 'COUNTER.COUNTERMENU' }\r\n            }\r\n            //@Component_Routes\r\n        ]\r\n    }\r\n];\r\n"],"sourceRoot":"webpack:///"}