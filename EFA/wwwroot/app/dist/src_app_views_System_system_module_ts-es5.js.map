{"version":3,"sources":["webpack:///src/app/views/System/Auth/auth-dialog.component.html","webpack:///src/app/views/System/Auth/auth-dialog.component.ts","webpack:///src/app/views/System/Auth/auth.component.html","webpack:///src/app/views/System/Auth/auth.component.ts","webpack:///src/app/views/System/Auth/auth.service.ts","webpack:///src/app/views/System/Counter/counter-dialog.component.html","webpack:///src/app/views/System/Counter/counter-dialog.component.ts","webpack:///src/app/views/System/Counter/counter.component.html","webpack:///src/app/views/System/Counter/counter.component.ts","webpack:///src/app/views/System/Counter/counter.service.ts","webpack:///src/app/views/System/EmailAttachment/emailattachment-dialog.component.html","webpack:///src/app/views/System/EmailAttachment/emailattachment-dialog.component.ts","webpack:///src/app/views/System/EmailAttachment/emailattachment.component.html","webpack:///src/app/views/System/EmailAttachment/emailattachment.component.ts","webpack:///src/app/views/System/EmailAttachment/emailattachment.service.ts","webpack:///src/app/views/System/EmailConfig/emailconfig-dialog.component.html","webpack:///src/app/views/System/EmailConfig/emailconfig-dialog.component.ts","webpack:///src/app/views/System/EmailConfig/emailconfig.component.html","webpack:///src/app/views/System/EmailConfig/emailconfig.component.ts","webpack:///src/app/views/System/EmailConfig/emailconfig.service.ts","webpack:///src/app/views/System/Email/email-dialog.component.html","webpack:///src/app/views/System/Email/email-dialog.component.ts","webpack:///src/app/views/System/Email/email.component.html","webpack:///src/app/views/System/Email/email.component.ts","webpack:///src/app/views/System/Email/email.service.ts","webpack:///src/app/views/System/Log/log-dialog.component.html","webpack:///src/app/views/System/Log/log-dialog.component.ts","webpack:///src/app/views/System/Log/log.component.html","webpack:///src/app/views/System/Log/log.component.ts","webpack:///src/app/views/System/Log/log.service.ts","webpack:///src/app/views/System/Menu/menu-dialog.component.html","webpack:///src/app/views/System/Menu/menu-dialog.component.ts","webpack:///src/app/views/System/Menu/menu.component.html","webpack:///src/app/views/System/Menu/menu.component.ts","webpack:///src/app/views/System/Menu/menu.service.ts","webpack:///src/app/views/System/Parameter/parameter-dialog.component.html","webpack:///src/app/views/System/Parameter/parameter-dialog.component.ts","webpack:///src/app/views/System/Parameter/parameter.component.html","webpack:///src/app/views/System/Parameter/parameter.component.ts","webpack:///src/app/views/System/Parameter/parameter.service.ts","webpack:///src/app/views/System/RoleAuth/roleauth-dialog.component.html","webpack:///src/app/views/System/RoleAuth/roleauth-dialog.component.ts","webpack:///src/app/views/System/RoleAuth/roleauth.component.html","webpack:///src/app/views/System/RoleAuth/roleauth.component.ts","webpack:///src/app/views/System/RoleAuth/roleauth.service.ts","webpack:///src/app/views/System/Role/role-dialog.component.html","webpack:///src/app/views/System/Role/role-dialog.component.ts","webpack:///src/app/views/System/Role/role.component.html","webpack:///src/app/views/System/Role/role.component.ts","webpack:///src/app/views/System/Role/role.service.ts","webpack:///src/app/views/System/UserRole/userrole-dialog.component.html","webpack:///src/app/views/System/UserRole/userrole-dialog.component.ts","webpack:///src/app/views/System/UserRole/userrole.component.html","webpack:///src/app/views/System/UserRole/userrole.component.ts","webpack:///src/app/views/System/UserRole/userrole.service.ts","webpack:///src/app/views/System/User/user-dialog.component.html","webpack:///src/app/views/System/User/user-dialog.component.ts","webpack:///src/app/views/System/User/user.component.html","webpack:///src/app/views/System/User/user.component.ts","webpack:///src/app/views/System/User/user.service.ts","webpack:///src/app/views/System/system.module.ts","webpack:///src/app/views/System/system.routing.ts"],"names":["AuthDialogComponent","dialogRef","data","authService","translate","navigationService","snackbar","row","isNew","close","operation","save","subscribe","response","sessionControl","isSuccess","open","instant","message","horizontalPosition","verticalPosition","duration","errorMessage","error","MAT_DIALOG_DATA","AuthComponent","dialog","showSpinner","displayedColumns","filter","AuthFilter","queryInfo","QueryInfo","pager","Pager","currentPage","pageSize","totalCount","getDataConf","x","showColumn","map","c","prop","getData","$event","orderby","active","direction","event","pageIndex","isExport","columnInfo","localText","window","environment","key","dataSource","MatTableDataSource","emptyData","AuthData","authId","authCode","authDesc","authType","createdDate","Date","createdUser","updatedDate","updatedUser","openDialog","width","hasBackdrop","disableClose","afterClosed","deleteRow","ComfirmDialogComponent","comfirm","newItemDialog","downloadData","sortData","onPaginateChange","filterData","clearFilter","AuthService","httpClient","endPointBase","post","getToken","columnInfos","CounterDialogComponent","counterService","CounterComponent","CounterFilter","CounterData","counterId","counterName","currentValue","prefix","addYear","paddingCount","CounterService","EmailAttachmentDialogComponent","emailAttachmentService","EmailAttachmentComponent","EmailAttachmentFilter","EmailAttachmentData","emailAttachmentId","emailId","name","filePath","EmailAttachmentService","EmailConfigDialogComponent","emailConfigService","EmailConfigComponent","EmailConfigFilter","EmailConfigData","emailConfigId","configName","host","port","enableSsl","userName","password","isActive","EmailConfigService","EmailDialogComponent","emailService","EmailComponent","EmailFilter","EmailData","emailFrom","emailTo","emailToCc","emailToBcc","subject","body","isHtml","isSend","sendDate","EmailService","LogDialogComponent","logService","LogComponent","LogFilter","LogData","logId","logType","source","freeText1","freeText2","freeText3","LogService","MenuDialogComponent","menuService","MenuComponent","MenuFilter","MenuData","menuId","menuIcon","state","MenuService","ParameterDialogComponent","parameterService","ParameterComponent","ParameterFilter","ParameterData","paramId","paramType","paramCode","paramDesc","parentId","ParameterService","RoleAuthDialogComponent","roleAuthService","RoleAuthComponent","RoleAuthFilter","console","log","RoleAuthData","roleAuthId","roleId","RoleAuthService","RoleDialogComponent","roleService","isDataLoaded","getRoleAuths","saveWithAuths","roleAuthInfos","getAuthInfo","filterAuth","trim","i","includes","isRoleAuth","RoleAuthInfo","RoleComponent","RoleFilter","RoleData","roleName","roleDesc","RoleService","authData","roleWithAuth","role","authInfos","id","UserRoleDialogComponent","userRoleService","UserRoleComponent","UserRoleFilter","UserRoleData","userRoleId","userId","UserRoleService","UserDialogComponent","userService","filterRole","getUserRoles","saveWithRoles","userRoleInfos","getRoleInfo","isUserRole","UserRoleInfo","UserComponent","UserFilter","UserData","email","firstName","lastName","lastLoginDate","lastLoginIp","createdUserText","updatedUserText","field","UserService","roleData","userWithRole","user","roleInfos","search","value","get","SystemModule","SessionService","MatSidenavModule","MatGridListModule","MatButtonModule","MatDatepickerModule","MatNativeDateModule","MatSlideToggleModule","MatSelectModule","MatIconModule","FormsModule","ReactiveFormsModule","MatDialogModule","FlexLayoutModule","HttpClientModule","CommonModule","MatInputModule","MatPaginatorModule","MatSortModule","MatTableModule","NgxDatatableModule","MatProgressSpinnerModule","TranslateModule","MatTabsModule","MatListModule","MatCardModule","MatAutocompleteModule","RouterModule","SystemRoutes","path","children","component","title","breadcrumb"],"mappings":"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","file":"src_app_views_System_system_module_ts-es5.js","sourcesContent":["<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'AUTH.AUTH' | translate}}  - {{row.authId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'AUTH.AUTH' | translate}} - {{row.authId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'AUTH.AUTHCODE' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.authCode\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'AUTH.AUTHDESC' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.authDesc\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'AUTH.AUTHTYPE' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.authType\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { AuthData } from \"./auth.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"auth-dialog\",\r\n    templateUrl: \"./auth-dialog.component.html\"\r\n})\r\nexport class AuthDialogComponent {\r\n\r\n    row: AuthData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<AuthDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private authService: AuthService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.authService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"authId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.AUTHID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"AuthId\"> {{row.authId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"authCode\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.AUTHCODE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"AuthCode\"> {{row.authCode}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"authDesc\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.AUTHDESC' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"AuthDesc\"> {{row.authDesc}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"authType\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.AUTHTYPE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"AuthType\"> {{row.authType}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedDate\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.UPDATEDDATE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedUser\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'AUTH.UPDATEDUSER' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \r\n</ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'AUTH.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'AUTH.AUTHID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.authId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'AUTH.AUTHCODE'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.authCode\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'AUTH.AUTHDESC'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.authDesc\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'AUTH.AUTHTYPE'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.authType\">\r\n</mat-form-field>\r\n<div>\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'AUTH.CREATEDDATE'| translate}}</mat-label> \r\n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDatepicker></mat-datepicker>\r\n   </mat-form-field>\r\n   &nbsp;\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'AUTH.CREATEDDATE'| translate}}</mat-label>\r\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDate2picker></mat-datepicker>\r\n   </mat-form-field>\r\n</div>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'AUTH.CREATEDUSER'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { AuthDialogComponent } from './auth-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'auth-table',\r\n    templateUrl: './auth.component.html',\r\n    styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: AuthFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private authService: AuthService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new AuthFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new AuthFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('AUTH.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.authService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new AuthData();\r\n\r\n        emptyData.authId = 0;\r\n        emptyData.authCode = '';\r\n        emptyData.authDesc = '';\r\n        emptyData.authType = 0;\r\n        emptyData.createdDate = new Date();\r\n        emptyData.createdUser = 0;\r\n        emptyData.updatedDate = new Date();\r\n        emptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: AuthData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: AuthData, isNew: boolean) {\r\n\r\n        this.dialog.open(AuthDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: AuthData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.authService.delete(deleteRow).subscribe((response: any) => {\r\n                        this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(response.error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'authId',\r\n                translate: 'AUTHID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'authCode',\r\n                translate: 'AUTHCODE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'authDesc',\r\n                translate: 'AUTHDESC',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'authType',\r\n                translate: 'AUTHTYPE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class AuthData {\r\n\r\n    authId: number;\r\n    authCode: string;\r\n    authDesc: string;\r\n    authType: number;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class AuthFilter {\r\n\r\n    authId: number;\r\n    authCode: string;\r\n    authDesc: string;\r\n    authType: number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthData, AuthFilter } from \"./auth.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n    endPointBase = environment.apiURL + \"/Auth/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: AuthData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveAuth\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: AuthData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteAuth?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: AuthFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetAuthList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'COUNTER.COUNTER' | translate}}  - {{row.counterId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'COUNTER.COUNTER' | translate}} - {{row.counterId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'COUNTER.COUNTERNAME' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.counterName\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'COUNTER.CURRENTVALUE' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.currentValue\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'COUNTER.PREFIX' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.prefix\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n   <mat-slide-toggle [(ngModel)]=\"row.addYear\"> </mat-slide-toggle>\r\n   <span style=\"margin-left:10px;\">{{ 'COUNTER.ADDYEAR' | translate }}</span>\r\n   <textarea matInput style=\"display:none;\"></textarea>\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'COUNTER.PADDINGCOUNT' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.paddingCount\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { CounterData } from \"./counter.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { CounterService } from './counter.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"counter-dialog\",\r\n    templateUrl: \"./counter-dialog.component.html\"\r\n})\r\nexport class CounterDialogComponent {\r\n\r\n    row: CounterData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<CounterDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private counterService: CounterService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.counterService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"counterId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.COUNTERID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"CounterId\"> {{row.counterId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"counterName\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.COUNTERNAME' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"CounterName\"> {{row.counterName}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"currentValue\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.CURRENTVALUE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"CurrentValue\"> {{row.currentValue}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"prefix\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.PREFIX' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"Prefix\"> {{row.prefix}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"addYear\">\r\n   <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.ADDYEAR' | translate}}  </mat-header-cell>\r\n   <mat-cell *matCellDef=\"let row\" data-label=\"AddYear\">\r\n       <mat-slide-toggle [(ngModel)]=\"row.addYear\" disabled> </mat-slide-toggle>\r\n   </mat-cell>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"paddingCount\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.PADDINGCOUNT' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"PaddingCount\"> {{row.paddingCount}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedDate\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.UPDATEDDATE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedUser\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'COUNTER.UPDATEDUSER' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \r\n</ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'COUNTER.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.COUNTERID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.counterId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.COUNTERNAME'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.counterName\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.CURRENTVALUE'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.currentValue\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.PREFIX'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.prefix\">\r\n</mat-form-field>\r\n<mat-slide-toggle [(ngModel)]=\"filter.addYear\">{{'COUNTER.ADDYEAR'| translate}}</mat-slide-toggle>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.PADDINGCOUNT'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.paddingCount\">\r\n</mat-form-field>\r\n<div>\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'COUNTER.CREATEDDATE'| translate}}</mat-label> \r\n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDatepicker></mat-datepicker>\r\n   </mat-form-field>\r\n   &nbsp;\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'COUNTER.CREATEDDATE'| translate}}</mat-label>\r\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDate2picker></mat-datepicker>\r\n   </mat-form-field>\r\n</div>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'COUNTER.CREATEDUSER'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { CounterService } from './counter.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { CounterDialogComponent } from './counter-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'counter-table',\r\n    templateUrl: './counter.component.html',\r\n    styleUrls: ['./counter.component.scss']\r\n})\r\nexport class CounterComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: CounterFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private counterService:  CounterService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  CounterFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  CounterFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('COUNTER.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.counterService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new CounterData();\r\n\r\n        emptyData.counterId = 0;\r\nemptyData.counterName = '';\r\nemptyData.currentValue = 0;\r\nemptyData.prefix = '';\r\nemptyData.addYear = false;\r\nemptyData.paddingCount = 0;\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: CounterData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: CounterData, isNew: boolean) {\r\n\r\n        this.dialog.open(CounterDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: CounterData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.counterService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    response.errorMessage, {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                error, {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'counterId',\r\n   translate: 'COUNTERID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'counterName',\r\n   translate: 'COUNTERNAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'currentValue',\r\n   translate: 'CURRENTVALUE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'prefix',\r\n   translate: 'PREFIX',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'addYear',\r\n   translate: 'ADDYEAR',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'paddingCount',\r\n   translate: 'PADDINGCOUNT',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class CounterData {\r\n\r\n    counterId : number;\r\ncounterName : string;\r\ncurrentValue : number;\r\nprefix : string;\r\naddYear : boolean;\r\npaddingCount : number;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class CounterFilter {\r\n\r\n    counterId : number;\r\ncounterName : string;\r\ncurrentValue : number;\r\nprefix : string;\r\naddYear : boolean;\r\npaddingCount : number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CounterData, CounterFilter } from \"./counter.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CounterService {\r\n\r\n    endPointBase = environment.apiURL + \"/Counter/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: CounterData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveCounter\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: CounterData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteCounter?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: CounterFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetCounterList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'EMAILATTACHMENT.EMAILATTACHMENT' | translate}}  - {{row.emailAttachmentId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'EMAILATTACHMENT.EMAILATTACHMENT' | translate}} - {{row.emailAttachmentId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAILATTACHMENT.EMAILID' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.emailId\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAILATTACHMENT.NAME' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.name\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAILATTACHMENT.FILEPATH' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.filePath\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { EmailAttachmentData } from \"./emailattachment.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { EmailAttachmentService } from './emailattachment.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"emailattachment-dialog\",\r\n    templateUrl: \"./emailattachment-dialog.component.html\"\r\n})\r\nexport class EmailAttachmentDialogComponent {\r\n\r\n    row: EmailAttachmentData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<EmailAttachmentDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private emailAttachmentService: EmailAttachmentService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.emailAttachmentService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailAttachmentId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.EMAILATTACHMENTID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"EmailAttachmentId\"> {{row.emailAttachmentId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"emailId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.EMAILID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"EmailId\"> {{row.emailId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"name\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.NAME' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.name}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"filePath\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.FILEPATH' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"FilePath\"> {{row.filePath}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedDate\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.UPDATEDDATE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedUser\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILATTACHMENT.UPDATEDUSER' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \r\n</ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'EMAILATTACHMENT.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'EMAILATTACHMENT.EMAILATTACHMENTID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.emailAttachmentId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'EMAILATTACHMENT.EMAILID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.emailId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'EMAILATTACHMENT.NAME'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.name\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'EMAILATTACHMENT.FILEPATH'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.filePath\">\r\n</mat-form-field>\r\n<div>\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'EMAILATTACHMENT.CREATEDDATE'| translate}}</mat-label> \r\n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDatepicker></mat-datepicker>\r\n   </mat-form-field>\r\n   &nbsp;\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'EMAILATTACHMENT.CREATEDDATE'| translate}}</mat-label>\r\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDate2picker></mat-datepicker>\r\n   </mat-form-field>\r\n</div>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'EMAILATTACHMENT.CREATEDUSER'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { EmailAttachmentService } from './emailattachment.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { EmailAttachmentDialogComponent } from './emailattachment-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'emailattachment-table',\r\n    templateUrl: './emailattachment.component.html',\r\n    styleUrls: ['./emailattachment.component.scss']\r\n})\r\nexport class EmailAttachmentComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: EmailAttachmentFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private emailAttachmentService:  EmailAttachmentService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  EmailAttachmentFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  EmailAttachmentFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('EMAILATTACHMENT.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.emailAttachmentService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new EmailAttachmentData();\r\n\r\n        emptyData.emailAttachmentId = 0;\r\nemptyData.emailId = 0;\r\nemptyData.name = '';\r\nemptyData.filePath = '';\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: EmailAttachmentData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: EmailAttachmentData, isNew: boolean) {\r\n\r\n        this.dialog.open(EmailAttachmentDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: EmailAttachmentData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.emailAttachmentService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'emailAttachmentId',\r\n   translate: 'EMAILATTACHMENTID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'emailId',\r\n   translate: 'EMAILID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'name',\r\n   translate: 'NAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'filePath',\r\n   translate: 'FILEPATH',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class EmailAttachmentData {\r\n\r\n    emailAttachmentId : number;\r\nemailId : number;\r\nname : string;\r\nfilePath : string;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class EmailAttachmentFilter {\r\n\r\n    emailAttachmentId : number;\r\nemailId : number;\r\nname : string;\r\nfilePath : string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { EmailAttachmentData, EmailAttachmentFilter } from \"./emailattachment.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EmailAttachmentService {\r\n\r\n    endPointBase = environment.apiURL + \"/EmailAttachment/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: EmailAttachmentData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveEmailAttachment\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: EmailAttachmentData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteEmailAttachment?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: EmailAttachmentFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetEmailAttachmentList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'EMAILCONFIG.EMAILCONFIG' | translate}}  - {{row.emailConfigId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'EMAILCONFIG.EMAILCONFIG' | translate}} - {{row.emailConfigId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'EMAILCONFIG.CONFIGNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.configName\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'EMAILCONFIG.HOST' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.host\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'EMAILCONFIG.PORT' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.port\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-slide-toggle [(ngModel)]=\"row.enableSsl\"> </mat-slide-toggle>\r\n        <span style=\"margin-left:10px;\">{{ 'EMAILCONFIG.ENABLESSL' | translate }}</span>\r\n        <textarea matInput style=\"display:none;\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'EMAILCONFIG.USERNAME' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.userName\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'EMAILCONFIG.PASSWORD' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.password\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-slide-toggle [(ngModel)]=\"row.isActive\"> </mat-slide-toggle>\r\n        <span style=\"margin-left:10px;\">{{ 'EMAILCONFIG.ISACTIVE' | translate }}</span>\r\n        <textarea matInput style=\"display:none;\"></textarea>\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { EmailConfigData } from \"./emailconfig.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { EmailConfigService } from './emailconfig.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"emailconfig-dialog\",\r\n    templateUrl: \"./emailconfig-dialog.component.html\"\r\n})\r\nexport class EmailConfigDialogComponent {\r\n\r\n    row: EmailConfigData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<EmailConfigDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private emailConfigService: EmailConfigService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.emailConfigService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailConfigId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.EMAILCONFIGID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailConfigId\"> {{row.emailConfigId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"configName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.CONFIGNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ConfigName\"> {{row.configName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"host\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.HOST' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Host\"> {{row.host}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"port\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.PORT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Port\"> {{row.port}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"enableSsl\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.ENABLESSL' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EnableSsl\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.enableSsl\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"userName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.USERNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UserName\"> {{row.userName}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"password\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.PASSWORD' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Password\"> {{row.password}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"isActive\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.ISACTIVE' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IsActive\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.isActive\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAILCONFIG.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'EMAILCONFIG.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.EMAILCONFIGID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.emailConfigId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.CONFIGNAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.configName\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.HOST'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.host\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.PORT'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.port\">\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.enableSsl\">{{'EMAILCONFIG.ENABLESSL'| translate}}</mat-slide-toggle>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.USERNAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.userName\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.PASSWORD'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.password\">\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.isActive\">{{'EMAILCONFIG.ISACTIVE'| translate}}</mat-slide-toggle>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAILCONFIG.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAILCONFIG.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAILCONFIG.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { EmailConfigService } from './emailconfig.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { EmailConfigDialogComponent } from './emailconfig-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'emailconfig-table',\r\n    templateUrl: './emailconfig.component.html',\r\n    styleUrls: ['./emailconfig.component.scss']\r\n})\r\nexport class EmailConfigComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: EmailConfigFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private emailConfigService:  EmailConfigService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  EmailConfigFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  EmailConfigFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('EMAILCONFIG.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.emailConfigService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new EmailConfigData();\r\n\r\n        emptyData.emailConfigId = 0;\r\nemptyData.configName = '';\r\nemptyData.host = '';\r\nemptyData.port = '';\r\nemptyData.enableSsl = false;\r\nemptyData.userName = '';\r\nemptyData.password = '';\r\nemptyData.isActive = false;\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: EmailConfigData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: EmailConfigData, isNew: boolean) {\r\n\r\n        this.dialog.open(EmailConfigDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: EmailConfigData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.emailConfigService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'emailConfigId',\r\n   translate: 'EMAILCONFIGID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'configName',\r\n   translate: 'CONFIGNAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'host',\r\n   translate: 'HOST',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'port',\r\n   translate: 'PORT',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'enableSsl',\r\n   translate: 'ENABLESSL',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'userName',\r\n   translate: 'USERNAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'password',\r\n   translate: 'PASSWORD',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'isActive',\r\n   translate: 'ISACTIVE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class EmailConfigData {\r\n\r\n    emailConfigId : number;\r\nconfigName : string;\r\nhost : string;\r\nport : string;\r\nenableSsl : boolean;\r\nuserName : string;\r\npassword : string;\r\nisActive : boolean;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class EmailConfigFilter {\r\n\r\n    emailConfigId : number;\r\nconfigName : string;\r\nhost : string;\r\nport : string;\r\nenableSsl : boolean;\r\nuserName : string;\r\npassword : string;\r\nisActive : boolean;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { EmailConfigData, EmailConfigFilter } from \"./emailconfig.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EmailConfigService {\r\n\r\n    endPointBase = environment.apiURL + \"/EmailConfig/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: EmailConfigData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveEmailConfig\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: EmailConfigData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteEmailConfig?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: EmailConfigFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetEmailConfigList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'EMAIL.EMAIL' | translate}}  - {{row.emailId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'EMAIL.EMAIL' | translate}} - {{row.emailId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.EMAILFROM' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.emailFrom\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.EMAILTO' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.emailTo\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.EMAILTOCC' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.emailToCc\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.EMAILTOBCC' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.emailToBcc\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.SUBJECT' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.subject\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.BODY' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.body\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n   <mat-slide-toggle [(ngModel)]=\"row.isHtml\"> </mat-slide-toggle>\r\n   <span style=\"margin-left:10px;\">{{ 'EMAIL.ISHTML' | translate }}</span>\r\n   <textarea matInput style=\"display:none;\"></textarea>\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n   <mat-slide-toggle [(ngModel)]=\"row.isSend\"> </mat-slide-toggle>\r\n   <span style=\"margin-left:10px;\">{{ 'EMAIL.ISSEND' | translate }}</span>\r\n   <textarea matInput style=\"display:none;\"></textarea>\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n   <mat-slide-toggle [(ngModel)]=\"row.isSuccess\"> </mat-slide-toggle>\r\n   <span style=\"margin-left:10px;\">{{ 'EMAIL.ISSUCCESS' | translate }}</span>\r\n   <textarea matInput style=\"display:none;\"></textarea>\r\n</mat-form-field>\r\n<mat-form-field  [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'EMAIL.SENDDATE' | translate }}</mat-label>\r\n    <input matInput [matDatepicker]=\"sendDatePicker\" [(ngModel)]=\"row.sendDate\">\r\n     <mat-datepicker-toggle matSuffix [for]=\"sendDatePicker\"></mat-datepicker-toggle>\r\n    <mat-datepicker #sendDatePicker></mat-datepicker>\r\n </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { EmailData } from \"./email.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { EmailService } from './email.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"email-dialog\",\r\n    templateUrl: \"./email-dialog.component.html\"\r\n})\r\nexport class EmailDialogComponent {\r\n\r\n    row: EmailData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<EmailDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private emailService: EmailService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.emailService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.EMAILID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailId\"> {{row.emailId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailFrom\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.EMAILFROM' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailFrom\"> {{row.emailFrom}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailTo\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.EMAILTO' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailTo\"> {{row.emailTo}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailToCc\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.EMAILTOCC' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailToCc\"> {{row.emailToCc}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"emailToBcc\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.EMAILTOBCC' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"EmailToBcc\"> {{row.emailToBcc}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"subject\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.SUBJECT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Subject\"> {{row.subject}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"body\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.BODY' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Body\"> {{row.body | slice:0:50}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"isHtml\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.ISHTML' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IsHtml\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.isHtml\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"isSend\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.ISSEND' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IsSend\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.isSend\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"isSuccess\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.ISSUCCESS' | translate}}  </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IsSuccess\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.isSuccess\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"sendDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.SENDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"SendDate\"> {{row.sendDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'EMAIL.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.EMAILID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.emailId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.EMAILFROM'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.emailFrom\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.EMAILTO'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.emailTo\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.EMAILTOCC'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.emailToCc\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.EMAILTOBCC'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.emailToBcc\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.SUBJECT'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.subject\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.BODY'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.body\">\r\n        </mat-form-field>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.isHtml\">{{'EMAIL.ISHTML'| translate}}</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.isSend\">{{'EMAIL.ISSEND'| translate}}</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"filter.isSuccess\">{{'EMAIL.ISSUCCESS'| translate}}</mat-slide-toggle>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAIL.SENDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"sendDatepicker\" [(ngModel)]=\"filter.sendDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"sendDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #sendDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAIL.SENDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"sendDate2picker\" [(ngModel)]=\"filter.sendDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"sendDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #sendDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAIL.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'EMAIL.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'EMAIL.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { EmailService } from './email.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { EmailDialogComponent } from './email-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'email-table',\r\n    templateUrl: './email.component.html',\r\n    styleUrls: ['./email.component.scss']\r\n})\r\nexport class EmailComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: EmailFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private emailService:  EmailService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  EmailFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  EmailFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('EMAIL.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.emailService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new EmailData();\r\n\r\n        emptyData.emailId = 0;\r\nemptyData.emailFrom = '';\r\nemptyData.emailTo = '';\r\nemptyData.emailToCc = '';\r\nemptyData.emailToBcc = '';\r\nemptyData.subject = '';\r\nemptyData.body = '';\r\nemptyData.isHtml = false;\r\nemptyData.isSend = false;\r\nemptyData.isSuccess = false;\r\nemptyData.sendDate = new Date();\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: EmailData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: EmailData, isNew: boolean) {\r\n\r\n        this.dialog.open(EmailDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: EmailData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.emailService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'emailId',\r\n   translate: 'EMAILID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'emailFrom',\r\n   translate: 'EMAILFROM',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'emailTo',\r\n   translate: 'EMAILTO',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'emailToCc',\r\n   translate: 'EMAILTOCC',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'emailToBcc',\r\n   translate: 'EMAILTOBCC',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'subject',\r\n   translate: 'SUBJECT',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'body',\r\n   translate: 'BODY',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'isHtml',\r\n   translate: 'ISHTML',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'isSend',\r\n   translate: 'ISSEND',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'isSuccess',\r\n   translate: 'ISSUCCESS',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'sendDate',\r\n   translate: 'SENDDATE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class EmailData {\r\n\r\n    emailId : number;\r\nemailFrom : string;\r\nemailTo : string;\r\nemailToCc : string;\r\nemailToBcc : string;\r\nsubject : string;\r\nbody : string;\r\nisHtml : boolean;\r\nisSend : boolean;\r\nisSuccess : boolean;\r\nsendDate : Date;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class EmailFilter {\r\n\r\n    emailId : number;\r\nemailFrom : string;\r\nemailTo : string;\r\nemailToCc : string;\r\nemailToBcc : string;\r\nsubject : string;\r\nbody : string;\r\nisHtml : boolean;\r\nisSend : boolean;\r\nisSuccess : boolean;\r\nsendDate : Date;\r\nsendDate2 : Date\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { EmailData, EmailFilter } from \"./email.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EmailService {\r\n\r\n    endPointBase = environment.apiURL + \"/Email/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: EmailData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveEmail\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: EmailData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteEmail?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: EmailFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetEmailList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'LOG.LOG' | translate}}  - {{row.logId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'LOG.LOG' | translate}} - {{row.logId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.LOGTYPE' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.logType\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.SOURCE' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.source\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.MESSAGE' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.message\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.FREETEXT1' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText1\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.FREETEXT2' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText2\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'LOG.FREETEXT3' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText3\">\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { LogData } from \"./log.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { LogService } from './log.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"log-dialog\",\r\n    templateUrl: \"./log-dialog.component.html\"\r\n})\r\nexport class LogDialogComponent {\r\n\r\n    row: LogData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<LogDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private logService: LogService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.logService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"logId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.LOGID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"LogId\"> {{row.logId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"logType\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.LOGTYPE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"LogType\"> {{row.logType}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"source\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.SOURCE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Source\"> {{row.source}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"message\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.MESSAGE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Message\"> {{row.message | slice:0:50}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText1\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.FREETEXT1' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText1\"> {{row.freeText1}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText2\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.FREETEXT2' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText2\"> {{row.freeText2}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText3\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.FREETEXT3' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText3\"> {{row.freeText3}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'LOG.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'LOG.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.LOGID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.logId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.LOGTYPE'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.logType\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.SOURCE'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.source\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.MESSAGE'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.message\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.FREETEXT1'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText1\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.FREETEXT2'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText2\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.FREETEXT3'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText3\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'LOG.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'LOG.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'LOG.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { LogService } from './log.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { LogDialogComponent } from './log-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'log-table',\r\n    templateUrl: './log.component.html',\r\n    styleUrls: ['./log.component.scss']\r\n})\r\nexport class LogComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: LogFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private logService:  LogService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  LogFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  LogFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('LOG.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.logService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new LogData();\r\n\r\n        emptyData.logId = 0;\r\nemptyData.logType = 0;\r\nemptyData.source = '';\r\nemptyData.message = '';\r\nemptyData.freeText1 = '';\r\nemptyData.freeText2 = '';\r\nemptyData.freeText3 = '';\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: LogData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: LogData, isNew: boolean) {\r\n\r\n        this.dialog.open(LogDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: LogData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.logService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'logId',\r\n   translate: 'LOGID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'logType',\r\n   translate: 'LOGTYPE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'source',\r\n   translate: 'SOURCE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'message',\r\n   translate: 'MESSAGE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText1',\r\n   translate: 'FREETEXT1',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText2',\r\n   translate: 'FREETEXT2',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText3',\r\n   translate: 'FREETEXT3',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class LogData {\r\n\r\n    logId : number;\r\nlogType : number;\r\nsource : string;\r\nmessage : string;\r\nfreeText1 : string;\r\nfreeText2 : string;\r\nfreeText3 : string;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class LogFilter {\r\n\r\n    logId : number;\r\nlogType : number;\r\nsource : string;\r\nmessage : string;\r\nfreeText1 : string;\r\nfreeText2 : string;\r\nfreeText3 : string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LogData, LogFilter } from \"./log.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LogService {\r\n\r\n    endPointBase = environment.apiURL + \"/Log/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: LogData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveLog\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: LogData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteLog?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: LogFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetLogList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'MENU.MENU' | translate}}  - {{row.menuId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'MENU.MENU' | translate}} - {{row.menuId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'MENU.MENUICON' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.menuIcon\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'MENU.NAME' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.name\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'MENU.STATE' | translate }}</mat-label>\r\n   <input type=\"text\" matInput [(ngModel)]=\"row.state\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MenuData } from \"./menu.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MenuService } from './menu.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"menu-dialog\",\r\n    templateUrl: \"./menu-dialog.component.html\"\r\n})\r\nexport class MenuDialogComponent {\r\n\r\n    row: MenuData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<MenuDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private menuService: MenuService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.menuService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"menuId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.MENUID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"MenuId\"> {{row.menuId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"menuIcon\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.MENUICON' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"MenuIcon\"> {{row.menuIcon}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"name\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.NAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.name}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"state\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.STATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"State\"> {{row.state}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'MENU.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'MENU.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'MENU.MENUID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.menuId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'MENU.MENUICON'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.menuIcon\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'MENU.NAME'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.name\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'MENU.STATE'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.state\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'MENU.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'MENU.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'MENU.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { MenuService } from './menu.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MenuDialogComponent } from './menu-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'menu-table',\r\n    templateUrl: './menu.component.html',\r\n    styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: MenuFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private menuService:  MenuService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  MenuFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  MenuFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('MENU.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.menuService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new MenuData();\r\n\r\n        emptyData.menuId = 0;\r\nemptyData.menuIcon = '';\r\nemptyData.name = '';\r\nemptyData.state = '';\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: MenuData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: MenuData, isNew: boolean) {\r\n\r\n        this.dialog.open(MenuDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: MenuData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.menuService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'menuId',\r\n   translate: 'MENUID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'menuIcon',\r\n   translate: 'MENUICON',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'name',\r\n   translate: 'NAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'state',\r\n   translate: 'STATE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class MenuData {\r\n\r\n    menuId : number;\r\nmenuIcon : string;\r\nname : string;\r\nstate : string;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class MenuFilter {\r\n\r\n    menuId : number;\r\nmenuIcon : string;\r\nname : string;\r\nstate : string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { MenuData, MenuFilter } from \"./menu.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n\r\n    endPointBase = environment.apiURL + \"/Menu/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: MenuData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveMenu\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: MenuData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteMenu?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: MenuFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetMenuList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'PARAMETER.PARAMETER' | translate}}  - {{row.paramId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'PARAMETER.PARAMETER' | translate}} - {{row.paramId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.PARAMTYPE' | translate }}</mat-label>\r\n        <!--<input type=\"number\" matInput [(ngModel)]=\"row.paramType\">-->\r\n        <mat-select matInput [(ngModel)]=\"row.paramType\">\r\n            <mat-option *ngFor=\"let paramType of [1,2,3,4,5,6,7,8,9,10]\" [value]=\"paramType\">\r\n                {{'PARAMETER.PARAMETERTYPE_' + paramType | translate}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.PARAMCODE' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.paramCode\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.PARAMDESC' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.paramDesc\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.PARENTID' | translate }}</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"row.parentId\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.FREETEXT1' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText1\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.FREETEXT2' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText2\">\r\n    </mat-form-field>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n        <mat-label>{{ 'PARAMETER.FREETEXT3' | translate }}</mat-label>\r\n        <input type=\"text\" matInput [(ngModel)]=\"row.freeText3\">\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { ParameterData } from \"./parameter.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ParameterService } from './parameter.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"parameter-dialog\",\r\n    templateUrl: \"./parameter-dialog.component.html\"\r\n})\r\nexport class ParameterDialogComponent {\r\n\r\n    row: ParameterData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<ParameterDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private parameterService: ParameterService,\r\n        private translate : TranslateService,\r\n        private navigationService : NavigationService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.parameterService.save(this.row).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"paramId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.PARAMID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ParamId\"> {{row.paramId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"paramType\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.PARAMTYPE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ParamType\"> {{'PARAMETER.PARAMETERTYPE_'+row.paramType | translate}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"paramCode\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.PARAMCODE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ParamCode\"> {{row.paramCode}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"paramDesc\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.PARAMDESC' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ParamDesc\"> {{row.paramDesc}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"parentId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.PARENTID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"ParentId\"> {{row.parentId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText1\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.FREETEXT1' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText1\"> {{row.freeText1}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText2\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.FREETEXT2' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText2\"> {{row.freeText2}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"freeText3\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.FREETEXT3' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FreeText3\"> {{row.freeText3}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'PARAMETER.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'PARAMETER.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.PARAMID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.paramId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.PARAMTYPE'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.paramType\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.PARAMCODE'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.paramCode\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.PARAMDESC'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.paramDesc\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.PARENTID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.parentId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.FREETEXT1'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText1\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.FREETEXT2'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText2\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.FREETEXT3'| translate}}</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"filter.freeText3\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'PARAMETER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'PARAMETER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'PARAMETER.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { ParameterService } from './parameter.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { ParameterDialogComponent } from './parameter-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'parameter-table',\r\n    templateUrl: './parameter.component.html',\r\n    styleUrls: ['./parameter.component.scss']\r\n})\r\nexport class ParameterComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: ParameterFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private parameterService:  ParameterService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  ParameterFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  ParameterFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('PARAMETER.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.parameterService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                 this.navigationService.sessionControl(response);\r\n                this.showSpinner = false;\r\n                if (response.isSuccess) {\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n                }\r\n                 else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new ParameterData();\r\n\r\n        emptyData.paramId = 0;\r\nemptyData.paramType = 0;\r\nemptyData.paramCode = '';\r\nemptyData.paramDesc = '';\r\nemptyData.parentId = 0;\r\nemptyData.freeText1 = '';\r\nemptyData.freeText2 = '';\r\nemptyData.freeText3 = '';\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: ParameterData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: ParameterData, isNew: boolean) {\r\n\r\n        this.dialog.open(ParameterDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: ParameterData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.parameterService.delete(deleteRow).subscribe((response: any) => {\r\n                         this.navigationService.sessionControl(response);\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'paramId',\r\n   translate: 'PARAMID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'paramType',\r\n   translate: 'PARAMTYPE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'paramCode',\r\n   translate: 'PARAMCODE',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'paramDesc',\r\n   translate: 'PARAMDESC',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'parentId',\r\n   translate: 'PARENTID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText1',\r\n   translate: 'FREETEXT1',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText2',\r\n   translate: 'FREETEXT2',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'freeText3',\r\n   translate: 'FREETEXT3',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class ParameterData {\r\n\r\n    paramId : number;\r\nparamType : number;\r\nparamCode : string;\r\nparamDesc : string;\r\nparentId : number;\r\nfreeText1 : string;\r\nfreeText2 : string;\r\nfreeText3 : string;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class ParameterFilter {\r\n\r\n    paramId : number;\r\nparamType : number;\r\nparamCode : string;\r\nparamDesc : string;\r\nparentId : number;\r\nfreeText1 : string;\r\nfreeText2 : string;\r\nfreeText3 : string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ParameterData, ParameterFilter } from \"./parameter.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ParameterService {\r\n\r\n    endPointBase = environment.apiURL + \"/Parameter/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: ParameterData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveParameter\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: ParameterData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteParameter?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: ParameterFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetParameterList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'ROLEAUTH.ROLEAUTH' | translate}}  - {{row.roleAuthId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'ROLEAUTH.ROLEAUTH' | translate}} - {{row.roleAuthId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'ROLEAUTH.ROLEID' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.roleId\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'ROLEAUTH.AUTHID' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.authId\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { RoleAuthData } from \"./roleauth.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { RoleAuthService } from './roleauth.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: \"roleauth-dialog\",\r\n    templateUrl: \"./roleauth-dialog.component.html\"\r\n})\r\nexport class RoleAuthDialogComponent {\r\n\r\n    row: RoleAuthData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<RoleAuthDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private roleAuthService: RoleAuthService,\r\n        private translate : TranslateService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.roleAuthService.save(this.row).subscribe((response: any) => {\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"roleAuthId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLEAUTH.ROLEAUTHID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"RoleAuthId\"> {{row.roleAuthId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"roleId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLEAUTH.ROLEID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"RoleId\"> {{row.roleId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"authId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLEAUTH.AUTHID' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"AuthId\"> {{row.authId}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLEAUTH.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUser\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLEAUTH.UPDATEDUSER' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'ROLEAUTH.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'ROLEAUTH.ROLEAUTHID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.roleAuthId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'ROLEAUTH.ROLEID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.roleId\">\r\n        </mat-form-field>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'ROLEAUTH.AUTHID'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.authId\">\r\n        </mat-form-field>\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'ROLEAUTH.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'ROLEAUTH.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'ROLEAUTH.CREATEDUSER'| translate}}</mat-label>\r\n            <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { RoleAuthService } from './roleauth.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { RoleAuthDialogComponent } from './roleauth-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'roleauth-table',\r\n    templateUrl: './roleauth.component.html',\r\n    styleUrls: ['./roleauth.component.scss']\r\n})\r\nexport class RoleAuthComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: RoleAuthFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private roleAuthService: RoleAuthService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new RoleAuthFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new RoleAuthFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('ROLEAUTH.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.roleAuthService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                console.log(response);\r\n                this.showSpinner = false;\r\n                if (isExport) {\r\n                    window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                }\r\n                else {\r\n\r\n                    this.queryInfo.pager.totalCount = response.totalCount;\r\n                    this.dataSource = new MatTableDataSource(response.data);\r\n                }\r\n            });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new RoleAuthData();\r\n\r\n        emptyData.roleAuthId = 0;\r\n        emptyData.roleId = 0;\r\n        emptyData.authId = 0;\r\n        emptyData.createdDate = new Date();\r\n        emptyData.createdUser = 0;\r\n        emptyData.updatedDate = new Date();\r\n        emptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: RoleAuthData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: RoleAuthData, isNew: boolean) {\r\n\r\n        this.dialog.open(RoleAuthDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: RoleAuthData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.roleAuthService.delete(deleteRow).subscribe((response: any) => {\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(response.error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                        }\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'roleAuthId',\r\n                translate: 'ROLEAUTHID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'roleId',\r\n                translate: 'ROLEID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'authId',\r\n                translate: 'AUTHID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class RoleAuthData {\r\n\r\n    roleAuthId: number;\r\n    roleId: number;\r\n    authId: number;\r\n\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class RoleAuthFilter {\r\n\r\n    roleAuthId: number;\r\n    roleId: number;\r\n    authId: number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { RoleAuthData, RoleAuthFilter } from \"./roleauth.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RoleAuthService {\r\n\r\n    endPointBase = environment.apiURL + \"/RoleAuth/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: RoleAuthData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveRoleAuth\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: RoleAuthData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteRoleAuth?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: RoleAuthFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetRoleAuthList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'ROLE.ROLE' | translate}}  - {{row.roleId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'ROLE.ROLE' | translate}} - {{row.roleId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"{{'ROLE.ROLETAB' | translate}}\">\r\n            <mat-card>\r\n\r\n                <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n                    <mat-label>{{ 'ROLE.ROLENAME' | translate }}</mat-label>\r\n                    <input type=\"text\" matInput [(ngModel)]=\"row.roleName\">\r\n                </mat-form-field>\r\n                <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n                    <mat-label>{{ 'ROLE.ROLEDESC' | translate }}</mat-label>\r\n                    <input type=\"text\" matInput [(ngModel)]=\"row.roleDesc\">\r\n                </mat-form-field>\r\n\r\n                <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n                        <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n                        <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n                </mat-card>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"{{'ROLE.ROLEAUTHTAB' | translate}}\">\r\n\r\n            <mat-form-field fxFlex appearance=\"legacy\" style=\"margin-bottom:0px; margin-left:20px; margin-top:10px;\">\r\n                <mat-label>{{ 'GENERAL.FILTERLIST' | translate }}</mat-label>\r\n                <input matInput [(ngModel)]=\"this.filterAuth\">\r\n            </mat-form-field>\r\n            <mat-card>\r\n                <mat-selection-list>\r\n                    <mat-list-option *ngFor=\"let row of this.getFilteredAuths()\" (click)=\"onRoleAuthClick($event,row)\" [value]=\"row.authId\" [selected]=\"row.isRoleAuth\">\r\n                        {{row.authCode}}\r\n                    </mat-list-option>\r\n                </mat-selection-list>\r\n            </mat-card>\r\n\r\n        </mat-tab>\r\n\r\n    </mat-tab-group>\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\" *ngIf=\"this.isDataLoaded ==true\" >{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { RoleData } from \"./role.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { RoleService } from './role.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\n\r\n@Component({\r\n    selector: \"role-dialog\",\r\n    templateUrl: \"./role-dialog.component.html\"\r\n})\r\nexport class RoleDialogComponent {\r\n\r\n    row: RoleData;\r\n    isNew: boolean;\r\n    filterAuth: string;\r\n    roleAuthInfos: RoleAuthInfo[];\r\n    isDataLoaded: boolean;\r\n\r\n    constructor(public dialogRef: MatDialogRef<RoleDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private roleService: RoleService,\r\n        private translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n        this.isDataLoaded = false;\r\n\r\n        this.getRoleAuths();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.roleService.saveWithAuths(this.row, this.roleAuthInfos).subscribe((response: any) => {\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                    this.translate.instant(response.message),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                    this.translate.instant(response.errorMessage),\r\n                    {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 1000\r\n                    });\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    getRoleAuths() {\r\n\r\n        this.roleService.getAuthInfo(this.row.roleId).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n            this.isDataLoaded = true;\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.roleAuthInfos = response.data;\r\n\r\n            } else {\r\n\r\n                this.snackbar.open('ERROR', response.message, {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    getFilteredAuths() {\r\n\r\n        if (this.filterAuth && this.filterAuth.trim()) {\r\n\r\n            return this.roleAuthInfos.filter(i => i.authCode.includes(this.filterAuth));\r\n        }\r\n        else {\r\n            return this.roleAuthInfos;\r\n        }\r\n    }\r\n\r\n    onRoleAuthClick(event: any, row) {\r\n        row.isRoleAuth = !row.isRoleAuth;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class RoleAuthInfo {\r\n\r\n    roleId: number;\r\n    authId: string;\r\n    authCode: string;\r\n    authDesc: string;\r\n    isRoleAuth: boolean;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"roleId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLE.ROLEID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"RoleId\"> {{row.roleId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"roleName\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLE.ROLENAME' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"RoleName\"> {{row.roleName}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"roleDesc\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLE.ROLEDESC' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"RoleDesc\"> {{row.roleDesc}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedDate\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLE.UPDATEDDATE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedUser\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'ROLE.UPDATEDUSER' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \r\n</ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'ROLE.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'ROLE.ROLEID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.roleId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'ROLE.ROLENAME'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.roleName\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'ROLE.ROLEDESC'| translate}}</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"filter.roleDesc\">\r\n</mat-form-field>\r\n<div>\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'ROLE.CREATEDDATE'| translate}}</mat-label> \r\n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDatepicker></mat-datepicker>\r\n   </mat-form-field>\r\n   &nbsp;\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'ROLE.CREATEDDATE'| translate}}</mat-label>\r\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDate2picker></mat-datepicker>\r\n   </mat-form-field>\r\n</div>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'ROLE.CREATEDUSER'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { RoleService } from './role.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { RoleDialogComponent } from './role-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'role-table',\r\n    templateUrl: './role.component.html',\r\n    styleUrls: ['./role.component.scss']\r\n})\r\nexport class RoleComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: RoleFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private roleService:  RoleService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  RoleFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  RoleFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('ROLE.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.roleService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                console.log(response);\r\n                this.showSpinner = false;\r\n                if (isExport) {\r\n                    window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                }\r\n                else {\r\n\r\n                    this.queryInfo.pager.totalCount = response.totalCount;\r\n                    this.dataSource = new MatTableDataSource(response.data);\r\n                }\r\n            });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new RoleData();\r\n\r\n        emptyData.roleId = 0;\r\nemptyData.roleName = '';\r\nemptyData.roleDesc = '';\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: RoleData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: RoleData, isNew: boolean) {\r\n\r\n        this.dialog.open(RoleDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: RoleData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.roleService.delete(deleteRow).subscribe((response: any) => {\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'roleId',\r\n   translate: 'ROLEID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'roleName',\r\n   translate: 'ROLENAME',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'roleDesc',\r\n   translate: 'ROLEDESC',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class RoleData {\r\n\r\n    roleId : number;\r\nroleName : string;\r\nroleDesc : string;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class RoleFilter {\r\n\r\n    roleId : number;\r\nroleName : string;\r\nroleDesc : string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { RoleData, RoleFilter } from \"./role.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\nimport { RoleAuthInfo } from \"./role-dialog.component\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n\r\n    endPointBase = environment.apiURL + \"/Role/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: RoleData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveRole\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    saveWithAuths(data: RoleData, authData: RoleAuthInfo[]): Observable<object> {\r\n\r\n        let roleWithAuth = {\r\n            role: data,\r\n            authInfos: authData\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"SaveRoleWithAuths\" + \"?session=\" + this.authService.getToken(), roleWithAuth);\r\n    }\r\n\r\n    delete(data: RoleData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteRole?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: RoleFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetRoleList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n    getAuthInfo(id: number): Observable<any> {\r\n        return this.httpClient.post(this.endPointBase + \"GetAuthInfo\" + \"?session=\" + this.authService.getToken(), { roleId: id });\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">{{'GENERAL.NEWRECORD' | translate}} {{'USERROLE.USERROLE' | translate}}  - {{row.userRoleId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">{{'GENERAL.UPDATERECORD' | translate}} {{'USERROLE.USERROLE' | translate}} - {{row.userRoleId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'USERROLE.USERID' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.userId\"> \r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{ 'USERROLE.ROLEID' | translate }}</mat-label>\r\n   <input type=\"number\" matInput [(ngModel)]=\"row.roleId\"> \r\n</mat-form-field>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n            <input matInput value=\"{{row.updatedDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex appearance=\"legacy\">\r\n            <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n            <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button *ngIf=\"isNew==false\" mat-raised-button color=\"warn\" (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">{{'GENERAL.CANCEL' | translate}}</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { UserRoleData } from \"./userrole.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\nimport { UserRoleService } from './userrole.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n    selector: \"userrole-dialog\",\r\n    templateUrl: \"./userrole-dialog.component.html\"\r\n})\r\nexport class UserRoleDialogComponent {\r\n\r\n    row: UserRoleData;\r\n    isNew: boolean;\r\n    constructor(public dialogRef: MatDialogRef<UserRoleDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private userRoleService: UserRoleService,\r\n        private translate : TranslateService,\r\n        private snackbar: MatSnackBar) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.userRoleService.save(this.row).subscribe((response: any) => {\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                    this.translate.instant(response.message), \r\n                 {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.errorMessage),\r\n                {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"userRoleId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USERROLE.USERROLEID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UserRoleId\"> {{row.userRoleId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"userId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USERROLE.USERID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UserId\"> {{row.userId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"roleId\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USERROLE.ROLEID' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"RoleId\"> {{row.roleId}}</mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedDate\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USERROLE.UPDATEDDATE' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedDate\"> {{row.updatedDate | date:'yyyy-MM-dd HH:mm:ss'}} </mat-cell> \r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"updatedUser\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USERROLE.UPDATEDUSER' | translate}} </mat-header-cell> \r\n    <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUser}}</mat-cell> \r\n</ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef > {{'USERROLE.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'GENERAL.FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'GENERAL.CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'USERROLE.USERROLEID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.userRoleId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'USERROLE.USERID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.userId\">\r\n</mat-form-field>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'USERROLE.ROLEID'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.roleId\">\r\n</mat-form-field>\r\n<div>\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'USERROLE.CREATEDDATE'| translate}}</mat-label> \r\n       <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDatepicker></mat-datepicker>\r\n   </mat-form-field>\r\n   &nbsp;\r\n   <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n       <mat-label>{{'USERROLE.CREATEDDATE'| translate}}</mat-label>\r\n       <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #createdDate2picker></mat-datepicker>\r\n   </mat-form-field>\r\n</div>\r\n<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n    <mat-label>{{'USERROLE.CREATEDUSER'| translate}}</mat-label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"filter.createdUser\">\r\n</mat-form-field>\r\n\r\n       \r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { UserRoleService } from './userrole.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { UserRoleDialogComponent } from './userrole-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'userrole-table',\r\n    templateUrl: './userrole.component.html',\r\n    styleUrls: ['./userrole.component.scss']\r\n})\r\nexport class UserRoleComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: UserRoleFilter;\r\n    pageEvent: PageEvent;\r\n\r\n\r\n    constructor(private userRoleService:  UserRoleService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new  UserRoleFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new  UserRoleFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n      \r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('USERROLE.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.userRoleService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n                console.log(response);\r\n                this.showSpinner = false;\r\n                if (isExport) {\r\n                    window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                }\r\n                else {\r\n\r\n                    this.queryInfo.pager.totalCount = response.totalCount;\r\n                    this.dataSource = new MatTableDataSource(response.data);\r\n                }\r\n            });\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new UserRoleData();\r\n\r\n        emptyData.userRoleId = 0;\r\nemptyData.userId = 0;\r\nemptyData.roleId = 0;\r\nemptyData.createdDate = new Date();\r\nemptyData.createdUser = 0;\r\nemptyData.updatedDate = new Date();\r\nemptyData.updatedUser = 0;\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: UserRoleData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: UserRoleData, isNew: boolean) {\r\n\r\n        this.dialog.open(UserRoleDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose:true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: UserRoleData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.userRoleService.delete(deleteRow).subscribe((response: any) => {\r\n                        if (response.isSuccess) {\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n                            this.getData(false);\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n                                this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                    this.translate.instant(response.error), {\r\n                                    horizontalPosition: 'start',\r\n                                    verticalPosition: 'bottom',\r\n                                    duration: 2000\r\n                                });\r\n                        }\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n           \r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n             { \r\n   prop: 'userRoleId',\r\n   translate: 'USERROLEID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'userId',\r\n   translate: 'USERID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n},\r\n{ \r\n   prop: 'roleId',\r\n   translate: 'ROLEID',\r\n   showColumn: true,\r\n   isExport: true,\r\n   localText: ''\r\n}\r\n             ,\r\n            {\r\n                prop: 'createdDate',\r\n                translate: 'CREATEDDATE',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUser',\r\n                translate: 'CREATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'createdUserText',\r\n                translate: 'CREATEDUSERTEXT',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n             {\r\n                prop: 'updatedUser',\r\n                translate: 'UPDATEDUSER',\r\n                showColumn: false,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class UserRoleData {\r\n\r\n    userRoleId : number;\r\nuserId : number;\r\nroleId : number;\r\n   \r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class UserRoleFilter {\r\n\r\n    userRoleId : number;\r\nuserId : number;\r\nroleId : number;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserRoleData, UserRoleFilter } from \"./userrole.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserRoleService {\r\n\r\n    endPointBase = environment.apiURL + \"/UserRole/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: UserRoleData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveUserRole\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    delete(data: UserRoleData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteUserRole?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: UserRoleFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetUserRoleList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n}\r\n","<div class=\"position-relative\" style=\" padding-bottom: 0px; margin-bottom:20px; border-bottom: 1px solid #d8d8d8\">\r\n    <h2 mat-dialog-title *ngIf=\"isNew==true\">New User - {{row.userId}}</h2>\r\n    <h2 mat-dialog-title *ngIf=\"isNew==false\">Edit User - {{row.userId}}</h2>\r\n    <button mat-icon-button color=\"primary\" (click)=\"close()\" class=\"position-absolute\" style=\"right:0px; top:0px;\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-dialog-content>\r\n    <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"{{'USER.USERTAB' | translate}}\">\r\n            <mat-card>\r\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.USERNAME' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.userName\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.EMAIL' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.email\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n\r\n                <!--<mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput [(ngModel)]=\"row.password\">\r\n                </mat-form-field>-->\r\n\r\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.FIRSTNAME' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.firstName\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.LASTNAME' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.lastName\">\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex=\"50\" appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.LASTLOGINIP' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.lastLoginIp\" readonly>\r\n                    </mat-form-field>\r\n\r\n\r\n\r\n                    <!--<mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.LASTLOGINDATE' | translate }}</mat-label>\r\n                        <input matInput [matDatepicker]=\"lastLoginDatePicker\" [(ngModel)]=\"row.lastLoginDate\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"lastLoginDatePicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #lastLoginDatePicker></mat-datepicker>\r\n                    </mat-form-field>-->\r\n\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.LASTLOGINDATE' | translate }}</mat-label>\r\n                        <input matInput value=\"{{row.lastLoginDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n                    <mat-form-field fxFlex=\"50\" appearance=\"legacy\">\r\n                        <mat-slide-toggle [(ngModel)]=\"row.isActive\"> </mat-slide-toggle>\r\n                        <span style=\"margin-left:10px;\">{{ 'USER.ISACTIVE' | translate }}</span>\r\n                        <textarea matInput style=\"display:none;\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.CREATEDDATE' | translate }}</mat-label>\r\n                        <input matInput value=\"{{row.createdDate | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.CREATEDUSERTEXT' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.createdUserText\" readonly>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div *ngIf=\"isNew!=true\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.UPDATEDDATE' | translate }}</mat-label>\r\n                        <input matInput value=\"{{row.updatedUser | date:'yyyy-MM-dd HH:mm' }}\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field fxFlex appearance=\"legacy\">\r\n                        <mat-label>{{ 'USER.UPDATEDUSERTEXT' | translate }}</mat-label>\r\n                        <input matInput [(ngModel)]=\"row.updatedUserText\" readonly>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n            </mat-card>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"{{'USER.USERROLETAB' | translate}}\">\r\n\r\n            <mat-form-field fxFlex appearance=\"legacy\" style=\"margin-bottom:0px; margin-left:20px; margin-top:10px;\">\r\n                <mat-label>{{ 'GENERAL.FILTERLIST' | translate }}</mat-label>\r\n                <input matInput [(ngModel)]=\"this.filterRole\">\r\n            </mat-form-field>\r\n            <mat-card>\r\n                <mat-selection-list>\r\n                    <mat-list-option *ngFor=\"let row of this.getFilteredRoles()\"     (click)=\"onUserRoleClick($event,row)\" [value]=\"row.roleId\" [selected]=\"row.isUserRole\">\r\n                        {{row.roleName}}\r\n                    </mat-list-option>\r\n                </mat-selection-list>\r\n            </mat-card>\r\n\r\n        </mat-tab>\r\n\r\n    </mat-tab-group>\r\n\r\n\r\n</mat-dialog-content>\r\n<mat-dialog-actions fxLayout=\"row\">\r\n    <div fxFlex=\"20%\">\r\n        <button mat-raised-button color=\"warn\" (click)=\"delete()\">Delete</button>\r\n    </div>\r\n    <div fxFlex=\"80%\" style=\"text-align:right;\">\r\n        <button mat-raised-button (click)=\"close()\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">Save</button>\r\n    </div>\r\n</mat-dialog-actions>\r\n\r\n\r\n","import { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { UserData } from \"./user.component\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { UserService } from './user.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: \"dialog-b\",\r\n    templateUrl: \"./user-dialog.component.html\"\r\n})\r\nexport class UserDialogComponent {\r\n\r\n    row: UserData;\r\n    isNew: boolean;\r\n    userRoleInfos: UserRoleInfo[];\r\n    filterRole: string;\r\n    constructor(public dialogRef: MatDialogRef<UserDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private userService: UserService,\r\n        private snackbar: MatSnackBar,\r\n        private translate: TranslateService,\r\n        private navigationService: NavigationService) {\r\n        this.row = data.row;\r\n        this.isNew = data.isNew;\r\n        this.filterRole = \"\";\r\n\r\n\r\n        this.getUserRoles();\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    rebuildForm() {\r\n\r\n    }\r\n\r\n    close() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"cancel\" });\r\n    }\r\n\r\n    delete() {\r\n\r\n        this.dialogRef.close({ data: this.row, operation: \"delete\" });\r\n    }\r\n\r\n    save() {\r\n\r\n        this.userService.saveWithRoles(this.row, this.userRoleInfos).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.snackbar.open('OK', response.message, {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n                this.dialogRef.close({ data: this.row, operation: \"save\" });\r\n            }\r\n            else {\r\n\r\n                this.snackbar.open('ERROR', response.message, {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getUserRoles() {\r\n\r\n        this.userService.getRoleInfo(this.row.userId).subscribe((response: any) => {\r\n\r\n            this.navigationService.sessionControl(response);\r\n\r\n            if (response.isSuccess) {\r\n\r\n                this.userRoleInfos = response.data;\r\n\r\n            } else {\r\n\r\n                this.snackbar.open('ERROR', response.message, {\r\n                    horizontalPosition: 'start',\r\n                    verticalPosition: 'bottom',\r\n                    duration: 1000\r\n                });\r\n\r\n            }\r\n\r\n        }, (error) => {\r\n\r\n            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                this.translate.instant(error), {\r\n                horizontalPosition: 'start',\r\n                verticalPosition: 'bottom',\r\n                duration: 2000\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    getFilteredRoles() {\r\n        if (this.filterRole && this.filterRole.trim()) {\r\n\r\n            return this.userRoleInfos.filter(i => i.roleName.includes(this.filterRole));\r\n        }\r\n        else {\r\n            return this.userRoleInfos;\r\n        }\r\n    }\r\n\r\n    onUserRoleClick(event: any, row) {\r\n        row.isUserRole = !row.isUserRole;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport class UserRoleInfo {\r\n\r\n    userId: number;\r\n    roleId: string;\r\n    roleDesc: string;\r\n    roleName: string;\r\n    isUserRole: boolean;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}","<mat-sidenav-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-sidenav-content style=\"min-height: 80vh; margin-top: -8px;\">\r\n        <div class=\"ml-8 mr-8 mt-8 pb-16\">\r\n\r\n            <div class=\"biruni-action-toolbar\">\r\n\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"newItemDialog()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>filter_list</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button color=\"primary\" (click)=\"downloadData()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>download</mat-icon>\r\n                </button>\r\n\r\n                <!--<button mat-icon-button color=\"primary\" (click)=\"sidenav.toggle()\" style=\"margin-left:10px;\">\r\n                    <mat-icon>upload</mat-icon>\r\n                </button>-->\r\n            </div>\r\n\r\n            <div class=\"mat-elevation-z8\" [hidden]=\"this.showSpinner\">\r\n                <mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"sortData($event)\">\r\n                    <ng-container matColumnDef=\"Actions\">\r\n                        <mat-header-cell *matHeaderCellDef> {{'GENERAL.ACTIONS' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n                            <button mat-icon-button matTooltip=\"Click to Edit\" (click)=\"editItemDialog(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n                            </button>\r\n                            <button mat-icon-button matTooltip=\"Click to Delete\" (click)=\"delete(row)\" class=\"iconbutton\">\r\n                                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n                            </button>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"userId\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.USERID' | translate}}   </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UserId\">\r\n                            {{row.userId}}\r\n                           \r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"userName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'USER.USERNAME' | translate}}</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UserName\"> {{row.userName}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"email\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.EMAIL' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Email\"> {{row.email}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"password\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.PASSWORD' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Password\"> {{row.password}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"firstName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.FIRSTNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"FirstName\"> {{row.firstName}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"lastName\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.LASTNAME' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"Last Name\"> {{row.lastName}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"isActive\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.ISACTIVE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"IsActive\">\r\n                            <mat-slide-toggle [(ngModel)]=\"row.isActive\" disabled> </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedDate\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'USER.UPDATEDDATE' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"updatedDate\"><small> {{row.updatedDate | date:'yyyy-MM-dd HH:mm'}} </small> </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"updatedUserText\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> {{'USER.UPDATEDUSERTEXT' | translate}} </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" data-label=\"UpdatedUser\"> {{row.updatedUserText}} </mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                </mat-table>\r\n                <mat-paginator [length]=\"this.queryInfo.pager.totalCount\"\r\n                               [pageSize]=\"this.queryInfo.pager.pageSize\"\r\n                               (page)=\"pageEvent=$event; onPaginateChange($event)\"\r\n                               [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\r\n            </div>\r\n            <mat-spinner *ngIf=\"this.showSpinner === true\" style=\"margin:0 auto; margin-top:150px;\"></mat-spinner>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n    <mat-sidenav #sidenav mode=\"over\"\r\n                 class=\"biruni-filter-sidebar\" position=\"end\">\r\n\r\n        <div style=\"margin-bottom:10px;\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"filterData()\" [style.width.%]=\"45\" style=\"margin-right:10px;\">{{'FILTER' | translate}}</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"clearFilter()\" [style.width.%]=\"45\">{{'CLEARFILTER' | translate}}</button>\r\n        </div>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'USER.USERNAME'| translate}}</mat-label>\r\n            <input matInput [(ngModel)]=\"filter.userName\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'USER.EMAIL'| translate}}</mat-label>\r\n            <input matInput [(ngModel)]=\"filter.email\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'USER.FIRSTNAME'| translate}}</mat-label>\r\n            <input matInput [(ngModel)]=\"filter.firstName\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"legacy\">\r\n            <mat-label>{{'USER.LASTNAME'| translate}}</mat-label>\r\n            <input matInput [(ngModel)]=\"filter.lastName\">\r\n        </mat-form-field>\r\n\r\n        <mat-slide-toggle [(ngModel)]=\"filter.isActive\">{{'USER.ISACTIVE'| translate}}</mat-slide-toggle>\r\n\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'USER.LASTLOGINDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"lastLoginDatepicker\" [(ngModel)]=\"filter.lastLoginDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"lastLoginDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #lastLoginDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'USER.LASTLOGINDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"lastLoginDate2picker\" [(ngModel)]=\"filter.lastLoginDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"lastLoginDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #lastLoginDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'USER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDatepicker\" [(ngModel)]=\"filter.createdDate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDatepicker></mat-datepicker>\r\n            </mat-form-field>\r\n            &nbsp;\r\n            <mat-form-field [style.width.%]=\"45\" appearance=\"legacy\">\r\n                <mat-label>{{'USER.CREATEDDATE'| translate}}</mat-label>\r\n                <input matInput [matDatepicker]=\"createdDate2picker\" [(ngModel)]=\"filter.createdDate2\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate2picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate2picker></mat-datepicker>\r\n            </mat-form-field>\r\n        </div>\r\n    </mat-sidenav>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { UserService } from './user.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { UserDialogComponent } from './user-dialog.component';\r\nimport { QueryInfo, Pager } from '../../../shared/query-info';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from \"environments/environment\";\r\nimport { ComfirmDialogComponent } from \"../../../shared/components/comfirm/comfirm.component\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationService } from '../../../shared/services/navigation.service'\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'user-table',\r\n    templateUrl: './user.component.html',\r\n    styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n    queryInfo: QueryInfo;\r\n    showSpinner: boolean = false;\r\n    displayedColumns: string[] = [];\r\n    dataSource: any;\r\n    filter: UserFilter;\r\n    pageEvent: PageEvent;\r\n    data: Array<any>;\r\n    jokes: any;\r\n    currentJoke: any;\r\n\r\n\r\n    constructor(private userService: UserService,\r\n        public dialog: MatDialog,\r\n        public translate: TranslateService,\r\n        private snackbar: MatSnackBar,\r\n        private navigationService: NavigationService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.filter = new UserFilter();\r\n        this.queryInfo = new QueryInfo();\r\n        this.queryInfo.pager = new Pager();\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.queryInfo.pager.pageSize = 10;\r\n        this.queryInfo.pager.totalCount = 0;\r\n        this.data = [];\r\n\r\n        this.displayedColumns = this.getDataConf().filter((x) => x.showColumn == true).map((c) => c.prop)\r\n        this.getData(false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    clearFilter() {\r\n        this.filter = new UserFilter();\r\n    }\r\n\r\n    filterData() {\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    downloadData() {\r\n        this.getData(true);\r\n    }\r\n\r\n    sortData($event) {\r\n        console.log($event);\r\n\r\n        this.queryInfo.orderby = $event.active;\r\n        if ($event.direction == 'desc') this.queryInfo.orderby = '-' + this.queryInfo.orderby;\r\n        this.queryInfo.pager.currentPage = 0;\r\n        this.getData(false);\r\n    }\r\n\r\n    onPaginateChange(event: PageEvent) {\r\n        this.queryInfo.pager.currentPage = event.pageIndex;\r\n        this.queryInfo.pager.pageSize = event.pageSize;\r\n        this.getData(false);\r\n    }\r\n\r\n    getData(isExport: boolean) {\r\n\r\n        this.showSpinner = true;\r\n        let columnInfo = null;\r\n\r\n        if (isExport) {\r\n\r\n            columnInfo = this.getDataConf().filter(x => x.isExport == true)\r\n                .map((x) => ({\r\n                    prop: x.prop,\r\n                    localText: this.translate.instant('USER.' + x.translate)\r\n                }));\r\n\r\n        }\r\n\r\n\r\n        this.userService.getData(this.filter, this.queryInfo, columnInfo, isExport)\r\n            .subscribe((response: any) => {\r\n\r\n                this.navigationService.sessionControl(response);\r\n\r\n                this.showSpinner = false;\r\n\r\n                if (response.isSuccess) {\r\n\r\n\r\n                    if (isExport) {\r\n                        window.open(environment.apiURL + \"/Download/FromCacheByKey?key=\" + response.key, '_blank');\r\n                    }\r\n                    else {\r\n\r\n                        this.queryInfo.pager.totalCount = response.totalCount;\r\n                        this.dataSource = new MatTableDataSource(response.data);\r\n                    }\r\n\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(response.error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n\r\n            },\r\n                (error) => {\r\n\r\n                    this.showSpinner = false;\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                        this.translate.instant(error), {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n\r\n                }\r\n\r\n            );\r\n    }\r\n\r\n    newItemDialog() {\r\n\r\n        let emptyData = new UserData();\r\n\r\n        emptyData.userId = 0;\r\n        emptyData.userName = '';\r\n        emptyData.email = '';\r\n        emptyData.password = '';\r\n        emptyData.firstName = '';\r\n        emptyData.lastName = '';\r\n        emptyData.isActive = false;\r\n        emptyData.lastLoginDate = new Date();\r\n        emptyData.lastLoginIp = '';\r\n        emptyData.createdDate = new Date();\r\n        emptyData.createdUser = 0;\r\n        emptyData.createdUserText = '';\r\n        emptyData.updatedDate = new Date();\r\n        emptyData.updatedUser = 0;\r\n        emptyData.updatedUserText = '';\r\n\r\n        this.openDialog(emptyData, true);\r\n    }\r\n\r\n    editItemDialog(row: UserData) {\r\n        this.openDialog(row, false);\r\n    }\r\n\r\n    openDialog(row: UserData, isNew: boolean) {\r\n\r\n        this.dialog.open(UserDialogComponent, {\r\n            width: '100%',\r\n            hasBackdrop: true,\r\n            disableClose: true,\r\n            data: {\r\n                row: row,\r\n                isNew: isNew\r\n            }\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n\r\n                if (response.operation == \"cancel\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n                else if (response.operation == \"delete\") {\r\n                    this.delete(response.data);\r\n                }\r\n\r\n                else if (response.operation == \"save\") {\r\n                    this.getData(false);\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n\r\n    delete(data: UserData) {\r\n\r\n        let deleteRow = data;\r\n        this.dialog.open(ComfirmDialogComponent, {\r\n            hasBackdrop: true\r\n        }).afterClosed()\r\n            .subscribe(response => {\r\n                if (response.comfirm == true) {\r\n                    this.userService.delete(deleteRow).subscribe((response: any) => {\r\n\r\n                        this.navigationService.sessionControl(response);\r\n\r\n                        if (response.isSuccess) {\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.SUCCESS\"),\r\n                                this.translate.instant(response.message), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                            this.getData(false);\r\n\r\n                        }\r\n                        else if (!response.isSuccess) {\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(response.error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        }\r\n\r\n                    },\r\n                        (error) => {\r\n\r\n                            this.showSpinner = false;\r\n\r\n                            this.snackbar.open(this.translate.instant(\"GENERAL.ERROR\"),\r\n                                this.translate.instant(error), {\r\n                                horizontalPosition: 'start',\r\n                                verticalPosition: 'bottom',\r\n                                duration: 2000\r\n                            });\r\n\r\n                        }\r\n                    );\r\n                }\r\n                else {\r\n\r\n                    this.snackbar.open(this.translate.instant(\"GENERAL.CANCELED\"), \"\", {\r\n                        horizontalPosition: 'start',\r\n                        verticalPosition: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n\r\n    userChange($event, row, field) {\r\n        row[field] = $event;\r\n    }\r\n\r\n    //doFilter() {\r\n    //    if ((typeof this.currentJoke) == \"string\")\r\n    //        this.userService.getUserListForCombo(this.currentJoke, 0).subscribe((response: any) => {\r\n    //            this.navigationService.sessionControl(response);\r\n    //            this.data = response.data;\r\n    //        });\r\n\r\n    //}\r\n\r\n    //autoCompleteDisplay(item: any): string {\r\n    //    if (item == undefined) { return }\r\n    //    return item.value + ' - ' + item.displayText;\r\n    //}\r\n\r\n    //filter2(values) {\r\n    //    return values.filter(joke =>\r\n    //        // used 'includes' here for demo, you'd want to probably use 'indexOf'\r\n    //        joke.joke.toLowerCase().includes(this.currentJoke))\r\n    //}\r\n\r\n\r\n\r\n\r\n    getDataConf() {\r\n        return [\r\n            {\r\n                prop: 'Actions',\r\n                translate: 'ACTIONS',\r\n                showColumn: true,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'userId',\r\n                translate: 'USERID',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'userName',\r\n                translate: 'USERNAME',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'password',\r\n                translate: 'PASSWORD',\r\n                showColumn: false,\r\n                isExport: false,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'email',\r\n                translate: 'EMAIL',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'firstName',\r\n                translate: 'FIRSTNAME',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'lastName',\r\n                translate: 'LASTNAME',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'isActive',\r\n                translate: 'ISACTIVE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n            ,\r\n            {\r\n                prop: 'updatedDate',\r\n                translate: 'UPDATEDDATE',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            },\r\n            {\r\n                prop: 'updatedUserText',\r\n                translate: 'UPDATEDUSERTEXT',\r\n                showColumn: true,\r\n                isExport: true,\r\n                localText: ''\r\n            }\r\n\r\n\r\n        ];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class UserData {\r\n\r\n    userId: number;\r\n    userName: string;\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    isActive: boolean;\r\n    lastLoginDate: Date;\r\n    lastLoginIp: string;\r\n    createdDate: Date;\r\n    createdUser: number;\r\n    createdUserText: string;\r\n    updatedDate: Date;\r\n    updatedUser: number;\r\n    updatedUserText: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class UserFilter {\r\n\r\n    userId: number;\r\n    userName: string;\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    isActive: boolean;\r\n    lastLoginDate: Date;\r\n    lastLoginDate2: Date;\r\n    lastLoginIp: string;\r\n    createdDate: Date;\r\n    createdDate2: Date;\r\n    createdUser: number;\r\n    updatedDate: Date;\r\n    updatedDate2: Date;\r\n    updatedUser: number;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserData, UserFilter } from \"./user.component\";\r\nimport { UserRoleInfo } from \"./user-dialog.component\";\r\nimport { QueryInfo } from \"../../../shared/query-info\";\r\nimport { JwtAuthService } from \"../../../shared/services/auth/jwt-auth.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n    endPointBase = environment.apiURL + \"/User/\";\r\n\r\n    constructor(private httpClient: HttpClient, private authService: JwtAuthService) { }\r\n\r\n    save(data: UserData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"SaveUser\" + \"?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    saveWithRoles(data: UserData, roleData: UserRoleInfo[]): Observable<object> {\r\n\r\n        let userWithRole = {\r\n            user: data,\r\n            roleInfos: roleData,\r\n           \r\n        }\r\n        return this.httpClient.post(this.endPointBase + \"SaveUserWithRoles\" + \"?session=\" + this.authService.getToken(), userWithRole);\r\n    }\r\n\r\n    delete(data: UserData): Observable<object> {\r\n        return this.httpClient.post(this.endPointBase + \"DeleteUser?session=\" + this.authService.getToken(), data);\r\n    }\r\n\r\n    getData(filter: UserFilter, queryInfo: QueryInfo, columnInfos: any, isExport: boolean): Observable<any> {\r\n\r\n        let filterData = {\r\n            filter: filter,\r\n            queryInfo: queryInfo,\r\n            isExport: isExport,\r\n            columnInfos: columnInfos\r\n        }\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetUserList\" + \"?session=\" + this.authService.getToken(), filterData);\r\n    }\r\n\r\n    getRoleInfo(id: number): Observable<any>{\r\n\r\n        return this.httpClient.post(this.endPointBase + \"GetRoleInfo\" + \"?session=\" + this.authService.getToken(), { userId: id });\r\n\r\n    }\r\n\r\n    getUserListForCombo(search: string, value: number) {\r\n        return this.httpClient.post(this.endPointBase + \"GetListForCombo\" + \"?session=\" + this.authService.getToken(), { userName: search , userId : value });\r\n    }\r\n\r\n    getData2() {\r\n        return this.httpClient.get<any>('https://api.icndb.com/jokes/random/5');\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\nimport { UserComponent } from './User/user.component';\r\n\r\nimport { ComfirmDialogComponent } from \"../../shared/components/comfirm/comfirm.component\";\r\nimport { SystemRoutes } from './system.routing';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { UserDialogComponent } from './User/user-dialog.component';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\n\r\nimport { SessionService } from \"../../shared/session.service\";\r\nimport { RoleDialogComponent } from './Role/role-dialog.component';\r\nimport { RoleComponent } from './Role/role.component';\r\nimport { AuthComponent } from './Auth/auth.component';\r\nimport { AuthDialogComponent } from './Auth/auth-dialog.component';\r\nimport { UserRoleComponent } from './UserRole/userrole.component';\r\nimport { UserRoleDialogComponent } from './UserRole/userrole-dialog.component';\r\nimport { RoleAuthComponent } from './RoleAuth/roleauth.component';\r\nimport { RoleAuthDialogComponent } from './RoleAuth/roleauth-dialog.component';\r\nimport { MenuComponent } from './Menu/menu.component';\r\nimport { MenuDialogComponent } from './Menu/menu-dialog.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { EmailComponent } from './Email/email.component';\r\nimport { EmailDialogComponent } from './Email/email-dialog.component';\r\nimport { EmailConfigComponent } from './EmailConfig/emailconfig.component';\r\nimport { EmailConfigDialogComponent } from './EmailConfig/emailconfig-dialog.component';\r\nimport { LogComponent } from './Log/log.component';\r\nimport { LogDialogComponent } from './Log/log-dialog.component';\r\n\r\nimport { EmailAttachmentComponent } from './EmailAttachment/emailattachment.component';\r\nimport { EmailAttachmentDialogComponent } from './EmailAttachment/emailattachment-dialog.component';\r\nimport { ParameterComponent } from './Parameter/parameter.component';\r\nimport { ParameterDialogComponent } from './Parameter/parameter-dialog.component';\r\nimport { CounterComponent } from './Counter/counter.component';\r\nimport { CounterDialogComponent } from './Counter/counter-dialog.component';\r\n\r\n\r\n//@Component_Imports\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatSidenavModule,\r\n        MatGridListModule,\r\n        MatButtonModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSlideToggleModule,\r\n        MatSelectModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatDialogModule,\r\n        FlexLayoutModule,\r\n        HttpClientModule,\r\n        CommonModule,\r\n        MatInputModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        NgxDatatableModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        MatTabsModule,\r\n        MatListModule,\r\n        MatCardModule,\r\n        MatAutocompleteModule,\r\n        RouterModule.forChild(SystemRoutes)\r\n    ],\r\n\r\n    declarations: [\r\n        UserComponent,\r\n        UserDialogComponent,\r\n        RoleComponent,\r\n        RoleDialogComponent,\r\n        ComfirmDialogComponent,\r\n        AuthComponent,\r\n        AuthDialogComponent,\r\n        RoleAuthComponent,\r\n        RoleAuthDialogComponent,\r\n        UserRoleComponent,\r\n        UserRoleDialogComponent,\r\n        MenuComponent,\r\n        MenuDialogComponent,\r\n        EmailComponent,\r\n        EmailDialogComponent,\r\n        EmailConfigComponent,\r\n        EmailConfigDialogComponent,\r\n        LogComponent,\r\n        LogDialogComponent,\r\n        EmailAttachmentComponent,\r\n        EmailAttachmentDialogComponent,\r\n        ParameterComponent,\r\n        ParameterDialogComponent,\r\n        CounterDialogComponent,\r\n        CounterComponent,\r\n        //FastAutoCompleteComponent\r\n        //@Component_Declarations\r\n    ],\r\n    providers: [\r\n        SessionService\r\n    ]\r\n})\r\nexport class SystemModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { UserComponent } from './User/user.component';\r\nimport { RoleComponent } from './Role/role.component';\r\nimport { AuthComponent } from './Auth/auth.component';\r\nimport { UserRoleComponent } from './UserRole/userrole.component';\r\nimport { RoleAuthComponent } from './RoleAuth/roleauth.component';\r\nimport { MenuComponent } from './Menu/menu.component';\r\nimport { EmailComponent } from './Email/email.component';\r\nimport { EmailConfigComponent } from './EmailConfig/emailconfig.component';\r\nimport { LogComponent } from './Log/log.component';\r\nimport { EmailAttachmentComponent } from './EmailAttachment/emailattachment.component';\r\nimport { ParameterComponent } from './Parameter/parameter.component';\r\nimport { CounterComponent } from './Counter/counter.component';\r\n//@Component_Imports\r\n\r\n\r\nexport const SystemRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'user',\r\n                component: UserComponent,\r\n                data: { title: 'USER.USERMENU', breadcrumb: 'USER.USERMENU' }\r\n            }\r\n            , {\r\n                path: 'role',\r\n                component: RoleComponent,\r\n                data: { title: 'ROLE.ROLEMENU', breadcrumb: 'ROLE.ROLEMENU' }\r\n            },\r\n             {\r\n                path: 'auth',\r\n                component: AuthComponent,\r\n                 data: { title: 'AUTH.AUTHMENU', breadcrumb: 'AUTH.AUTHMENU' }\r\n            }\r\n            , {\r\n                path: 'userrole',\r\n                component: UserRoleComponent,\r\n                data: { title: 'USERROLE.USERROLEMENU', breadcrumb: 'USERROLE.USERROLEMENU' }\r\n            }\r\n            , {\r\n                path: 'roleauth',\r\n                component: RoleAuthComponent,\r\n                data: { title: 'ROLEAUTH.ROLEAUTHMENU', breadcrumb: 'ROLEAUTH.ROLEAUTHMENU' }\r\n            }\r\n            , {\r\n                path: 'menu',\r\n                component: MenuComponent,\r\n                data: { title: 'MENU.MENUMENU', breadcrumb: 'MENU.MENUMENU' }\r\n            },\r\n            {\r\n                path: 'email',\r\n                component: EmailComponent,\r\n                data: { title: 'EMAIL.EMAILMENU', breadcrumb: 'EMAIL.EMAILMENU' }\r\n            },\r\n            {\r\n                path: 'emailconfig',\r\n                component: EmailConfigComponent,\r\n                data: { title: 'EMAILCONFIG.EMAILCONFIGMENU', breadcrumb: 'EMAILCONFIG.EMAILCONFIGMENU' }\r\n            },\r\n            {\r\n                path: 'log',\r\n                component: LogComponent,\r\n                data: { title: 'LOG.LOGMENU', breadcrumb: 'LOG.LOGMENU' }\r\n            }\r\n            ,\r\n            {\r\n                path: 'emailattachment',\r\n                component: EmailAttachmentComponent,\r\n                data: { title: 'EMAILATTACHMENT.EMAILATTACHMENTMENU', breadcrumb: 'EMAILATTACHMENT.EMAILATTACHMENTMENU' }\r\n            },\r\n            {\r\n                path: 'parameter',\r\n                component: ParameterComponent,\r\n                data: { title: 'PARAMETER.PARAMETERMENU', breadcrumb: 'PARAMETER.PARAMETERMENU' }\r\n            },\r\n            {\r\n                path: 'counter',\r\n                component: CounterComponent,\r\n                data: { title: 'COUNTER.COUNTERMENU', breadcrumb: 'COUNTER.COUNTERMENU' }\r\n            }\r\n            //@Component_Routes\r\n        ]\r\n    }\r\n];\r\n"]}